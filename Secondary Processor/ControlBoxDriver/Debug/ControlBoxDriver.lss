
ControlBoxDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000146  00800200  00003b3c  00003bd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000007a7  00800346  00800346  00003d16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003d16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003d74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000aa8  00000000  00000000  00003db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001367d  00000000  00000000  0000485c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004a75  00000000  00000000  00017ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005a13  00000000  00000000  0001c94e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001fd8  00000000  00000000  00022364  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004405  00000000  00000000  0002433c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000a3b2  00000000  00000000  00028741  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000ae0  00000000  00000000  00032af3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a3 c0       	rjmp	.+326    	; 0x148 <__ctors_end>
       2:	00 00       	nop
       4:	cb c0       	rjmp	.+406    	; 0x19c <__bad_interrupt>
       6:	00 00       	nop
       8:	c9 c0       	rjmp	.+402    	; 0x19c <__bad_interrupt>
       a:	00 00       	nop
       c:	c7 c0       	rjmp	.+398    	; 0x19c <__bad_interrupt>
       e:	00 00       	nop
      10:	c5 c0       	rjmp	.+394    	; 0x19c <__bad_interrupt>
      12:	00 00       	nop
      14:	c3 c0       	rjmp	.+390    	; 0x19c <__bad_interrupt>
      16:	00 00       	nop
      18:	c1 c0       	rjmp	.+386    	; 0x19c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	bf c0       	rjmp	.+382    	; 0x19c <__bad_interrupt>
      1e:	00 00       	nop
      20:	bd c0       	rjmp	.+378    	; 0x19c <__bad_interrupt>
      22:	00 00       	nop
      24:	bb c0       	rjmp	.+374    	; 0x19c <__bad_interrupt>
      26:	00 00       	nop
      28:	b9 c0       	rjmp	.+370    	; 0x19c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b7 c0       	rjmp	.+366    	; 0x19c <__bad_interrupt>
      2e:	00 00       	nop
      30:	b5 c0       	rjmp	.+362    	; 0x19c <__bad_interrupt>
      32:	00 00       	nop
      34:	b3 c0       	rjmp	.+358    	; 0x19c <__bad_interrupt>
      36:	00 00       	nop
      38:	b1 c0       	rjmp	.+354    	; 0x19c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	af c0       	rjmp	.+350    	; 0x19c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ad c0       	rjmp	.+346    	; 0x19c <__bad_interrupt>
      42:	00 00       	nop
      44:	ab c0       	rjmp	.+342    	; 0x19c <__bad_interrupt>
      46:	00 00       	nop
      48:	a9 c0       	rjmp	.+338    	; 0x19c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a7 c0       	rjmp	.+334    	; 0x19c <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 0a 13 	jmp	0x2614	; 0x2614 <__vector_20>
      54:	a3 c0       	rjmp	.+326    	; 0x19c <__bad_interrupt>
      56:	00 00       	nop
      58:	a1 c0       	rjmp	.+322    	; 0x19c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 bb 12 	jmp	0x2576	; 0x2576 <__vector_23>
      60:	9d c0       	rjmp	.+314    	; 0x19c <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 c5 13 	jmp	0x278a	; 0x278a <__vector_25>
      68:	0c 94 f7 13 	jmp	0x27ee	; 0x27ee <__vector_26>
      6c:	97 c0       	rjmp	.+302    	; 0x19c <__bad_interrupt>
      6e:	00 00       	nop
      70:	95 c0       	rjmp	.+298    	; 0x19c <__bad_interrupt>
      72:	00 00       	nop
      74:	93 c0       	rjmp	.+294    	; 0x19c <__bad_interrupt>
      76:	00 00       	nop
      78:	91 c0       	rjmp	.+290    	; 0x19c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8f c0       	rjmp	.+286    	; 0x19c <__bad_interrupt>
      7e:	00 00       	nop
      80:	8d c0       	rjmp	.+282    	; 0x19c <__bad_interrupt>
      82:	00 00       	nop
      84:	8b c0       	rjmp	.+278    	; 0x19c <__bad_interrupt>
      86:	00 00       	nop
      88:	89 c0       	rjmp	.+274    	; 0x19c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	87 c0       	rjmp	.+270    	; 0x19c <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 6c 14 	jmp	0x28d8	; 0x28d8 <__vector_36>
      94:	0c 94 9d 14 	jmp	0x293a	; 0x293a <__vector_37>
      98:	81 c0       	rjmp	.+258    	; 0x19c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	7f c0       	rjmp	.+254    	; 0x19c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	7d c0       	rjmp	.+250    	; 0x19c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	7b c0       	rjmp	.+246    	; 0x19c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	79 c0       	rjmp	.+242    	; 0x19c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	77 c0       	rjmp	.+238    	; 0x19c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	75 c0       	rjmp	.+234    	; 0x19c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	73 c0       	rjmp	.+230    	; 0x19c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	71 c0       	rjmp	.+226    	; 0x19c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	6f c0       	rjmp	.+222    	; 0x19c <__bad_interrupt>
      be:	00 00       	nop
      c0:	6d c0       	rjmp	.+218    	; 0x19c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	6b c0       	rjmp	.+214    	; 0x19c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	69 c0       	rjmp	.+210    	; 0x19c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 0f 15 	jmp	0x2a1e	; 0x2a1e <__vector_51>
      d0:	0c 94 41 15 	jmp	0x2a82	; 0x2a82 <__vector_52>
      d4:	63 c0       	rjmp	.+198    	; 0x19c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 c8 15 	jmp	0x2b90	; 0x2b90 <__vector_54>
      dc:	0c 94 03 16 	jmp	0x2c06	; 0x2c06 <__vector_55>
      e0:	5d c0       	rjmp	.+186    	; 0x19c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	f4 02       	muls	r31, r20
      e6:	d3 02       	muls	r29, r19
      e8:	d6 02       	muls	r29, r22
      ea:	d9 02       	muls	r29, r25
      ec:	dc 02       	muls	r29, r28
      ee:	df 02       	muls	r29, r31
      f0:	e2 02       	muls	r30, r18
      f2:	e5 02       	muls	r30, r21
      f4:	e8 02       	muls	r30, r24
      f6:	eb 02       	muls	r30, r27
      f8:	ee 02       	muls	r30, r30
      fa:	21 03       	mulsu	r18, r17
      fc:	00 03       	mulsu	r16, r16
      fe:	03 03       	mulsu	r16, r19
     100:	06 03       	mulsu	r16, r22
     102:	09 03       	fmul	r16, r17
     104:	0c 03       	fmul	r16, r20
     106:	0f 03       	fmul	r16, r23
     108:	12 03       	mulsu	r17, r18
     10a:	15 03       	mulsu	r17, r21
     10c:	18 03       	fmul	r17, r16
     10e:	1b 03       	fmul	r17, r19
     110:	b8 08       	sbc	r11, r8
     112:	bd 08       	sbc	r11, r13
     114:	c0 08       	sbc	r12, r0
     116:	c4 08       	sbc	r12, r4
     118:	c7 08       	sbc	r12, r7
     11a:	db 08       	sbc	r13, r11
     11c:	d2 08       	sbc	r13, r2
     11e:	d5 08       	sbc	r13, r5
     120:	46 09       	sbc	r20, r6
     122:	4b 09       	sbc	r20, r11
     124:	4e 09       	sbc	r20, r14
     126:	52 09       	sbc	r21, r2
     128:	61 09       	sbc	r22, r1
     12a:	55 09       	sbc	r21, r5
     12c:	58 09       	sbc	r21, r8
     12e:	5b 09       	sbc	r21, r11
     130:	a0 13       	cpse	r26, r16
     132:	a3 13       	cpse	r26, r19
     134:	a7 13       	cpse	r26, r23
     136:	ab 13       	cpse	r26, r27
     138:	af 13       	cpse	r26, r31
     13a:	b3 13       	cpse	r27, r19
     13c:	b7 13       	cpse	r27, r23
     13e:	bb 13       	cpse	r27, r27

00000140 <__ctors_start>:
     140:	af 01       	movw	r20, r30
     142:	3a 07       	cpc	r19, r26
     144:	1f 12       	cpse	r1, r31
     146:	ab 12       	cpse	r10, r27

00000148 <__ctors_end>:
     148:	11 24       	eor	r1, r1
     14a:	1f be       	out	0x3f, r1	; 63
     14c:	cf ef       	ldi	r28, 0xFF	; 255
     14e:	d1 e2       	ldi	r29, 0x21	; 33
     150:	de bf       	out	0x3e, r29	; 62
     152:	cd bf       	out	0x3d, r28	; 61

00000154 <__do_copy_data>:
     154:	13 e0       	ldi	r17, 0x03	; 3
     156:	a0 e0       	ldi	r26, 0x00	; 0
     158:	b2 e0       	ldi	r27, 0x02	; 2
     15a:	ec e3       	ldi	r30, 0x3C	; 60
     15c:	fb e3       	ldi	r31, 0x3B	; 59
     15e:	00 e0       	ldi	r16, 0x00	; 0
     160:	0b bf       	out	0x3b, r16	; 59
     162:	02 c0       	rjmp	.+4      	; 0x168 <__do_copy_data+0x14>
     164:	07 90       	elpm	r0, Z+
     166:	0d 92       	st	X+, r0
     168:	a6 34       	cpi	r26, 0x46	; 70
     16a:	b1 07       	cpc	r27, r17
     16c:	d9 f7       	brne	.-10     	; 0x164 <__do_copy_data+0x10>

0000016e <__do_clear_bss>:
     16e:	2a e0       	ldi	r18, 0x0A	; 10
     170:	a6 e4       	ldi	r26, 0x46	; 70
     172:	b3 e0       	ldi	r27, 0x03	; 3
     174:	01 c0       	rjmp	.+2      	; 0x178 <.do_clear_bss_start>

00000176 <.do_clear_bss_loop>:
     176:	1d 92       	st	X+, r1

00000178 <.do_clear_bss_start>:
     178:	ad 3e       	cpi	r26, 0xED	; 237
     17a:	b2 07       	cpc	r27, r18
     17c:	e1 f7       	brne	.-8      	; 0x176 <.do_clear_bss_loop>

0000017e <__do_global_ctors>:
     17e:	10 e0       	ldi	r17, 0x00	; 0
     180:	c4 ea       	ldi	r28, 0xA4	; 164
     182:	d0 e0       	ldi	r29, 0x00	; 0
     184:	04 c0       	rjmp	.+8      	; 0x18e <__do_global_ctors+0x10>
     186:	21 97       	sbiw	r28, 0x01	; 1
     188:	fe 01       	movw	r30, r28
     18a:	0e 94 d0 18 	call	0x31a0	; 0x31a0 <__tablejump2__>
     18e:	c0 3a       	cpi	r28, 0xA0	; 160
     190:	d1 07       	cpc	r29, r17
     192:	c9 f7       	brne	.-14     	; 0x186 <__do_global_ctors+0x8>
     194:	0e 94 65 0e 	call	0x1cca	; 0x1cca <main>
     198:	0c 94 9c 1d 	jmp	0x3b38	; 0x3b38 <_exit>

0000019c <__bad_interrupt>:
     19c:	31 cf       	rjmp	.-414    	; 0x0 <__vectors>

0000019e <_ZN14Communications10initializeEjP6Memory>:
}

long Communications::mapVal(long x, long in_min, long in_max, long out_min, long out_max)
{
	return  (x - in_min) * (out_max - out_min ) / (in_max - in_min) + out_min;
     19e:	fc 01       	movw	r30, r24
     1a0:	51 83       	std	Z+1, r21	; 0x01
     1a2:	40 83       	st	Z, r20
     1a4:	88 e0       	ldi	r24, 0x08	; 8
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_Z16uart1_initializej>
     1ac:	48 ec       	ldi	r20, 0xC8	; 200
     1ae:	50 e0       	ldi	r21, 0x00	; 0
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	70 e0       	ldi	r23, 0x00	; 0
     1b4:	86 e7       	ldi	r24, 0x76	; 118
     1b6:	93 e0       	ldi	r25, 0x03	; 3
     1b8:	0e 94 72 12 	call	0x24e4	; 0x24e4 <_ZN6Clocks11setIntervalEl>
     1bc:	4c e2       	ldi	r20, 0x2C	; 44
     1be:	51 e0       	ldi	r21, 0x01	; 1
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	70 e0       	ldi	r23, 0x00	; 0
     1c4:	8a e6       	ldi	r24, 0x6A	; 106
     1c6:	93 e0       	ldi	r25, 0x03	; 3
     1c8:	0e 94 72 12 	call	0x24e4	; 0x24e4 <_ZN6Clocks11setIntervalEl>
     1cc:	40 ed       	ldi	r20, 0xD0	; 208
     1ce:	57 e0       	ldi	r21, 0x07	; 7
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	70 e0       	ldi	r23, 0x00	; 0
     1d4:	8e e5       	ldi	r24, 0x5E	; 94
     1d6:	93 e0       	ldi	r25, 0x03	; 3
     1d8:	0e 94 72 12 	call	0x24e4	; 0x24e4 <_ZN6Clocks11setIntervalEl>
     1dc:	42 ef       	ldi	r20, 0xF2	; 242
     1de:	53 e0       	ldi	r21, 0x03	; 3
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	82 e5       	ldi	r24, 0x52	; 82
     1e6:	93 e0       	ldi	r25, 0x03	; 3
     1e8:	0c 94 72 12 	jmp	0x24e4	; 0x24e4 <_ZN6Clocks11setIntervalEl>
     1ec:	08 95       	ret

000001ee <_ZN14Communications5parseEh>:
     1ee:	cf 92       	push	r12
     1f0:	df 92       	push	r13
     1f2:	ef 92       	push	r14
     1f4:	ff 92       	push	r15
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	00 d0       	rcall	.+0      	; 0x200 <_ZN14Communications5parseEh+0x12>
     200:	1f 92       	push	r1
     202:	cd b7       	in	r28, 0x3d	; 61
     204:	de b7       	in	r29, 0x3e	; 62
     206:	6c 01       	movw	r12, r24
     208:	7c 01       	movw	r14, r24
     20a:	8b e9       	ldi	r24, 0x9B	; 155
     20c:	e8 0e       	add	r14, r24
     20e:	f1 1c       	adc	r15, r1
     210:	c7 01       	movw	r24, r14
     212:	14 d1       	rcall	.+552    	; 0x43c <_ZN18FastTransferParser4pushEh>
     214:	c7 01       	movw	r24, r14
     216:	72 d1       	rcall	.+740    	; 0x4fc <_ZNK18FastTransferParser14valid_messagesEv>
     218:	88 23       	and	r24, r24
     21a:	d1 f0       	breq	.+52     	; 0x250 <_ZN14Communications5parseEh+0x62>
     21c:	c7 01       	movw	r24, r14
     21e:	85 d1       	rcall	.+778    	; 0x52a <_ZNK18FastTransferParser12num_messagesEv>
     220:	08 2f       	mov	r16, r24
     222:	88 23       	and	r24, r24
     224:	91 f0       	breq	.+36     	; 0x24a <_ZN14Communications5parseEh+0x5c>
     226:	10 e0       	ldi	r17, 0x00	; 0
     228:	82 e0       	ldi	r24, 0x02	; 2
     22a:	c8 0e       	add	r12, r24
     22c:	d1 1c       	adc	r13, r1
     22e:	61 2f       	mov	r22, r17
     230:	c7 01       	movw	r24, r14
     232:	1d d1       	rcall	.+570    	; 0x46e <_ZNK18FastTransferParser11get_messageEh>
     234:	69 83       	std	Y+1, r22	; 0x01
     236:	7a 83       	std	Y+2, r23	; 0x02
     238:	8b 83       	std	Y+3, r24	; 0x03
     23a:	be 01       	movw	r22, r28
     23c:	6f 5f       	subi	r22, 0xFF	; 255
     23e:	7f 4f       	sbci	r23, 0xFF	; 255
     240:	c6 01       	movw	r24, r12
     242:	ab d0       	rcall	.+342    	; 0x39a <_ZN12MessageQueue4pushERK7Message>
     244:	1f 5f       	subi	r17, 0xFF	; 255
     246:	01 13       	cpse	r16, r17
     248:	f2 cf       	rjmp	.-28     	; 0x22e <_ZN14Communications5parseEh+0x40>
     24a:	c7 01       	movw	r24, r14
     24c:	0d d1       	rcall	.+538    	; 0x468 <_ZN18FastTransferParser5clearEv>
     24e:	06 c0       	rjmp	.+12     	; 0x25c <_ZN14Communications5parseEh+0x6e>
     250:	c7 01       	movw	r24, r14
     252:	02 d1       	rcall	.+516    	; 0x458 <_ZNK18FastTransferParser7is_fullEv>
     254:	88 23       	and	r24, r24
     256:	11 f0       	breq	.+4      	; 0x25c <_ZN14Communications5parseEh+0x6e>
     258:	c7 01       	movw	r24, r14
     25a:	06 d1       	rcall	.+524    	; 0x468 <_ZN18FastTransferParser5clearEv>
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
     262:	df 91       	pop	r29
     264:	cf 91       	pop	r28
     266:	1f 91       	pop	r17
     268:	0f 91       	pop	r16
     26a:	ff 90       	pop	r15
     26c:	ef 90       	pop	r14
     26e:	df 90       	pop	r13
     270:	cf 90       	pop	r12
     272:	08 95       	ret

00000274 <_ZN14Communications4readEv>:
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	ec 01       	movw	r28, r24
     27a:	0e 94 de 14 	call	0x29bc	; 0x29bc <_Z15uart1_read_bytev>
     27e:	9c 01       	movw	r18, r24
     280:	22 27       	eor	r18, r18
     282:	23 2b       	or	r18, r19
     284:	49 f4       	brne	.+18     	; 0x298 <_ZN14Communications4readEv+0x24>
     286:	68 2f       	mov	r22, r24
     288:	ce 01       	movw	r24, r28
     28a:	b1 df       	rcall	.-158    	; 0x1ee <_ZN14Communications5parseEh>
     28c:	0e 94 de 14 	call	0x29bc	; 0x29bc <_Z15uart1_read_bytev>
     290:	9c 01       	movw	r18, r24
     292:	22 27       	eor	r18, r18
     294:	23 2b       	or	r18, r19
     296:	b9 f3       	breq	.-18     	; 0x286 <_ZN14Communications4readEv+0x12>
     298:	df 91       	pop	r29
     29a:	cf 91       	pop	r28
     29c:	08 95       	ret

0000029e <_ZN14Communications7receiveEv>:
     29e:	9f 92       	push	r9
     2a0:	af 92       	push	r10
     2a2:	bf 92       	push	r11
     2a4:	cf 92       	push	r12
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	7c 01       	movw	r14, r24
     2b6:	de df       	rcall	.-68     	; 0x274 <_ZN14Communications4readEv>
     2b8:	82 e0       	ldi	r24, 0x02	; 2
     2ba:	e8 0e       	add	r14, r24
     2bc:	f1 1c       	adc	r15, r1
     2be:	cc 24       	eor	r12, r12
     2c0:	c3 94       	inc	r12
     2c2:	d1 2c       	mov	r13, r1
     2c4:	c7 01       	movw	r24, r14
     2c6:	b4 d0       	rcall	.+360    	; 0x430 <_ZNK12MessageQueue5countEv>
     2c8:	88 23       	and	r24, r24
     2ca:	e9 f1       	breq	.+122    	; 0x346 <_ZN14Communications7receiveEv+0xa8>
     2cc:	c7 01       	movw	r24, r14
     2ce:	90 d0       	rcall	.+288    	; 0x3f0 <_ZN12MessageQueue3popEv>
     2d0:	16 2f       	mov	r17, r22
     2d2:	97 2e       	mov	r9, r23
     2d4:	c8 2f       	mov	r28, r24
     2d6:	88 e0       	ldi	r24, 0x08	; 8
     2d8:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     2dc:	5c 01       	movw	r10, r24
     2de:	81 2f       	mov	r24, r17
     2e0:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <_ZN6Memory13valid_addressEh>
     2e4:	88 23       	and	r24, r24
     2e6:	31 f1       	breq	.+76     	; 0x334 <_ZN14Communications7receiveEv+0x96>
     2e8:	d0 e0       	ldi	r29, 0x00	; 0
     2ea:	dc 2f       	mov	r29, r28
     2ec:	cc 27       	eor	r28, r28
     2ee:	c9 0d       	add	r28, r9
     2f0:	d1 1d       	adc	r29, r1
     2f2:	be 01       	movw	r22, r28
     2f4:	81 2f       	mov	r24, r17
     2f6:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <_ZN6Memory5writeEhj>
     2fa:	18 30       	cpi	r17, 0x08	; 8
     2fc:	d9 f4       	brne	.+54     	; 0x334 <_ZN14Communications7receiveEv+0x96>
     2fe:	ab 28       	or	r10, r11
     300:	c9 f0       	breq	.+50     	; 0x334 <_ZN14Communications7receiveEv+0x96>
     302:	10 e4       	ldi	r17, 0x40	; 64
     304:	a1 2c       	mov	r10, r1
     306:	b1 2c       	mov	r11, r1
     308:	96 01       	movw	r18, r12
     30a:	0a 2c       	mov	r0, r10
     30c:	02 c0       	rjmp	.+4      	; 0x312 <_ZN14Communications7receiveEv+0x74>
     30e:	22 0f       	add	r18, r18
     310:	33 1f       	adc	r19, r19
     312:	0a 94       	dec	r0
     314:	e2 f7       	brpl	.-8      	; 0x30e <_ZN14Communications7receiveEv+0x70>
     316:	2c 23       	and	r18, r28
     318:	3d 23       	and	r19, r29
     31a:	23 2b       	or	r18, r19
     31c:	29 f4       	brne	.+10     	; 0x328 <_ZN14Communications7receiveEv+0x8a>
     31e:	60 e0       	ldi	r22, 0x00	; 0
     320:	70 e0       	ldi	r23, 0x00	; 0
     322:	81 2f       	mov	r24, r17
     324:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <_ZN6Memory5writeEhj>
     328:	8f ef       	ldi	r24, 0xFF	; 255
     32a:	a8 1a       	sub	r10, r24
     32c:	b8 0a       	sbc	r11, r24
     32e:	1f 5f       	subi	r17, 0xFF	; 255
     330:	10 35       	cpi	r17, 0x50	; 80
     332:	51 f7       	brne	.-44     	; 0x308 <_ZN14Communications7receiveEv+0x6a>
     334:	8e e5       	ldi	r24, 0x5E	; 94
     336:	93 e0       	ldi	r25, 0x03	; 3
     338:	0e 94 27 12 	call	0x244e	; 0x244e <_ZN6Clocks5resetEv>
     33c:	b6 01       	movw	r22, r12
     33e:	84 e0       	ldi	r24, 0x04	; 4
     340:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <_ZN6Memory5writeEhj>
     344:	bf cf       	rjmp	.-130    	; 0x2c4 <_ZN14Communications7receiveEv+0x26>
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	0f 91       	pop	r16
     34e:	ff 90       	pop	r15
     350:	ef 90       	pop	r14
     352:	df 90       	pop	r13
     354:	cf 90       	pop	r12
     356:	bf 90       	pop	r11
     358:	af 90       	pop	r10
     35a:	9f 90       	pop	r9
     35c:	08 95       	ret

0000035e <_GLOBAL__sub_I_MACRO_RE_SEND_TIMER>:
#define when break;case
#define otherwise break;default

const UART_MODULE uart = UART_1;

Clocks MACRO_RE_SEND_TIMER, ROBOT_PING_TIMER;
     35e:	86 e7       	ldi	r24, 0x76	; 118
     360:	93 e0       	ldi	r25, 0x03	; 3
     362:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN6ClocksC1Ev>
     366:	8a e6       	ldi	r24, 0x6A	; 106
     368:	93 e0       	ldi	r25, 0x03	; 3
     36a:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN6ClocksC1Ev>
Clocks ROBOT_CONNECTED_TIMEOUT, CONNECTED_TIME;
     36e:	8e e5       	ldi	r24, 0x5E	; 94
     370:	93 e0       	ldi	r25, 0x03	; 3
     372:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN6ClocksC1Ev>
     376:	82 e5       	ldi	r24, 0x52	; 82
     378:	93 e0       	ldi	r25, 0x03	; 3
     37a:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN6ClocksC1Ev>
		memory->write(CONNECTED, false);
	} // end if
} // end check_

// Talking to the Robot
static Clocks TransmitPeriodTimer(50);
     37e:	42 e3       	ldi	r20, 0x32	; 50
     380:	50 e0       	ldi	r21, 0x00	; 0
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	86 e4       	ldi	r24, 0x46	; 70
     388:	93 e0       	ldi	r25, 0x03	; 3
     38a:	0c 94 52 12 	jmp	0x24a4	; 0x24a4 <_ZN6ClocksC1El>
     38e:	08 95       	ret

00000390 <_ZN12MessageQueueC1Ev>:
     390:	fc 01       	movw	r30, r24
     392:	10 82       	st	Z, r1
     394:	11 82       	std	Z+1, r1	; 0x01
     396:	12 82       	std	Z+2, r1	; 0x02
     398:	08 95       	ret

0000039a <_ZN12MessageQueue4pushERK7Message>:
     39a:	cf 93       	push	r28
     39c:	df 93       	push	r29
     39e:	dc 01       	movw	r26, r24
     3a0:	11 96       	adiw	r26, 0x01	; 1
     3a2:	2c 91       	ld	r18, X
     3a4:	11 97       	sbiw	r26, 0x01	; 1
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	82 0f       	add	r24, r18
     3aa:	11 96       	adiw	r26, 0x01	; 1
     3ac:	8c 93       	st	X, r24
     3ae:	11 97       	sbiw	r26, 0x01	; 1
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	2f 5f       	subi	r18, 0xFF	; 255
     3b4:	3f 4f       	sbci	r19, 0xFF	; 255
     3b6:	f9 01       	movw	r30, r18
     3b8:	ee 0f       	add	r30, r30
     3ba:	ff 1f       	adc	r31, r31
     3bc:	2e 0f       	add	r18, r30
     3be:	3f 1f       	adc	r19, r31
     3c0:	fd 01       	movw	r30, r26
     3c2:	e2 0f       	add	r30, r18
     3c4:	f3 1f       	adc	r31, r19
     3c6:	eb 01       	movw	r28, r22
     3c8:	28 81       	ld	r18, Y
     3ca:	39 81       	ldd	r19, Y+1	; 0x01
     3cc:	4a 81       	ldd	r20, Y+2	; 0x02
     3ce:	20 83       	st	Z, r18
     3d0:	31 83       	std	Z+1, r19	; 0x01
     3d2:	42 83       	std	Z+2, r20	; 0x02
     3d4:	82 33       	cpi	r24, 0x32	; 50
     3d6:	18 f0       	brcs	.+6      	; 0x3de <_ZN12MessageQueue4pushERK7Message+0x44>
     3d8:	11 96       	adiw	r26, 0x01	; 1
     3da:	1c 92       	st	X, r1
     3dc:	11 97       	sbiw	r26, 0x01	; 1
     3de:	12 96       	adiw	r26, 0x02	; 2
     3e0:	8c 91       	ld	r24, X
     3e2:	12 97       	sbiw	r26, 0x02	; 2
     3e4:	8f 5f       	subi	r24, 0xFF	; 255
     3e6:	12 96       	adiw	r26, 0x02	; 2
     3e8:	8c 93       	st	X, r24
     3ea:	df 91       	pop	r29
     3ec:	cf 91       	pop	r28
     3ee:	08 95       	ret

000003f0 <_ZN12MessageQueue3popEv>:
     3f0:	dc 01       	movw	r26, r24
     3f2:	9c 91       	ld	r25, X
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	89 0f       	add	r24, r25
     3f8:	29 2f       	mov	r18, r25
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	82 33       	cpi	r24, 0x32	; 50
     3fe:	10 f4       	brcc	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     400:	8c 93       	st	X, r24
     402:	01 c0       	rjmp	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     404:	1c 92       	st	X, r1
     406:	12 96       	adiw	r26, 0x02	; 2
     408:	8c 91       	ld	r24, X
     40a:	12 97       	sbiw	r26, 0x02	; 2
     40c:	81 50       	subi	r24, 0x01	; 1
     40e:	12 96       	adiw	r26, 0x02	; 2
     410:	8c 93       	st	X, r24
     412:	12 97       	sbiw	r26, 0x02	; 2
     414:	2f 5f       	subi	r18, 0xFF	; 255
     416:	3f 4f       	sbci	r19, 0xFF	; 255
     418:	f9 01       	movw	r30, r18
     41a:	ee 0f       	add	r30, r30
     41c:	ff 1f       	adc	r31, r31
     41e:	2e 0f       	add	r18, r30
     420:	3f 1f       	adc	r19, r31
     422:	fd 01       	movw	r30, r26
     424:	e2 0f       	add	r30, r18
     426:	f3 1f       	adc	r31, r19
     428:	60 81       	ld	r22, Z
     42a:	71 81       	ldd	r23, Z+1	; 0x01
     42c:	82 81       	ldd	r24, Z+2	; 0x02
     42e:	08 95       	ret

00000430 <_ZNK12MessageQueue5countEv>:
     430:	fc 01       	movw	r30, r24
     432:	82 81       	ldd	r24, Z+2	; 0x02
     434:	08 95       	ret

00000436 <_ZN18FastTransferParserC1Ev>:
     436:	fc 01       	movw	r30, r24
     438:	12 aa       	std	Z+50, r1	; 0x32
     43a:	08 95       	ret

0000043c <_ZN18FastTransferParser4pushEh>:
     43c:	fc 01       	movw	r30, r24
     43e:	22 a9       	ldd	r18, Z+50	; 0x32
     440:	21 11       	cpse	r18, r1
     442:	02 c0       	rjmp	.+4      	; 0x448 <_ZN18FastTransferParser4pushEh+0xc>
     444:	66 30       	cpi	r22, 0x06	; 6
     446:	39 f4       	brne	.+14     	; 0x456 <_ZN18FastTransferParser4pushEh+0x1a>
     448:	31 e0       	ldi	r19, 0x01	; 1
     44a:	32 0f       	add	r19, r18
     44c:	fc 01       	movw	r30, r24
     44e:	32 ab       	std	Z+50, r19	; 0x32
     450:	e2 0f       	add	r30, r18
     452:	f1 1d       	adc	r31, r1
     454:	60 83       	st	Z, r22
     456:	08 95       	ret

00000458 <_ZNK18FastTransferParser7is_fullEv>:
     458:	21 e0       	ldi	r18, 0x01	; 1
     45a:	fc 01       	movw	r30, r24
     45c:	82 a9       	ldd	r24, Z+50	; 0x32
     45e:	82 33       	cpi	r24, 0x32	; 50
     460:	08 f4       	brcc	.+2      	; 0x464 <_ZNK18FastTransferParser7is_fullEv+0xc>
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	82 2f       	mov	r24, r18
     466:	08 95       	ret

00000468 <_ZN18FastTransferParser5clearEv>:
     468:	fc 01       	movw	r30, r24
     46a:	12 aa       	std	Z+50, r1	; 0x32
     46c:	08 95       	ret

0000046e <_ZNK18FastTransferParser11get_messageEh>:
     46e:	26 2f       	mov	r18, r22
     470:	22 0f       	add	r18, r18
     472:	62 0f       	add	r22, r18
     474:	6b 5f       	subi	r22, 0xFB	; 251
     476:	fc 01       	movw	r30, r24
     478:	e6 0f       	add	r30, r22
     47a:	f1 1d       	adc	r31, r1
     47c:	71 81       	ldd	r23, Z+1	; 0x01
     47e:	60 81       	ld	r22, Z
     480:	82 81       	ldd	r24, Z+2	; 0x02
     482:	08 95       	ret

00000484 <_ZNK18FastTransferParser10verify_crcEv>:
     484:	ef 92       	push	r14
     486:	ff 92       	push	r15
     488:	0f 93       	push	r16
     48a:	1f 93       	push	r17
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	7c 01       	movw	r14, r24
     492:	fc 01       	movw	r30, r24
     494:	c2 a9       	ldd	r28, Z+50	; 0x32
     496:	0c 2f       	mov	r16, r28
     498:	10 e0       	ldi	r17, 0x00	; 0
     49a:	01 50       	subi	r16, 0x01	; 1
     49c:	11 09       	sbc	r17, r1
     49e:	06 30       	cpi	r16, 0x06	; 6
     4a0:	11 05       	cpc	r17, r1
     4a2:	ec f0       	brlt	.+58     	; 0x4de <_ZNK18FastTransferParser10verify_crcEv+0x5a>
     4a4:	dc 01       	movw	r26, r24
     4a6:	15 96       	adiw	r26, 0x05	; 5
     4a8:	e8 01       	movw	r28, r16
     4aa:	c8 0f       	add	r28, r24
     4ac:	d9 1f       	adc	r29, r25
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	ec e8       	ldi	r30, 0x8C	; 140
     4b2:	6d 91       	ld	r22, X+
     4b4:	48 e0       	ldi	r20, 0x08	; 8
     4b6:	50 e0       	ldi	r21, 0x00	; 0
     4b8:	79 2f       	mov	r23, r25
     4ba:	76 27       	eor	r23, r22
     4bc:	29 2f       	mov	r18, r25
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	35 95       	asr	r19
     4c2:	27 95       	ror	r18
     4c4:	92 2f       	mov	r25, r18
     4c6:	70 ff       	sbrs	r23, 0
     4c8:	02 c0       	rjmp	.+4      	; 0x4ce <_ZNK18FastTransferParser10verify_crcEv+0x4a>
     4ca:	9e 2f       	mov	r25, r30
     4cc:	92 27       	eor	r25, r18
     4ce:	66 95       	lsr	r22
     4d0:	41 50       	subi	r20, 0x01	; 1
     4d2:	51 09       	sbc	r21, r1
     4d4:	89 f7       	brne	.-30     	; 0x4b8 <_ZNK18FastTransferParser10verify_crcEv+0x34>
     4d6:	ca 17       	cp	r28, r26
     4d8:	db 07       	cpc	r29, r27
     4da:	59 f7       	brne	.-42     	; 0x4b2 <_ZNK18FastTransferParser10verify_crcEv+0x2e>
     4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <_ZNK18FastTransferParser10verify_crcEv+0x5c>
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	f7 01       	movw	r30, r14
     4e2:	e0 0f       	add	r30, r16
     4e4:	f1 1f       	adc	r31, r17
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	20 81       	ld	r18, Z
     4ea:	29 13       	cpse	r18, r25
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	df 91       	pop	r29
     4f0:	cf 91       	pop	r28
     4f2:	1f 91       	pop	r17
     4f4:	0f 91       	pop	r16
     4f6:	ff 90       	pop	r15
     4f8:	ef 90       	pop	r14
     4fa:	08 95       	ret

000004fc <_ZNK18FastTransferParser14valid_messagesEv>:
     4fc:	fc 01       	movw	r30, r24
     4fe:	22 a9       	ldd	r18, Z+50	; 0x32
     500:	26 30       	cpi	r18, 0x06	; 6
     502:	68 f0       	brcs	.+26     	; 0x51e <_ZNK18FastTransferParser14valid_messagesEv+0x22>
     504:	32 81       	ldd	r19, Z+2	; 0x02
     506:	31 30       	cpi	r19, 0x01	; 1
     508:	61 f4       	brne	.+24     	; 0x522 <_ZNK18FastTransferParser14valid_messagesEv+0x26>
     50a:	44 81       	ldd	r20, Z+4	; 0x04
     50c:	50 e0       	ldi	r21, 0x00	; 0
     50e:	4a 5f       	subi	r20, 0xFA	; 250
     510:	5f 4f       	sbci	r21, 0xFF	; 255
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	42 17       	cp	r20, r18
     516:	53 07       	cpc	r21, r19
     518:	31 f4       	brne	.+12     	; 0x526 <_ZNK18FastTransferParser14valid_messagesEv+0x2a>
     51a:	b4 cf       	rjmp	.-152    	; 0x484 <_ZNK18FastTransferParser10verify_crcEv>
     51c:	08 95       	ret
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	08 95       	ret
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	08 95       	ret
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	08 95       	ret

0000052a <_ZNK18FastTransferParser12num_messagesEv>:
     52a:	cf 93       	push	r28
     52c:	df 93       	push	r29
     52e:	ec 01       	movw	r28, r24
     530:	e5 df       	rcall	.-54     	; 0x4fc <_ZNK18FastTransferParser14valid_messagesEv>
     532:	88 23       	and	r24, r24
     534:	39 f0       	breq	.+14     	; 0x544 <_ZNK18FastTransferParser12num_messagesEv+0x1a>
     536:	8c 81       	ldd	r24, Y+4	; 0x04
     538:	9b ea       	ldi	r25, 0xAB	; 171
     53a:	89 9f       	mul	r24, r25
     53c:	81 2d       	mov	r24, r1
     53e:	11 24       	eor	r1, r1
     540:	86 95       	lsr	r24
     542:	01 c0       	rjmp	.+2      	; 0x546 <_ZNK18FastTransferParser12num_messagesEv+0x1c>
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	08 95       	ret

0000054c <_ZN16ControlBoxEngine10initializeEv>:
#include "timer/Clock.hpp"
#include "digital_io/digital_pin.hpp"
#include "uart/uart_2.hpp"

void ControlBoxEngine::initialize ()
{
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	ec 01       	movw	r28, r24
	sei();
     552:	78 94       	sei
	uart2_initialize(UART2_BAUD_SELECT(115200UL, 16000000UL));  // For printf
     554:	88 e0       	ldi	r24, 0x08	; 8
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 6f 15 	call	0x2ade	; 0x2ade <_Z16uart2_initializej>
	memory.initialize();
     55c:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <_ZN6Memory10initializeEv>
	
	outputs.initialize(&memory);
     560:	be 01       	movw	r22, r28
     562:	ce 01       	movw	r24, r28
     564:	85 52       	subi	r24, 0x25	; 37
     566:	9f 4f       	sbci	r25, 0xFF	; 255
     568:	ba d4       	rcall	.+2420   	; 0xede <_ZN13OutputHandler10initializeEP6Memory>
	// communications.initialize(UART_1, &memory);
	// TODO
	secondProcessor_FT.initialize(UART_2, &memory);
     56a:	ae 01       	movw	r20, r28
     56c:	62 e0       	ldi	r22, 0x02	; 2
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	ce 01       	movw	r24, r28
     572:	01 96       	adiw	r24, 0x01	; 1
     574:	14 de       	rcall	.-984    	; 0x19e <_ZN14Communications10initializeEjP6Memory>
}
     576:	df 91       	pop	r29
     578:	cf 91       	pop	r28
     57a:	08 95       	ret

0000057c <_ZN16ControlBoxEngine4loopEv>:
void ControlBoxEngine::loop ()
{
     57c:	ec 01       	movw	r28, r24
	outputs.startup();
     57e:	8c 01       	movw	r16, r24
     580:	05 52       	subi	r16, 0x25	; 37
     582:	1f 4f       	sbci	r17, 0xFF	; 255
     584:	c8 01       	movw	r24, r16
     586:	0a d4       	rcall	.+2068   	; 0xd9c <_ZN13OutputHandler7startupEv>

	while (1)
	{
		outputs.refresh();
		// communications.receive()
		secondProcessor_FT.receive();
     588:	21 96       	adiw	r28, 0x01	; 1
{
	outputs.startup();

	while (1)
	{
		outputs.refresh();
     58a:	c8 01       	movw	r24, r16
     58c:	2f d3       	rcall	.+1630   	; 0xbec <_ZN13OutputHandler7refreshEv>
		// communications.receive()
		secondProcessor_FT.receive();
     58e:	ce 01       	movw	r24, r28
     590:	86 de       	rcall	.-756    	; 0x29e <_ZN14Communications7receiveEv>
     592:	fb cf       	rjmp	.-10     	; 0x58a <_ZN16ControlBoxEngine4loopEv+0xe>

00000594 <_ZL12DDR_REGISTER4Port>:
     594:	90 e0       	ldi	r25, 0x00	; 0

static volatile uint8_t error = 0;

static volatile uint8_t & DDR_REGISTER (Port port)
{
  switch (port)
     596:	8b 30       	cpi	r24, 0x0B	; 11
     598:	91 05       	cpc	r25, r1
     59a:	18 f5       	brcc	.+70     	; 0x5e2 <_ZL12DDR_REGISTER4Port+0x4e>
     59c:	fc 01       	movw	r30, r24
     59e:	ee 58       	subi	r30, 0x8E	; 142
     5a0:	ff 4f       	sbci	r31, 0xFF	; 255
     5a2:	0c 94 d0 18 	jmp	0x31a0	; 0x31a0 <__tablejump2__>
  {
    case A: return DDRA;
    case B: return DDRB;
     5a6:	84 e2       	ldi	r24, 0x24	; 36
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	08 95       	ret
    case C: return DDRC;
     5ac:	87 e2       	ldi	r24, 0x27	; 39
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	08 95       	ret
    case D: return DDRD;
     5b2:	8a e2       	ldi	r24, 0x2A	; 42
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	08 95       	ret
    case E: return DDRE;
     5b8:	8d e2       	ldi	r24, 0x2D	; 45
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	08 95       	ret
    case F: return DDRF;
     5be:	80 e3       	ldi	r24, 0x30	; 48
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	08 95       	ret
    case G: return DDRG;
     5c4:	83 e3       	ldi	r24, 0x33	; 51
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	08 95       	ret
    case H: return DDRH;
     5ca:	81 e0       	ldi	r24, 0x01	; 1
     5cc:	91 e0       	ldi	r25, 0x01	; 1
     5ce:	08 95       	ret
    case J: return DDRJ;
     5d0:	84 e0       	ldi	r24, 0x04	; 4
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	08 95       	ret
    case K: return DDRK;
     5d6:	87 e0       	ldi	r24, 0x07	; 7
     5d8:	91 e0       	ldi	r25, 0x01	; 1
     5da:	08 95       	ret
    case L: return DDRL;
     5dc:	8a e0       	ldi	r24, 0x0A	; 10
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	08 95       	ret
  }
  return error;
     5e2:	82 e8       	ldi	r24, 0x82	; 130
     5e4:	93 e0       	ldi	r25, 0x03	; 3
     5e6:	08 95       	ret

static volatile uint8_t & DDR_REGISTER (Port port)
{
  switch (port)
  {
    case A: return DDRA;
     5e8:	81 e2       	ldi	r24, 0x21	; 33
     5ea:	90 e0       	ldi	r25, 0x00	; 0
    case J: return DDRJ;
    case K: return DDRK;
    case L: return DDRL;
  }
  return error;
}
     5ec:	08 95       	ret

000005ee <_ZL13PORT_REGISTER4Port>:

static volatile uint8_t & PORT_REGISTER (Port port)
{
  switch (port)
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	8b 30       	cpi	r24, 0x0B	; 11
     5f2:	91 05       	cpc	r25, r1
     5f4:	18 f5       	brcc	.+70     	; 0x63c <_ZL13PORT_REGISTER4Port+0x4e>
     5f6:	fc 01       	movw	r30, r24
     5f8:	e3 58       	subi	r30, 0x83	; 131
     5fa:	ff 4f       	sbci	r31, 0xFF	; 255
     5fc:	0c 94 d0 18 	jmp	0x31a0	; 0x31a0 <__tablejump2__>
  {
    case A: return PORTA;
    case B: return PORTB;
     600:	85 e2       	ldi	r24, 0x25	; 37
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	08 95       	ret
    case C: return PORTC;
     606:	88 e2       	ldi	r24, 0x28	; 40
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	08 95       	ret
    case D: return PORTD;
     60c:	8b e2       	ldi	r24, 0x2B	; 43
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	08 95       	ret
    case E: return PORTE;
     612:	8e e2       	ldi	r24, 0x2E	; 46
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	08 95       	ret
    case F: return PORTF;
     618:	81 e3       	ldi	r24, 0x31	; 49
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	08 95       	ret
    case G: return PORTG;
     61e:	84 e3       	ldi	r24, 0x34	; 52
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	08 95       	ret
    case H: return PORTH;
     624:	82 e0       	ldi	r24, 0x02	; 2
     626:	91 e0       	ldi	r25, 0x01	; 1
     628:	08 95       	ret
    case J: return PORTJ;
     62a:	85 e0       	ldi	r24, 0x05	; 5
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	08 95       	ret
    case K: return PORTK;
     630:	88 e0       	ldi	r24, 0x08	; 8
     632:	91 e0       	ldi	r25, 0x01	; 1
     634:	08 95       	ret
    case L: return PORTL;
     636:	8b e0       	ldi	r24, 0x0B	; 11
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	08 95       	ret
  }
  return error; 
     63c:	82 e8       	ldi	r24, 0x82	; 130
     63e:	93 e0       	ldi	r25, 0x03	; 3
     640:	08 95       	ret

static volatile uint8_t & PORT_REGISTER (Port port)
{
  switch (port)
  {
    case A: return PORTA;
     642:	82 e2       	ldi	r24, 0x22	; 34
     644:	90 e0       	ldi	r25, 0x00	; 0
    case J: return PORTJ;
    case K: return PORTK;
    case L: return PORTL;
  }
  return error; 
}
     646:	08 95       	ret

00000648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>:
static bool read_from_pin (Port, Pin);

/*---------------------- Public Interface of DigitalPin ----------------------*/

void DigitalPin::initialize (Port port, Pin pin, Mode mode)
{
     648:	0f 93       	push	r16
     64a:	1f 93       	push	r17
     64c:	cf 93       	push	r28
     64e:	df 93       	push	r29
     650:	fc 01       	movw	r30, r24
     652:	c6 2f       	mov	r28, r22
     654:	d4 2f       	mov	r29, r20
  this->port = port;
     656:	60 83       	st	Z, r22
  this->pin = pin;
     658:	41 83       	std	Z+1, r20	; 0x01
  this->mode = mode;
     65a:	22 83       	std	Z+2, r18	; 0x02
  DDR_REGISTER(port) |= (1 << pin);
}

void set_pin_mode (Port port, Pin pin, Mode mode)
{
  if (mode == INPUT)
     65c:	21 11       	cpse	r18, r1
     65e:	16 c0       	rjmp	.+44     	; 0x68c <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x44>
  return error;  
}

void configure_as_input (Port port, Pin pin)
{
  DDR_REGISTER(port) &= ~(1 << pin);
     660:	86 2f       	mov	r24, r22
     662:	98 df       	rcall	.-208    	; 0x594 <_ZL12DDR_REGISTER4Port>
     664:	fc 01       	movw	r30, r24
     666:	90 81       	ld	r25, Z
     668:	21 e0       	ldi	r18, 0x01	; 1
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	02 c0       	rjmp	.+4      	; 0x672 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x2a>
     66e:	22 0f       	add	r18, r18
     670:	33 1f       	adc	r19, r19
     672:	da 95       	dec	r29
     674:	e2 f7       	brpl	.-8      	; 0x66e <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x26>
     676:	d2 2f       	mov	r29, r18
     678:	d0 95       	com	r29
     67a:	9d 23       	and	r25, r29
     67c:	90 83       	st	Z, r25
  PORT_REGISTER(port) &= ~(1 << pin);
     67e:	8c 2f       	mov	r24, r28
     680:	b6 df       	rcall	.-148    	; 0x5ee <_ZL13PORT_REGISTER4Port>
     682:	fc 01       	movw	r30, r24
     684:	20 81       	ld	r18, Z
     686:	2d 23       	and	r18, r29
     688:	20 83       	st	Z, r18
     68a:	25 c0       	rjmp	.+74     	; 0x6d6 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x8e>

void set_pin_mode (Port port, Pin pin, Mode mode)
{
  if (mode == INPUT)
    configure_as_input(port, pin);
  else if (mode == INPUT_PULLUP)
     68c:	22 30       	cpi	r18, 0x02	; 2
  PORT_REGISTER(port) &= ~(1 << pin);
}

void configure_as_input_pullup (Port port, Pin pin)
{
  DDR_REGISTER(port) &= ~(1 << pin);
     68e:	b1 f4       	brne	.+44     	; 0x6bc <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x74>
     690:	86 2f       	mov	r24, r22
     692:	80 df       	rcall	.-256    	; 0x594 <_ZL12DDR_REGISTER4Port>
     694:	fc 01       	movw	r30, r24
     696:	90 81       	ld	r25, Z
     698:	01 e0       	ldi	r16, 0x01	; 1
     69a:	10 e0       	ldi	r17, 0x00	; 0
     69c:	02 c0       	rjmp	.+4      	; 0x6a2 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x5a>
     69e:	00 0f       	add	r16, r16
     6a0:	11 1f       	adc	r17, r17
     6a2:	da 95       	dec	r29
     6a4:	e2 f7       	brpl	.-8      	; 0x69e <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x56>
     6a6:	80 2f       	mov	r24, r16
     6a8:	80 95       	com	r24
     6aa:	98 23       	and	r25, r24
  PORT_REGISTER(port) |= (1 << pin);
     6ac:	90 83       	st	Z, r25
     6ae:	8c 2f       	mov	r24, r28
     6b0:	9e df       	rcall	.-196    	; 0x5ee <_ZL13PORT_REGISTER4Port>
     6b2:	fc 01       	movw	r30, r24
     6b4:	20 81       	ld	r18, Z
     6b6:	02 2b       	or	r16, r18
     6b8:	00 83       	st	Z, r16
}

void configure_as_output (Port port, Pin pin)
{
  DDR_REGISTER(port) |= (1 << pin);
     6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x8e>
     6bc:	86 2f       	mov	r24, r22
     6be:	6a df       	rcall	.-300    	; 0x594 <_ZL12DDR_REGISTER4Port>
     6c0:	fc 01       	movw	r30, r24
     6c2:	40 81       	ld	r20, Z
     6c4:	21 e0       	ldi	r18, 0x01	; 1
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	02 c0       	rjmp	.+4      	; 0x6ce <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x86>
     6ca:	22 0f       	add	r18, r18
     6cc:	33 1f       	adc	r19, r19
     6ce:	da 95       	dec	r29
     6d0:	e2 f7       	brpl	.-8      	; 0x6ca <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x82>
     6d2:	24 2b       	or	r18, r20
     6d4:	20 83       	st	Z, r18
{
  this->port = port;
  this->pin = pin;
  this->mode = mode;
  set_pin_mode(port, pin, mode);
}
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	08 95       	ret

000006e0 <_ZN10DigitalPin5writeEb>:

void DigitalPin::write (bool value)
{
     6e0:	cf 93       	push	r28
  write_to_pin(port, pin, value);
     6e2:	fc 01       	movw	r30, r24
     6e4:	c1 81       	ldd	r28, Z+1	; 0x01
     6e6:	80 81       	ld	r24, Z
    return INPUT;
}

void write_to_pin (Port port, Pin pin, bool value)
{
  if (value)
     6e8:	66 23       	and	r22, r22
     6ea:	69 f0       	breq	.+26     	; 0x706 <_ZN10DigitalPin5writeEb+0x26>
    PORT_REGISTER(port) |= (1 << pin);
     6ec:	80 df       	rcall	.-256    	; 0x5ee <_ZL13PORT_REGISTER4Port>
     6ee:	fc 01       	movw	r30, r24
     6f0:	40 81       	ld	r20, Z
     6f2:	21 e0       	ldi	r18, 0x01	; 1
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <_ZN10DigitalPin5writeEb+0x1c>
     6f8:	22 0f       	add	r18, r18
     6fa:	33 1f       	adc	r19, r19
     6fc:	ca 95       	dec	r28
     6fe:	e2 f7       	brpl	.-8      	; 0x6f8 <_ZN10DigitalPin5writeEb+0x18>
     700:	24 2b       	or	r18, r20
     702:	20 83       	st	Z, r18
     704:	0d c0       	rjmp	.+26     	; 0x720 <_ZN10DigitalPin5writeEb+0x40>
  else
    PORT_REGISTER(port) &= ~(1 << pin);
     706:	73 df       	rcall	.-282    	; 0x5ee <_ZL13PORT_REGISTER4Port>
     708:	fc 01       	movw	r30, r24
     70a:	90 81       	ld	r25, Z
     70c:	21 e0       	ldi	r18, 0x01	; 1
     70e:	30 e0       	ldi	r19, 0x00	; 0
     710:	02 c0       	rjmp	.+4      	; 0x716 <_ZN10DigitalPin5writeEb+0x36>
     712:	22 0f       	add	r18, r18
     714:	33 1f       	adc	r19, r19
     716:	ca 95       	dec	r28
     718:	e2 f7       	brpl	.-8      	; 0x712 <_ZN10DigitalPin5writeEb+0x32>
     71a:	20 95       	com	r18
     71c:	29 23       	and	r18, r25
     71e:	20 83       	st	Z, r18
     720:	cf 91       	pop	r28
}

void DigitalPin::write (bool value)
{
  write_to_pin(port, pin, value);
}
     722:	08 95       	ret

00000724 <_ZN8Expander11set_addressEh>:
#include "expander.hpp"

void Expander::set_address (uint8_t address)
{
  this->address = address;
     724:	fc 01       	movw	r30, r24
     726:	61 93       	st	Z+, r22
     728:	cf 01       	movw	r24, r30
  i2c.set_address(address);
     72a:	5f c4       	rjmp	.+2238   	; 0xfea <_ZN3I2C11set_addressEh>
     72c:	08 95       	ret

0000072e <_ZN8Expander14write_registerEhh>:
}

void Expander::write_register (uint8_t reg_addr, uint8_t value)
{
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	0f 93       	push	r16
     734:	1f 93       	push	r17
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	00 d0       	rcall	.+0      	; 0x73c <_ZN8Expander14write_registerEhh+0xe>
     73c:	cd b7       	in	r28, 0x3d	; 61
     73e:	de b7       	in	r29, 0x3e	; 62
     740:	e6 2e       	mov	r14, r22
     742:	f4 2e       	mov	r15, r20
  i2c.set_address(address);
     744:	8c 01       	movw	r16, r24
     746:	0f 5f       	subi	r16, 0xFF	; 255
     748:	1f 4f       	sbci	r17, 0xFF	; 255
     74a:	fc 01       	movw	r30, r24
     74c:	60 81       	ld	r22, Z
     74e:	c8 01       	movw	r24, r16
     750:	4c d4       	rcall	.+2200   	; 0xfea <_ZN3I2C11set_addressEh>
  uint8_t msg [] = {reg_addr, value};
     752:	e9 82       	std	Y+1, r14	; 0x01
     754:	fa 82       	std	Y+2, r15	; 0x02
  i2c.write(msg, 2);
     756:	42 e0       	ldi	r20, 0x02	; 2
     758:	be 01       	movw	r22, r28
     75a:	6f 5f       	subi	r22, 0xFF	; 255
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	c8 01       	movw	r24, r16
     760:	c8 d4       	rcall	.+2448   	; 0x10f2 <_ZN3I2C5writeEPhh>
}
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	1f 91       	pop	r17
     76c:	0f 91       	pop	r16
     76e:	ff 90       	pop	r15
     770:	ef 90       	pop	r14
     772:	08 95       	ret

00000774 <_ZN8Expander13read_registerEh>:

uint8_t Expander::read_register (uint8_t reg_addr)
{
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	00 d0       	rcall	.+0      	; 0x77e <_ZN8Expander13read_registerEh+0xa>
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	6a 83       	std	Y+2, r22	; 0x02
  i2c.set_address(address);
     784:	8c 01       	movw	r16, r24
     786:	0f 5f       	subi	r16, 0xFF	; 255
     788:	1f 4f       	sbci	r17, 0xFF	; 255
     78a:	fc 01       	movw	r30, r24
     78c:	60 81       	ld	r22, Z
     78e:	c8 01       	movw	r24, r16
     790:	2c d4       	rcall	.+2136   	; 0xfea <_ZN3I2C11set_addressEh>
  i2c.write(&reg_addr, 1);
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	be 01       	movw	r22, r28
     796:	6e 5f       	subi	r22, 0xFE	; 254
     798:	7f 4f       	sbci	r23, 0xFF	; 255
     79a:	c8 01       	movw	r24, r16
     79c:	aa d4       	rcall	.+2388   	; 0x10f2 <_ZN3I2C5writeEPhh>
  uint8_t value;
  i2c.read(&value, 1);
     79e:	41 e0       	ldi	r20, 0x01	; 1
     7a0:	be 01       	movw	r22, r28
     7a2:	6f 5f       	subi	r22, 0xFF	; 255
     7a4:	7f 4f       	sbci	r23, 0xFF	; 255
     7a6:	c8 01       	movw	r24, r16
     7a8:	44 d5       	rcall	.+2696   	; 0x1232 <_ZN3I2C4readEPhh>
  return value;
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	1f 91       	pop	r17
     7b6:	0f 91       	pop	r16
     7b8:	08 95       	ret

000007ba <_ZN11ExpanderPin5writeEb>:
  uint8_t reg_addr = (port == A) ? GPIOA : GPIOB;
  return expander->read_register(reg_addr) & (1 << pin);
}

void ExpanderPin::write (bool value)
{
     7ba:	1f 93       	push	r17
     7bc:	cf 93       	push	r28
     7be:	df 93       	push	r29
     7c0:	ec 01       	movw	r28, r24
  uint8_t reg_addr = (port == A) ? GPIOA : GPIOB;
     7c2:	88 81       	ld	r24, Y
     7c4:	88 23       	and	r24, r24
     7c6:	11 f0       	breq	.+4      	; 0x7cc <_ZN11ExpanderPin5writeEb+0x12>
     7c8:	13 e1       	ldi	r17, 0x13	; 19
     7ca:	01 c0       	rjmp	.+2      	; 0x7ce <_ZN11ExpanderPin5writeEb+0x14>
     7cc:	12 e1       	ldi	r17, 0x12	; 18
  if (value)
     7ce:	66 23       	and	r22, r22
     7d0:	91 f0       	breq	.+36     	; 0x7f6 <_ZN11ExpanderPin5writeEb+0x3c>
    expander->write_register(reg_addr, expander->read_register(reg_addr) | (1 << pin));
     7d2:	61 2f       	mov	r22, r17
     7d4:	8b 81       	ldd	r24, Y+3	; 0x03
     7d6:	9c 81       	ldd	r25, Y+4	; 0x04
     7d8:	cd df       	rcall	.-102    	; 0x774 <_ZN8Expander13read_registerEh>
     7da:	41 e0       	ldi	r20, 0x01	; 1
     7dc:	50 e0       	ldi	r21, 0x00	; 0
     7de:	09 80       	ldd	r0, Y+1	; 0x01
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <_ZN11ExpanderPin5writeEb+0x2c>
     7e2:	44 0f       	add	r20, r20
     7e4:	55 1f       	adc	r21, r21
     7e6:	0a 94       	dec	r0
     7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <_ZN11ExpanderPin5writeEb+0x28>
     7ea:	48 2b       	or	r20, r24
     7ec:	61 2f       	mov	r22, r17
     7ee:	8b 81       	ldd	r24, Y+3	; 0x03
     7f0:	9c 81       	ldd	r25, Y+4	; 0x04
     7f2:	9d df       	rcall	.-198    	; 0x72e <_ZN8Expander14write_registerEhh>
     7f4:	12 c0       	rjmp	.+36     	; 0x81a <_ZN11ExpanderPin5writeEb+0x60>
  else
    expander->write_register(reg_addr, expander->read_register(reg_addr) & ~(1 << pin));
     7f6:	61 2f       	mov	r22, r17
     7f8:	8b 81       	ldd	r24, Y+3	; 0x03
     7fa:	9c 81       	ldd	r25, Y+4	; 0x04
     7fc:	bb df       	rcall	.-138    	; 0x774 <_ZN8Expander13read_registerEh>
     7fe:	41 e0       	ldi	r20, 0x01	; 1
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	09 80       	ldd	r0, Y+1	; 0x01
     804:	02 c0       	rjmp	.+4      	; 0x80a <_ZN11ExpanderPin5writeEb+0x50>
     806:	44 0f       	add	r20, r20
     808:	55 1f       	adc	r21, r21
     80a:	0a 94       	dec	r0
     80c:	e2 f7       	brpl	.-8      	; 0x806 <_ZN11ExpanderPin5writeEb+0x4c>
     80e:	40 95       	com	r20
     810:	48 23       	and	r20, r24
     812:	61 2f       	mov	r22, r17
     814:	8b 81       	ldd	r24, Y+3	; 0x03
     816:	9c 81       	ldd	r25, Y+4	; 0x04
     818:	8a df       	rcall	.-236    	; 0x72e <_ZN8Expander14write_registerEhh>
}
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	1f 91       	pop	r17
     820:	08 95       	ret

00000822 <_ZN11ExpanderPin8set_modeE4Mode>:

void ExpanderPin::set_mode (Mode mode)
{
     822:	1f 93       	push	r17
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	ec 01       	movw	r28, r24
  this->mode = mode;
     82a:	6a 83       	std	Y+2, r22	; 0x02
  uint8_t addr = (port == A) ? IODIRA : IODIRB;
     82c:	11 e0       	ldi	r17, 0x01	; 1
     82e:	88 81       	ld	r24, Y
     830:	81 11       	cpse	r24, r1
     832:	01 c0       	rjmp	.+2      	; 0x836 <_ZN11ExpanderPin8set_modeE4Mode+0x14>
     834:	10 e0       	ldi	r17, 0x00	; 0
  if (mode == INPUT)
     836:	61 11       	cpse	r22, r1
     838:	12 c0       	rjmp	.+36     	; 0x85e <_ZN11ExpanderPin8set_modeE4Mode+0x3c>
    expander->write_register(addr, expander->read_register(addr) | (1 << pin));
     83a:	61 2f       	mov	r22, r17
     83c:	8b 81       	ldd	r24, Y+3	; 0x03
     83e:	9c 81       	ldd	r25, Y+4	; 0x04
     840:	99 df       	rcall	.-206    	; 0x774 <_ZN8Expander13read_registerEh>
     842:	41 e0       	ldi	r20, 0x01	; 1
     844:	50 e0       	ldi	r21, 0x00	; 0
     846:	09 80       	ldd	r0, Y+1	; 0x01
     848:	02 c0       	rjmp	.+4      	; 0x84e <_ZN11ExpanderPin8set_modeE4Mode+0x2c>
     84a:	44 0f       	add	r20, r20
     84c:	55 1f       	adc	r21, r21
     84e:	0a 94       	dec	r0
     850:	e2 f7       	brpl	.-8      	; 0x84a <_ZN11ExpanderPin8set_modeE4Mode+0x28>
     852:	48 2b       	or	r20, r24
     854:	61 2f       	mov	r22, r17
     856:	8b 81       	ldd	r24, Y+3	; 0x03
     858:	9c 81       	ldd	r25, Y+4	; 0x04
     85a:	69 df       	rcall	.-302    	; 0x72e <_ZN8Expander14write_registerEhh>
     85c:	12 c0       	rjmp	.+36     	; 0x882 <_ZN11ExpanderPin8set_modeE4Mode+0x60>
  else
    expander->write_register(addr, expander->read_register(addr) & ~(1 << pin));
     85e:	61 2f       	mov	r22, r17
     860:	8b 81       	ldd	r24, Y+3	; 0x03
     862:	9c 81       	ldd	r25, Y+4	; 0x04
     864:	87 df       	rcall	.-242    	; 0x774 <_ZN8Expander13read_registerEh>
     866:	41 e0       	ldi	r20, 0x01	; 1
     868:	50 e0       	ldi	r21, 0x00	; 0
     86a:	09 80       	ldd	r0, Y+1	; 0x01
     86c:	02 c0       	rjmp	.+4      	; 0x872 <_ZN11ExpanderPin8set_modeE4Mode+0x50>
     86e:	44 0f       	add	r20, r20
     870:	55 1f       	adc	r21, r21
     872:	0a 94       	dec	r0
     874:	e2 f7       	brpl	.-8      	; 0x86e <_ZN11ExpanderPin8set_modeE4Mode+0x4c>
     876:	40 95       	com	r20
     878:	48 23       	and	r20, r24
     87a:	61 2f       	mov	r22, r17
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	9c 81       	ldd	r25, Y+4	; 0x04
     880:	56 df       	rcall	.-340    	; 0x72e <_ZN8Expander14write_registerEhh>
}
     882:	df 91       	pop	r29
     884:	cf 91       	pop	r28
     886:	1f 91       	pop	r17
     888:	08 95       	ret

0000088a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>:
const uint8_t IODIRB = 0x01;
const uint8_t GPIOA  = 0x12;
const uint8_t GPIOB  = 0x13;

void ExpanderPin::initialize (Expander * expander, Port port, Pin pin, Mode mode)
{
     88a:	0f 93       	push	r16
  this->expander = expander;
     88c:	fc 01       	movw	r30, r24
     88e:	74 83       	std	Z+4, r23	; 0x04
     890:	63 83       	std	Z+3, r22	; 0x03
  this->port = port;
     892:	40 83       	st	Z, r20
  this->pin = pin;
     894:	21 83       	std	Z+1, r18	; 0x01
  set_mode(mode);
     896:	60 2f       	mov	r22, r16
     898:	c4 df       	rcall	.-120    	; 0x822 <_ZN11ExpanderPin8set_modeE4Mode>
}
     89a:	0f 91       	pop	r16
     89c:	08 95       	ret

0000089e <_ZN13OutputHandler20initialize_expandersEv>:
	push_button_leds[inner[j]].write(0);
	_delay_ms(pause);
	for (int j = 0; j < 12; ++j)
	push_button_leds[outer[j]].write(0);
	_delay_ms(pause);
     89e:	cf 93       	push	r28
     8a0:	df 93       	push	r29
     8a2:	ec 01       	movw	r28, r24
     8a4:	60 e2       	ldi	r22, 0x20	; 32
     8a6:	88 5f       	subi	r24, 0xF8	; 248
     8a8:	9e 4f       	sbci	r25, 0xFE	; 254
     8aa:	3c df       	rcall	.-392    	; 0x724 <_ZN8Expander11set_addressEh>
     8ac:	67 e2       	ldi	r22, 0x27	; 39
     8ae:	ce 01       	movw	r24, r28
     8b0:	81 5e       	subi	r24, 0xE1	; 225
     8b2:	9e 4f       	sbci	r25, 0xFE	; 254
     8b4:	37 df       	rcall	.-402    	; 0x724 <_ZN8Expander11set_addressEh>
     8b6:	df 91       	pop	r29
     8b8:	cf 91       	pop	r28
     8ba:	08 95       	ret

000008bc <_ZN13OutputHandler27initialize_push_button_ledsEv>:
     8bc:	ef 92       	push	r14
     8be:	ff 92       	push	r15
     8c0:	0f 93       	push	r16
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	ec 01       	movw	r28, r24
     8c8:	7c 01       	movw	r14, r24
     8ca:	88 ef       	ldi	r24, 0xF8	; 248
     8cc:	e8 1a       	sub	r14, r24
     8ce:	8e ef       	ldi	r24, 0xFE	; 254
     8d0:	f8 0a       	sbc	r15, r24
     8d2:	01 e0       	ldi	r16, 0x01	; 1
     8d4:	21 e0       	ldi	r18, 0x01	; 1
     8d6:	40 e0       	ldi	r20, 0x00	; 0
     8d8:	b7 01       	movw	r22, r14
     8da:	ce 01       	movw	r24, r28
     8dc:	8a 5c       	subi	r24, 0xCA	; 202
     8de:	9e 4f       	sbci	r25, 0xFE	; 254
     8e0:	d4 df       	rcall	.-88     	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8e2:	23 e0       	ldi	r18, 0x03	; 3
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	b7 01       	movw	r22, r14
     8e8:	ce 01       	movw	r24, r28
     8ea:	85 5c       	subi	r24, 0xC5	; 197
     8ec:	9e 4f       	sbci	r25, 0xFE	; 254
     8ee:	cd df       	rcall	.-102    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8f0:	25 e0       	ldi	r18, 0x05	; 5
     8f2:	40 e0       	ldi	r20, 0x00	; 0
     8f4:	b7 01       	movw	r22, r14
     8f6:	ce 01       	movw	r24, r28
     8f8:	80 5c       	subi	r24, 0xC0	; 192
     8fa:	9e 4f       	sbci	r25, 0xFE	; 254
     8fc:	c6 df       	rcall	.-116    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8fe:	27 e0       	ldi	r18, 0x07	; 7
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	b7 01       	movw	r22, r14
     904:	ce 01       	movw	r24, r28
     906:	8b 5b       	subi	r24, 0xBB	; 187
     908:	9e 4f       	sbci	r25, 0xFE	; 254
     90a:	bf df       	rcall	.-130    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     90c:	21 e0       	ldi	r18, 0x01	; 1
     90e:	41 e0       	ldi	r20, 0x01	; 1
     910:	b7 01       	movw	r22, r14
     912:	ce 01       	movw	r24, r28
     914:	86 5b       	subi	r24, 0xB6	; 182
     916:	9e 4f       	sbci	r25, 0xFE	; 254
     918:	b8 df       	rcall	.-144    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     91a:	23 e0       	ldi	r18, 0x03	; 3
     91c:	41 e0       	ldi	r20, 0x01	; 1
     91e:	b7 01       	movw	r22, r14
     920:	ce 01       	movw	r24, r28
     922:	81 5b       	subi	r24, 0xB1	; 177
     924:	9e 4f       	sbci	r25, 0xFE	; 254
     926:	b1 df       	rcall	.-158    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     928:	25 e0       	ldi	r18, 0x05	; 5
     92a:	41 e0       	ldi	r20, 0x01	; 1
     92c:	b7 01       	movw	r22, r14
     92e:	ce 01       	movw	r24, r28
     930:	8c 5a       	subi	r24, 0xAC	; 172
     932:	9e 4f       	sbci	r25, 0xFE	; 254
     934:	aa df       	rcall	.-172    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     936:	27 e0       	ldi	r18, 0x07	; 7
     938:	41 e0       	ldi	r20, 0x01	; 1
     93a:	b7 01       	movw	r22, r14
     93c:	ce 01       	movw	r24, r28
     93e:	87 5a       	subi	r24, 0xA7	; 167
     940:	9e 4f       	sbci	r25, 0xFE	; 254
     942:	a3 df       	rcall	.-186    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     944:	7e 01       	movw	r14, r28
     946:	81 ee       	ldi	r24, 0xE1	; 225
     948:	e8 1a       	sub	r14, r24
     94a:	8e ef       	ldi	r24, 0xFE	; 254
     94c:	f8 0a       	sbc	r15, r24
     94e:	21 e0       	ldi	r18, 0x01	; 1
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	b7 01       	movw	r22, r14
     954:	ce 01       	movw	r24, r28
     956:	82 5a       	subi	r24, 0xA2	; 162
     958:	9e 4f       	sbci	r25, 0xFE	; 254
     95a:	97 df       	rcall	.-210    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     95c:	23 e0       	ldi	r18, 0x03	; 3
     95e:	40 e0       	ldi	r20, 0x00	; 0
     960:	b7 01       	movw	r22, r14
     962:	ce 01       	movw	r24, r28
     964:	8d 59       	subi	r24, 0x9D	; 157
     966:	9e 4f       	sbci	r25, 0xFE	; 254
     968:	90 df       	rcall	.-224    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     96a:	25 e0       	ldi	r18, 0x05	; 5
     96c:	40 e0       	ldi	r20, 0x00	; 0
     96e:	b7 01       	movw	r22, r14
     970:	ce 01       	movw	r24, r28
     972:	88 59       	subi	r24, 0x98	; 152
     974:	9e 4f       	sbci	r25, 0xFE	; 254
     976:	89 df       	rcall	.-238    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     978:	27 e0       	ldi	r18, 0x07	; 7
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	b7 01       	movw	r22, r14
     97e:	ce 01       	movw	r24, r28
     980:	83 59       	subi	r24, 0x93	; 147
     982:	9e 4f       	sbci	r25, 0xFE	; 254
     984:	82 df       	rcall	.-252    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     986:	21 e0       	ldi	r18, 0x01	; 1
     988:	41 e0       	ldi	r20, 0x01	; 1
     98a:	b7 01       	movw	r22, r14
     98c:	ce 01       	movw	r24, r28
     98e:	8e 58       	subi	r24, 0x8E	; 142
     990:	9e 4f       	sbci	r25, 0xFE	; 254
     992:	7b df       	rcall	.-266    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     994:	23 e0       	ldi	r18, 0x03	; 3
     996:	41 e0       	ldi	r20, 0x01	; 1
     998:	b7 01       	movw	r22, r14
     99a:	ce 01       	movw	r24, r28
     99c:	89 58       	subi	r24, 0x89	; 137
     99e:	9e 4f       	sbci	r25, 0xFE	; 254
     9a0:	74 df       	rcall	.-280    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     9a2:	25 e0       	ldi	r18, 0x05	; 5
     9a4:	41 e0       	ldi	r20, 0x01	; 1
     9a6:	b7 01       	movw	r22, r14
     9a8:	ce 01       	movw	r24, r28
     9aa:	84 58       	subi	r24, 0x84	; 132
     9ac:	9e 4f       	sbci	r25, 0xFE	; 254
     9ae:	6d df       	rcall	.-294    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     9b0:	27 e0       	ldi	r18, 0x07	; 7
     9b2:	41 e0       	ldi	r20, 0x01	; 1
     9b4:	b7 01       	movw	r22, r14
     9b6:	ce 01       	movw	r24, r28
     9b8:	8f 57       	subi	r24, 0x7F	; 127
     9ba:	9e 4f       	sbci	r25, 0xFE	; 254
     9bc:	66 df       	rcall	.-308    	; 0x88a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	0f 91       	pop	r16
     9c4:	ff 90       	pop	r15
     9c6:	ef 90       	pop	r14
     9c8:	08 95       	ret

000009ca <_ZN13OutputHandler21initialize_panel_ledsEv>:
     9ca:	0f 93       	push	r16
     9cc:	1f 93       	push	r17
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	8c 01       	movw	r16, r24
     9d4:	ec 01       	movw	r28, r24
     9d6:	ca 57       	subi	r28, 0x7A	; 122
     9d8:	de 4f       	sbci	r29, 0xFE	; 254
     9da:	21 e0       	ldi	r18, 0x01	; 1
     9dc:	40 e0       	ldi	r20, 0x00	; 0
     9de:	62 e0       	ldi	r22, 0x02	; 2
     9e0:	ce 01       	movw	r24, r28
     9e2:	32 de       	rcall	.-924    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9e4:	21 e0       	ldi	r18, 0x01	; 1
     9e6:	41 e0       	ldi	r20, 0x01	; 1
     9e8:	62 e0       	ldi	r22, 0x02	; 2
     9ea:	c8 01       	movw	r24, r16
     9ec:	87 57       	subi	r24, 0x77	; 119
     9ee:	9e 4f       	sbci	r25, 0xFE	; 254
     9f0:	2b de       	rcall	.-938    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9f2:	21 e0       	ldi	r18, 0x01	; 1
     9f4:	42 e0       	ldi	r20, 0x02	; 2
     9f6:	62 e0       	ldi	r22, 0x02	; 2
     9f8:	c8 01       	movw	r24, r16
     9fa:	84 57       	subi	r24, 0x74	; 116
     9fc:	9e 4f       	sbci	r25, 0xFE	; 254
     9fe:	24 de       	rcall	.-952    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a00:	21 e0       	ldi	r18, 0x01	; 1
     a02:	43 e0       	ldi	r20, 0x03	; 3
     a04:	62 e0       	ldi	r22, 0x02	; 2
     a06:	c8 01       	movw	r24, r16
     a08:	81 57       	subi	r24, 0x71	; 113
     a0a:	9e 4f       	sbci	r25, 0xFE	; 254
     a0c:	1d de       	rcall	.-966    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a0e:	21 e0       	ldi	r18, 0x01	; 1
     a10:	44 e0       	ldi	r20, 0x04	; 4
     a12:	62 e0       	ldi	r22, 0x02	; 2
     a14:	c8 01       	movw	r24, r16
     a16:	8e 56       	subi	r24, 0x6E	; 110
     a18:	9e 4f       	sbci	r25, 0xFE	; 254
     a1a:	16 de       	rcall	.-980    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a1c:	21 e0       	ldi	r18, 0x01	; 1
     a1e:	45 e0       	ldi	r20, 0x05	; 5
     a20:	62 e0       	ldi	r22, 0x02	; 2
     a22:	c8 01       	movw	r24, r16
     a24:	8b 56       	subi	r24, 0x6B	; 107
     a26:	9e 4f       	sbci	r25, 0xFE	; 254
     a28:	0f de       	rcall	.-994    	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a2a:	21 e0       	ldi	r18, 0x01	; 1
     a2c:	46 e0       	ldi	r20, 0x06	; 6
     a2e:	62 e0       	ldi	r22, 0x02	; 2
     a30:	c8 01       	movw	r24, r16
     a32:	88 56       	subi	r24, 0x68	; 104
     a34:	9e 4f       	sbci	r25, 0xFE	; 254
     a36:	08 de       	rcall	.-1008   	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a38:	21 e0       	ldi	r18, 0x01	; 1
     a3a:	47 e0       	ldi	r20, 0x07	; 7
     a3c:	62 e0       	ldi	r22, 0x02	; 2
     a3e:	c8 01       	movw	r24, r16
     a40:	85 56       	subi	r24, 0x65	; 101
     a42:	9e 4f       	sbci	r25, 0xFE	; 254
     a44:	01 de       	rcall	.-1022   	; 0x648 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     a46:	02 56       	subi	r16, 0x62	; 98
     a48:	1e 4f       	sbci	r17, 0xFE	; 254
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	ce 01       	movw	r24, r28
     a4e:	48 de       	rcall	.-880    	; 0x6e0 <_ZN10DigitalPin5writeEb>
     a50:	23 96       	adiw	r28, 0x03	; 3
     a52:	c0 17       	cp	r28, r16
     a54:	d1 07       	cpc	r29, r17
     a56:	c9 f7       	brne	.-14     	; 0xa4a <_ZN13OutputHandler21initialize_panel_ledsEv+0x80>
     a58:	df 91       	pop	r29
     a5a:	cf 91       	pop	r28
     a5c:	1f 91       	pop	r17
     a5e:	0f 91       	pop	r16
     a60:	08 95       	ret

00000a62 <_ZN13OutputHandler24refresh_push_button_ledsEv>:
     a62:	6f 92       	push	r6
     a64:	7f 92       	push	r7
     a66:	8f 92       	push	r8
     a68:	9f 92       	push	r9
     a6a:	af 92       	push	r10
     a6c:	bf 92       	push	r11
     a6e:	cf 92       	push	r12
     a70:	df 92       	push	r13
     a72:	ef 92       	push	r14
     a74:	ff 92       	push	r15
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	8a 5c       	subi	r24, 0xCA	; 202
     a80:	9e 4f       	sbci	r25, 0xFE	; 254
     a82:	7c 01       	movw	r14, r24
     a84:	68 94       	set
     a86:	99 24       	eor	r9, r9
     a88:	96 f8       	bld	r9, 6
     a8a:	c0 e0       	ldi	r28, 0x00	; 0
     a8c:	d0 e0       	ldi	r29, 0x00	; 0
     a8e:	cc 24       	eor	r12, r12
     a90:	c3 94       	inc	r12
     a92:	d1 2c       	mov	r13, r1
     a94:	71 2c       	mov	r7, r1
     a96:	81 2c       	mov	r8, r1
     a98:	66 24       	eor	r6, r6
     a9a:	63 94       	inc	r6
     a9c:	89 2d       	mov	r24, r9
     a9e:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     aa2:	8c 01       	movw	r16, r24
     aa4:	88 e0       	ldi	r24, 0x08	; 8
     aa6:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     aaa:	56 01       	movw	r10, r12
     aac:	0c 2e       	mov	r0, r28
     aae:	02 c0       	rjmp	.+4      	; 0xab4 <_ZN13OutputHandler24refresh_push_button_ledsEv+0x52>
     ab0:	aa 0c       	add	r10, r10
     ab2:	bb 1c       	adc	r11, r11
     ab4:	0a 94       	dec	r0
     ab6:	e2 f7       	brpl	.-8      	; 0xab0 <_ZN13OutputHandler24refresh_push_button_ledsEv+0x4e>
     ab8:	8a 21       	and	r24, r10
     aba:	9b 21       	and	r25, r11
     abc:	96 01       	movw	r18, r12
     abe:	89 2b       	or	r24, r25
     ac0:	11 f4       	brne	.+4      	; 0xac6 <_ZN13OutputHandler24refresh_push_button_ledsEv+0x64>
     ac2:	27 2d       	mov	r18, r7
     ac4:	38 2d       	mov	r19, r8
     ac6:	02 2b       	or	r16, r18
     ac8:	13 2b       	or	r17, r19
     aca:	01 2b       	or	r16, r17
     acc:	d9 f0       	breq	.+54     	; 0xb04 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xa2>
     ace:	88 e0       	ldi	r24, 0x08	; 8
     ad0:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     ad4:	8a 21       	and	r24, r10
     ad6:	9b 21       	and	r25, r11
     ad8:	89 2b       	or	r24, r25
     ada:	21 f0       	breq	.+8      	; 0xae4 <_ZN13OutputHandler24refresh_push_button_ledsEv+0x82>
     adc:	66 2d       	mov	r22, r6
     ade:	c7 01       	movw	r24, r14
     ae0:	6c de       	rcall	.-808    	; 0x7ba <_ZN11ExpanderPin5writeEb>
     ae2:	18 c0       	rjmp	.+48     	; 0xb14 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xb2>
     ae4:	84 e8       	ldi	r24, 0x84	; 132
     ae6:	93 e0       	ldi	r25, 0x03	; 3
     ae8:	0e 94 85 12 	call	0x250a	; 0x250a <_ZN6Clocks6isDoneEv>
     aec:	88 23       	and	r24, r24
     aee:	91 f0       	breq	.+36     	; 0xb14 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xb2>
     af0:	60 91 83 03 	lds	r22, 0x0383	; 0x800383 <blinkState>
     af4:	c7 01       	movw	r24, r14
     af6:	61 de       	rcall	.-830    	; 0x7ba <_ZN11ExpanderPin5writeEb>
     af8:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <blinkState>
     afc:	86 25       	eor	r24, r6
     afe:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <blinkState>
     b02:	08 c0       	rjmp	.+16     	; 0xb14 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xb2>
     b04:	67 2d       	mov	r22, r7
     b06:	78 2d       	mov	r23, r8
     b08:	89 2d       	mov	r24, r9
     b0a:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <_ZN6Memory5writeEhj>
     b0e:	60 e0       	ldi	r22, 0x00	; 0
     b10:	c7 01       	movw	r24, r14
     b12:	53 de       	rcall	.-858    	; 0x7ba <_ZN11ExpanderPin5writeEb>
     b14:	21 96       	adiw	r28, 0x01	; 1
     b16:	93 94       	inc	r9
     b18:	85 e0       	ldi	r24, 0x05	; 5
     b1a:	e8 0e       	add	r14, r24
     b1c:	f1 1c       	adc	r15, r1
     b1e:	c0 31       	cpi	r28, 0x10	; 16
     b20:	d1 05       	cpc	r29, r1
     b22:	09 f0       	breq	.+2      	; 0xb26 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xc4>
     b24:	bb cf       	rjmp	.-138    	; 0xa9c <_ZN13OutputHandler24refresh_push_button_ledsEv+0x3a>
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	1f 91       	pop	r17
     b2c:	0f 91       	pop	r16
     b2e:	ff 90       	pop	r15
     b30:	ef 90       	pop	r14
     b32:	df 90       	pop	r13
     b34:	cf 90       	pop	r12
     b36:	bf 90       	pop	r11
     b38:	af 90       	pop	r10
     b3a:	9f 90       	pop	r9
     b3c:	8f 90       	pop	r8
     b3e:	7f 90       	pop	r7
     b40:	6f 90       	pop	r6
     b42:	08 95       	ret

00000b44 <_ZN13OutputHandler18refresh_panel_ledsEv>:
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	ec 01       	movw	r28, r24
     b4a:	84 e0       	ldi	r24, 0x04	; 4
     b4c:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     b50:	89 2b       	or	r24, r25
     b52:	59 f0       	breq	.+22     	; 0xb6a <_ZN13OutputHandler18refresh_panel_ledsEv+0x26>
     b54:	61 e0       	ldi	r22, 0x01	; 1
     b56:	ce 01       	movw	r24, r28
     b58:	8a 57       	subi	r24, 0x7A	; 122
     b5a:	9e 4f       	sbci	r25, 0xFE	; 254
     b5c:	c1 dd       	rcall	.-1150   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	ce 01       	movw	r24, r28
     b62:	8e 56       	subi	r24, 0x6E	; 110
     b64:	9e 4f       	sbci	r25, 0xFE	; 254
     b66:	bc dd       	rcall	.-1160   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b68:	0a c0       	rjmp	.+20     	; 0xb7e <_ZN13OutputHandler18refresh_panel_ledsEv+0x3a>
     b6a:	60 e0       	ldi	r22, 0x00	; 0
     b6c:	ce 01       	movw	r24, r28
     b6e:	8a 57       	subi	r24, 0x7A	; 122
     b70:	9e 4f       	sbci	r25, 0xFE	; 254
     b72:	b6 dd       	rcall	.-1172   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b74:	61 e0       	ldi	r22, 0x01	; 1
     b76:	ce 01       	movw	r24, r28
     b78:	8e 56       	subi	r24, 0x6E	; 110
     b7a:	9e 4f       	sbci	r25, 0xFE	; 254
     b7c:	b1 dd       	rcall	.-1182   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b7e:	87 e0       	ldi	r24, 0x07	; 7
     b80:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     b84:	89 2b       	or	r24, r25
     b86:	59 f0       	breq	.+22     	; 0xb9e <_ZN13OutputHandler18refresh_panel_ledsEv+0x5a>
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	ce 01       	movw	r24, r28
     b8c:	81 57       	subi	r24, 0x71	; 113
     b8e:	9e 4f       	sbci	r25, 0xFE	; 254
     b90:	a7 dd       	rcall	.-1202   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b92:	61 e0       	ldi	r22, 0x01	; 1
     b94:	ce 01       	movw	r24, r28
     b96:	85 56       	subi	r24, 0x65	; 101
     b98:	9e 4f       	sbci	r25, 0xFE	; 254
     b9a:	a2 dd       	rcall	.-1212   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     b9c:	0a c0       	rjmp	.+20     	; 0xbb2 <_ZN13OutputHandler18refresh_panel_ledsEv+0x6e>
     b9e:	61 e0       	ldi	r22, 0x01	; 1
     ba0:	ce 01       	movw	r24, r28
     ba2:	81 57       	subi	r24, 0x71	; 113
     ba4:	9e 4f       	sbci	r25, 0xFE	; 254
     ba6:	9c dd       	rcall	.-1224   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	ce 01       	movw	r24, r28
     bac:	85 56       	subi	r24, 0x65	; 101
     bae:	9e 4f       	sbci	r25, 0xFE	; 254
     bb0:	97 dd       	rcall	.-1234   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     bb2:	88 e0       	ldi	r24, 0x08	; 8
     bb4:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     bb8:	89 2b       	or	r24, r25
     bba:	59 f0       	breq	.+22     	; 0xbd2 <_ZN13OutputHandler18refresh_panel_ledsEv+0x8e>
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	ce 01       	movw	r24, r28
     bc0:	84 57       	subi	r24, 0x74	; 116
     bc2:	9e 4f       	sbci	r25, 0xFE	; 254
     bc4:	8d dd       	rcall	.-1254   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     bc6:	61 e0       	ldi	r22, 0x01	; 1
     bc8:	ce 01       	movw	r24, r28
     bca:	88 56       	subi	r24, 0x68	; 104
     bcc:	9e 4f       	sbci	r25, 0xFE	; 254
     bce:	88 dd       	rcall	.-1264   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     bd0:	0a c0       	rjmp	.+20     	; 0xbe6 <_ZN13OutputHandler18refresh_panel_ledsEv+0xa2>
     bd2:	61 e0       	ldi	r22, 0x01	; 1
     bd4:	ce 01       	movw	r24, r28
     bd6:	84 57       	subi	r24, 0x74	; 116
     bd8:	9e 4f       	sbci	r25, 0xFE	; 254
     bda:	82 dd       	rcall	.-1276   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	ce 01       	movw	r24, r28
     be0:	88 56       	subi	r24, 0x68	; 104
     be2:	9e 4f       	sbci	r25, 0xFE	; 254
     be4:	7d dd       	rcall	.-1286   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     be6:	df 91       	pop	r29
     be8:	cf 91       	pop	r28
     bea:	08 95       	ret

00000bec <_ZN13OutputHandler7refreshEv>:
     bec:	0f 93       	push	r16
     bee:	1f 93       	push	r17
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	00 d0       	rcall	.+0      	; 0xbf6 <_ZN13OutputHandler7refreshEv+0xa>
     bf6:	00 d0       	rcall	.+0      	; 0xbf8 <_ZN13OutputHandler7refreshEv+0xc>
     bf8:	1f 92       	push	r1
     bfa:	cd b7       	in	r28, 0x3d	; 61
     bfc:	de b7       	in	r29, 0x3e	; 62
     bfe:	8c 01       	movw	r16, r24
     c00:	30 df       	rcall	.-416    	; 0xa62 <_ZN13OutputHandler24refresh_push_button_ledsEv>
     c02:	c8 01       	movw	r24, r16
     c04:	9f df       	rcall	.-194    	; 0xb44 <_ZN13OutputHandler18refresh_panel_ledsEv>
     c06:	c8 01       	movw	r24, r16
     c08:	02 96       	adiw	r24, 0x02	; 2
     c0a:	0e 94 c2 11 	call	0x2384	; 0x2384 <_ZNK11TouchScreen7refreshEv>
     c0e:	80 e9       	ldi	r24, 0x90	; 144
     c10:	93 e0       	ldi	r25, 0x03	; 3
     c12:	0e 94 85 12 	call	0x250a	; 0x250a <_ZN6Clocks6isDoneEv>
     c16:	88 23       	and	r24, r24
     c18:	09 f4       	brne	.+2      	; 0xc1c <_ZN13OutputHandler7refreshEv+0x30>
     c1a:	49 c0       	rjmp	.+146    	; 0xcae <_ZN13OutputHandler7refreshEv+0xc2>
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     c22:	4a e0       	ldi	r20, 0x0A	; 10
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	bc 01       	movw	r22, r24
     c28:	8a ef       	ldi	r24, 0xFA	; 250
     c2a:	93 e0       	ldi	r25, 0x03	; 3
     c2c:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <_ZN17Adafruit_7segment5printEji>
     c30:	8a ef       	ldi	r24, 0xFA	; 250
     c32:	93 e0       	ldi	r25, 0x03	; 3
     c34:	03 d6       	rcall	.+3078   	; 0x183c <_ZN20Adafruit_LEDBackpack12writeDisplayEv>
     c36:	42 e0       	ldi	r20, 0x02	; 2
     c38:	60 e0       	ldi	r22, 0x00	; 0
     c3a:	8c e9       	ldi	r24, 0x9C	; 156
     c3c:	93 e0       	ldi	r25, 0x03	; 3
     c3e:	b4 d3       	rcall	.+1896   	; 0x13a8 <_ZN3LCD9setCursorEhh>
     c40:	66 e4       	ldi	r22, 0x46	; 70
     c42:	72 e0       	ldi	r23, 0x02	; 2
     c44:	8c e9       	ldi	r24, 0x9C	; 156
     c46:	93 e0       	ldi	r25, 0x03	; 3
     c48:	86 d4       	rcall	.+2316   	; 0x1556 <_ZN3LCD5printEPKc>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     c50:	9f 93       	push	r25
     c52:	8f 93       	push	r24
     c54:	8f e4       	ldi	r24, 0x4F	; 79
     c56:	92 e0       	ldi	r25, 0x02	; 2
     c58:	9f 93       	push	r25
     c5a:	8f 93       	push	r24
     c5c:	8e 01       	movw	r16, r28
     c5e:	0f 5f       	subi	r16, 0xFF	; 255
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	1f 93       	push	r17
     c64:	0f 93       	push	r16
     c66:	0e 94 7f 19 	call	0x32fe	; 0x32fe <sprintf>
     c6a:	62 e5       	ldi	r22, 0x52	; 82
     c6c:	72 e0       	ldi	r23, 0x02	; 2
     c6e:	8c e9       	ldi	r24, 0x9C	; 156
     c70:	93 e0       	ldi	r25, 0x03	; 3
     c72:	71 d4       	rcall	.+2274   	; 0x1556 <_ZN3LCD5printEPKc>
     c74:	42 e0       	ldi	r20, 0x02	; 2
     c76:	68 e0       	ldi	r22, 0x08	; 8
     c78:	8c e9       	ldi	r24, 0x9C	; 156
     c7a:	93 e0       	ldi	r25, 0x03	; 3
     c7c:	95 d3       	rcall	.+1834   	; 0x13a8 <_ZN3LCD9setCursorEhh>
     c7e:	b8 01       	movw	r22, r16
     c80:	8c e9       	ldi	r24, 0x9C	; 156
     c82:	93 e0       	ldi	r25, 0x03	; 3
     c84:	68 d4       	rcall	.+2256   	; 0x1556 <_ZN3LCD5printEPKc>
     c86:	80 e5       	ldi	r24, 0x50	; 80
     c88:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN6Memory4readEh>
     c8c:	4a e0       	ldi	r20, 0x0A	; 10
     c8e:	50 e0       	ldi	r21, 0x00	; 0
     c90:	64 ea       	ldi	r22, 0xA4	; 164
     c92:	71 e0       	ldi	r23, 0x01	; 1
     c94:	82 eb       	ldi	r24, 0xB2	; 178
     c96:	93 e0       	ldi	r25, 0x03	; 3
     c98:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <_ZN17Adafruit_7segment5printEii>
     c9c:	82 eb       	ldi	r24, 0xB2	; 178
     c9e:	93 e0       	ldi	r25, 0x03	; 3
     ca0:	cd d5       	rcall	.+2970   	; 0x183c <_ZN20Adafruit_LEDBackpack12writeDisplayEv>
     ca2:	0f 90       	pop	r0
     ca4:	0f 90       	pop	r0
     ca6:	0f 90       	pop	r0
     ca8:	0f 90       	pop	r0
     caa:	0f 90       	pop	r0
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	df 91       	pop	r29
     cba:	cf 91       	pop	r28
     cbc:	1f 91       	pop	r17
     cbe:	0f 91       	pop	r16
     cc0:	08 95       	ret

00000cc2 <_ZN13OutputHandler6spiralEv>:
     cc2:	af 92       	push	r10
     cc4:	bf 92       	push	r11
     cc6:	cf 92       	push	r12
     cc8:	df 92       	push	r13
     cca:	ef 92       	push	r14
     ccc:	ff 92       	push	r15
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	cf 93       	push	r28
     cd4:	df 93       	push	r29
     cd6:	cd b7       	in	r28, 0x3d	; 61
     cd8:	de b7       	in	r29, 0x3e	; 62
     cda:	a0 97       	sbiw	r28, 0x20	; 32
     cdc:	0f b6       	in	r0, 0x3f	; 63
     cde:	f8 94       	cli
     ce0:	de bf       	out	0x3e, r29	; 62
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	cd bf       	out	0x3d, r28	; 61
     ce6:	6c 01       	movw	r12, r24
     ce8:	20 e2       	ldi	r18, 0x20	; 32
     cea:	e6 e0       	ldi	r30, 0x06	; 6
     cec:	f2 e0       	ldi	r31, 0x02	; 2
     cee:	ce 01       	movw	r24, r28
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	dc 01       	movw	r26, r24
     cf4:	01 90       	ld	r0, Z+
     cf6:	0d 92       	st	X+, r0
     cf8:	2a 95       	dec	r18
     cfa:	e1 f7       	brne	.-8      	; 0xcf4 <_ZN13OutputHandler6spiralEv+0x32>
     cfc:	8e 01       	movw	r16, r28
     cfe:	0f 5d       	subi	r16, 0xDF	; 223
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	7c 01       	movw	r14, r24
     d04:	58 01       	movw	r10, r16
     d06:	f5 01       	movw	r30, r10
     d08:	92 91       	ld	r25, -Z
     d0a:	82 91       	ld	r24, -Z
     d0c:	5f 01       	movw	r10, r30
     d0e:	9c 01       	movw	r18, r24
     d10:	22 0f       	add	r18, r18
     d12:	33 1f       	adc	r19, r19
     d14:	22 0f       	add	r18, r18
     d16:	33 1f       	adc	r19, r19
     d18:	82 0f       	add	r24, r18
     d1a:	93 1f       	adc	r25, r19
     d1c:	8a 5c       	subi	r24, 0xCA	; 202
     d1e:	9e 4f       	sbci	r25, 0xFE	; 254
     d20:	61 e0       	ldi	r22, 0x01	; 1
     d22:	8c 0d       	add	r24, r12
     d24:	9d 1d       	adc	r25, r13
     d26:	49 dd       	rcall	.-1390   	; 0x7ba <_ZN11ExpanderPin5writeEb>
     d28:	ff ef       	ldi	r31, 0xFF	; 255
     d2a:	20 e7       	ldi	r18, 0x70	; 112
     d2c:	82 e0       	ldi	r24, 0x02	; 2
     d2e:	f1 50       	subi	r31, 0x01	; 1
     d30:	20 40       	sbci	r18, 0x00	; 0
     d32:	80 40       	sbci	r24, 0x00	; 0
     d34:	e1 f7       	brne	.-8      	; 0xd2e <_ZN13OutputHandler6spiralEv+0x6c>
     d36:	00 c0       	rjmp	.+0      	; 0xd38 <_ZN13OutputHandler6spiralEv+0x76>
     d38:	00 00       	nop
     d3a:	ea 14       	cp	r14, r10
     d3c:	fb 04       	cpc	r15, r11
     d3e:	19 f7       	brne	.-58     	; 0xd06 <_ZN13OutputHandler6spiralEv+0x44>
     d40:	f8 01       	movw	r30, r16
     d42:	92 91       	ld	r25, -Z
     d44:	82 91       	ld	r24, -Z
     d46:	8f 01       	movw	r16, r30
     d48:	9c 01       	movw	r18, r24
     d4a:	22 0f       	add	r18, r18
     d4c:	33 1f       	adc	r19, r19
     d4e:	22 0f       	add	r18, r18
     d50:	33 1f       	adc	r19, r19
     d52:	82 0f       	add	r24, r18
     d54:	93 1f       	adc	r25, r19
     d56:	8a 5c       	subi	r24, 0xCA	; 202
     d58:	9e 4f       	sbci	r25, 0xFE	; 254
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	8c 0d       	add	r24, r12
     d5e:	9d 1d       	adc	r25, r13
     d60:	2c dd       	rcall	.-1448   	; 0x7ba <_ZN11ExpanderPin5writeEb>
     d62:	ff ef       	ldi	r31, 0xFF	; 255
     d64:	20 e7       	ldi	r18, 0x70	; 112
     d66:	82 e0       	ldi	r24, 0x02	; 2
     d68:	f1 50       	subi	r31, 0x01	; 1
     d6a:	20 40       	sbci	r18, 0x00	; 0
     d6c:	80 40       	sbci	r24, 0x00	; 0
     d6e:	e1 f7       	brne	.-8      	; 0xd68 <_ZN13OutputHandler6spiralEv+0xa6>
     d70:	00 c0       	rjmp	.+0      	; 0xd72 <_ZN13OutputHandler6spiralEv+0xb0>
     d72:	00 00       	nop
     d74:	0e 15       	cp	r16, r14
     d76:	1f 05       	cpc	r17, r15
     d78:	19 f7       	brne	.-58     	; 0xd40 <_ZN13OutputHandler6spiralEv+0x7e>
     d7a:	a0 96       	adiw	r28, 0x20	; 32
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	de bf       	out	0x3e, r29	; 62
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	cd bf       	out	0x3d, r28	; 61
     d86:	df 91       	pop	r29
     d88:	cf 91       	pop	r28
     d8a:	1f 91       	pop	r17
     d8c:	0f 91       	pop	r16
     d8e:	ff 90       	pop	r15
     d90:	ef 90       	pop	r14
     d92:	df 90       	pop	r13
     d94:	cf 90       	pop	r12
     d96:	bf 90       	pop	r11
     d98:	af 90       	pop	r10
     d9a:	08 95       	ret

00000d9c <_ZN13OutputHandler7startupEv>:
     d9c:	6f 92       	push	r6
     d9e:	7f 92       	push	r7
     da0:	8f 92       	push	r8
     da2:	9f 92       	push	r9
     da4:	af 92       	push	r10
     da6:	bf 92       	push	r11
     da8:	cf 92       	push	r12
     daa:	df 92       	push	r13
     dac:	ef 92       	push	r14
     dae:	ff 92       	push	r15
     db0:	0f 93       	push	r16
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	7c 01       	movw	r14, r24
     dba:	61 2c       	mov	r6, r1
     dbc:	71 2c       	mov	r7, r1
     dbe:	0f 2e       	mov	r0, r31
     dc0:	f3 e0       	ldi	r31, 0x03	; 3
     dc2:	af 2e       	mov	r10, r31
     dc4:	b1 2c       	mov	r11, r1
     dc6:	f0 2d       	mov	r31, r0
     dc8:	81 2c       	mov	r8, r1
     dca:	91 2c       	mov	r9, r1
     dcc:	63 01       	movw	r12, r6
     dce:	21 e0       	ldi	r18, 0x01	; 1
     dd0:	c2 22       	and	r12, r18
     dd2:	dd 24       	eor	r13, r13
     dd4:	c1 14       	cp	r12, r1
     dd6:	d1 04       	cpc	r13, r1
     dd8:	21 f0       	breq	.+8      	; 0xde2 <_ZN13OutputHandler7startupEv+0x46>
     dda:	e5 01       	movw	r28, r10
     ddc:	c8 19       	sub	r28, r8
     dde:	d9 09       	sbc	r29, r9
     de0:	01 c0       	rjmp	.+2      	; 0xde4 <_ZN13OutputHandler7startupEv+0x48>
     de2:	e4 01       	movw	r28, r8
     de4:	8e 01       	movw	r16, r28
     de6:	00 0f       	add	r16, r16
     de8:	11 1f       	adc	r17, r17
     dea:	0c 0f       	add	r16, r28
     dec:	1d 1f       	adc	r17, r29
     dee:	0a 57       	subi	r16, 0x7A	; 122
     df0:	1e 4f       	sbci	r17, 0xFE	; 254
     df2:	0e 0d       	add	r16, r14
     df4:	1f 1d       	adc	r17, r15
     df6:	61 e0       	ldi	r22, 0x01	; 1
     df8:	c8 01       	movw	r24, r16
     dfa:	72 dc       	rcall	.-1820   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     dfc:	24 96       	adiw	r28, 0x04	; 4
     dfe:	ce 01       	movw	r24, r28
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	c8 0f       	add	r28, r24
     e06:	d9 1f       	adc	r29, r25
     e08:	ca 57       	subi	r28, 0x7A	; 122
     e0a:	de 4f       	sbci	r29, 0xFE	; 254
     e0c:	ce 0d       	add	r28, r14
     e0e:	df 1d       	adc	r29, r15
     e10:	61 e0       	ldi	r22, 0x01	; 1
     e12:	ce 01       	movw	r24, r28
     e14:	65 dc       	rcall	.-1846   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     e16:	8f ef       	ldi	r24, 0xFF	; 255
     e18:	90 e7       	ldi	r25, 0x70	; 112
     e1a:	22 e0       	ldi	r18, 0x02	; 2
     e1c:	81 50       	subi	r24, 0x01	; 1
     e1e:	90 40       	sbci	r25, 0x00	; 0
     e20:	20 40       	sbci	r18, 0x00	; 0
     e22:	e1 f7       	brne	.-8      	; 0xe1c <_ZN13OutputHandler7startupEv+0x80>
     e24:	00 c0       	rjmp	.+0      	; 0xe26 <_ZN13OutputHandler7startupEv+0x8a>
     e26:	00 00       	nop
     e28:	60 e0       	ldi	r22, 0x00	; 0
     e2a:	c8 01       	movw	r24, r16
     e2c:	59 dc       	rcall	.-1870   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     e2e:	60 e0       	ldi	r22, 0x00	; 0
     e30:	ce 01       	movw	r24, r28
     e32:	56 dc       	rcall	.-1876   	; 0x6e0 <_ZN10DigitalPin5writeEb>
     e34:	8f ef       	ldi	r24, 0xFF	; 255
     e36:	88 1a       	sub	r8, r24
     e38:	98 0a       	sbc	r9, r24
     e3a:	94 e0       	ldi	r25, 0x04	; 4
     e3c:	89 16       	cp	r8, r25
     e3e:	91 04       	cpc	r9, r1
     e40:	49 f6       	brne	.-110    	; 0xdd4 <_ZN13OutputHandler7startupEv+0x38>
     e42:	2f ef       	ldi	r18, 0xFF	; 255
     e44:	62 1a       	sub	r6, r18
     e46:	72 0a       	sbc	r7, r18
     e48:	84 e0       	ldi	r24, 0x04	; 4
     e4a:	68 16       	cp	r6, r24
     e4c:	71 04       	cpc	r7, r1
     e4e:	09 f0       	breq	.+2      	; 0xe52 <_ZN13OutputHandler7startupEv+0xb6>
     e50:	bb cf       	rjmp	.-138    	; 0xdc8 <_ZN13OutputHandler7startupEv+0x2c>
     e52:	c7 01       	movw	r24, r14
     e54:	36 df       	rcall	.-404    	; 0xcc2 <_ZN13OutputHandler6spiralEv>
     e56:	df 91       	pop	r29
     e58:	cf 91       	pop	r28
     e5a:	1f 91       	pop	r17
     e5c:	0f 91       	pop	r16
     e5e:	ff 90       	pop	r15
     e60:	ef 90       	pop	r14
     e62:	df 90       	pop	r13
     e64:	cf 90       	pop	r12
     e66:	bf 90       	pop	r11
     e68:	af 90       	pop	r10
     e6a:	9f 90       	pop	r9
     e6c:	8f 90       	pop	r8
     e6e:	7f 90       	pop	r7
     e70:	6f 90       	pop	r6
     e72:	08 95       	ret

00000e74 <_GLOBAL__sub_I_LsevenSeg>:
     e74:	8f 92       	push	r8
     e76:	af 92       	push	r10
     e78:	cf 92       	push	r12
     e7a:	ef 92       	push	r14
     e7c:	0f 93       	push	r16
#include "../i2c/LiquidCrystal_I2C.hpp"
#include <stdio.h>

#define F_CPU 16000000UL
#include <util/delay.h>
Adafruit_7segment LsevenSeg(0x70);
     e7e:	60 e7       	ldi	r22, 0x70	; 112
     e80:	8a ef       	ldi	r24, 0xFA	; 250
     e82:	93 e0       	ldi	r25, 0x03	; 3
     e84:	f3 d4       	rcall	.+2534   	; 0x186c <_ZN17Adafruit_7segmentC1Eh>
Adafruit_7segment RsevenSeg(0x71);
     e86:	61 e7       	ldi	r22, 0x71	; 113
     e88:	82 eb       	ldi	r24, 0xB2	; 178
     e8a:	93 e0       	ldi	r25, 0x03	; 3
     e8c:	ef d4       	rcall	.+2526   	; 0x186c <_ZN17Adafruit_7segmentC1Eh>
LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7);
     e8e:	0f 2e       	mov	r0, r31
     e90:	f7 e0       	ldi	r31, 0x07	; 7
     e92:	8f 2e       	mov	r8, r31
     e94:	f0 2d       	mov	r31, r0
     e96:	0f 2e       	mov	r0, r31
     e98:	f6 e0       	ldi	r31, 0x06	; 6
     e9a:	af 2e       	mov	r10, r31
     e9c:	f0 2d       	mov	r31, r0
     e9e:	0f 2e       	mov	r0, r31
     ea0:	f5 e0       	ldi	r31, 0x05	; 5
     ea2:	cf 2e       	mov	r12, r31
     ea4:	f0 2d       	mov	r31, r0
     ea6:	68 94       	set
     ea8:	ee 24       	eor	r14, r14
     eaa:	e2 f8       	bld	r14, 2
     eac:	00 e0       	ldi	r16, 0x00	; 0
     eae:	21 e0       	ldi	r18, 0x01	; 1
     eb0:	42 e0       	ldi	r20, 0x02	; 2
     eb2:	6f e3       	ldi	r22, 0x3F	; 63
     eb4:	8c e9       	ldi	r24, 0x9C	; 156
     eb6:	93 e0       	ldi	r25, 0x03	; 3
     eb8:	ae d3       	rcall	.+1884   	; 0x1616 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh>
Clocks UpdateTimer;
     eba:	80 e9       	ldi	r24, 0x90	; 144
     ebc:	93 e0       	ldi	r25, 0x03	; 3
     ebe:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN6ClocksC1Ev>
	panel_leds[6].initialize(C, SIX, OUTPUT);
	panel_leds[7].initialize(C, SEVEN, OUTPUT);
	for (int i = 0; i < 8; ++i)
	panel_leds[i].write(0);
}
Clocks blinkTimer(500);
     ec2:	44 ef       	ldi	r20, 0xF4	; 244
     ec4:	51 e0       	ldi	r21, 0x01	; 1
     ec6:	60 e0       	ldi	r22, 0x00	; 0
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	84 e8       	ldi	r24, 0x84	; 132
     ecc:	93 e0       	ldi	r25, 0x03	; 3
     ece:	0e 94 52 12 	call	0x24a4	; 0x24a4 <_ZN6ClocksC1El>
	push_button_leds[inner[j]].write(0);
	_delay_ms(pause);
	for (int j = 0; j < 12; ++j)
	push_button_leds[outer[j]].write(0);
	_delay_ms(pause);
     ed2:	0f 91       	pop	r16
     ed4:	ef 90       	pop	r14
     ed6:	cf 90       	pop	r12
     ed8:	af 90       	pop	r10
     eda:	8f 90       	pop	r8
     edc:	08 95       	ret

00000ede <_ZN13OutputHandler10initializeEP6Memory>:
Adafruit_7segment LsevenSeg(0x70);
Adafruit_7segment RsevenSeg(0x71);
LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7);
Clocks UpdateTimer;
void OutputHandler::initialize (Memory * memory)
{
     ede:	0f 93       	push	r16
     ee0:	1f 93       	push	r17
     ee2:	cf 93       	push	r28
     ee4:	df 93       	push	r29
     ee6:	ec 01       	movw	r28, r24
     ee8:	8b 01       	movw	r16, r22
	this->memory = memory;
     eea:	79 83       	std	Y+1, r23	; 0x01
     eec:	68 83       	st	Y, r22
	initialize_expanders();
     eee:	d7 dc       	rcall	.-1618   	; 0x89e <_ZN13OutputHandler20initialize_expandersEv>
	initialize_push_button_leds();
     ef0:	ce 01       	movw	r24, r28
     ef2:	e4 dc       	rcall	.-1592   	; 0x8bc <_ZN13OutputHandler27initialize_push_button_ledsEv>
	initialize_panel_leds();
     ef4:	ce 01       	movw	r24, r28
     ef6:	69 dd       	rcall	.-1326   	; 0x9ca <_ZN13OutputHandler21initialize_panel_ledsEv>
     ef8:	48 ec       	ldi	r20, 0xC8	; 200
	UpdateTimer.setInterval(200);
     efa:	50 e0       	ldi	r21, 0x00	; 0
     efc:	60 e0       	ldi	r22, 0x00	; 0
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	80 e9       	ldi	r24, 0x90	; 144
     f02:	93 e0       	ldi	r25, 0x03	; 3
     f04:	0e 94 72 12 	call	0x24e4	; 0x24e4 <_ZN6Clocks11setIntervalEl>
     f08:	43 e0       	ldi	r20, 0x03	; 3
	screen.initialize(memory, UART_3);
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	b8 01       	movw	r22, r16
     f0e:	ce 01       	movw	r24, r28
     f10:	02 96       	adiw	r24, 0x02	; 2
     f12:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <_ZN11TouchScreen10initializeEP6Memoryj>
     f16:	20 e0       	ldi	r18, 0x00	; 0

	lcd.begin (20, 4); // 20 x 4 LCD module
     f18:	44 e0       	ldi	r20, 0x04	; 4
     f1a:	64 e1       	ldi	r22, 0x14	; 20
     f1c:	8c e9       	ldi	r24, 0x9C	; 156
     f1e:	93 e0       	ldi	r25, 0x03	; 3
     f20:	47 d4       	rcall	.+2190   	; 0x17b0 <_ZN17LiquidCrystal_I2C5beginEhhh>
     f22:	40 e0       	ldi	r20, 0x00	; 0
	lcd.setBacklightPin(3, POSITIVE); // BL, BL_POL
     f24:	63 e0       	ldi	r22, 0x03	; 3
     f26:	8c e9       	ldi	r24, 0x9C	; 156
     f28:	93 e0       	ldi	r25, 0x03	; 3
     f2a:	4b d3       	rcall	.+1686   	; 0x15c2 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol>
	lcd.setBacklight(1);
     f2c:	61 e0       	ldi	r22, 0x01	; 1
     f2e:	8c e9       	ldi	r24, 0x9C	; 156
     f30:	93 e0       	ldi	r25, 0x03	; 3
     f32:	5b d3       	rcall	.+1718   	; 0x15ea <_ZN17LiquidCrystal_I2C12setBacklightEh>
	lcd.print("NASA Robotics");
     f34:	68 e5       	ldi	r22, 0x58	; 88
     f36:	72 e0       	ldi	r23, 0x02	; 2
     f38:	8c e9       	ldi	r24, 0x9C	; 156
     f3a:	93 e0       	ldi	r25, 0x03	; 3
     f3c:	0c d3       	rcall	.+1560   	; 0x1556 <_ZN3LCD5printEPKc>
	lcd.setCursor(0, 1);
     f3e:	41 e0       	ldi	r20, 0x01	; 1
     f40:	60 e0       	ldi	r22, 0x00	; 0
     f42:	8c e9       	ldi	r24, 0x9C	; 156
     f44:	93 e0       	ldi	r25, 0x03	; 3
     f46:	30 d2       	rcall	.+1120   	; 0x13a8 <_ZN3LCD9setCursorEhh>
	lcd.print("Control Box: V2.3");
     f48:	66 e6       	ldi	r22, 0x66	; 102
     f4a:	72 e0       	ldi	r23, 0x02	; 2
     f4c:	8c e9       	ldi	r24, 0x9C	; 156
     f4e:	93 e0       	ldi	r25, 0x03	; 3
	LsevenSeg.begin(0x70);
     f50:	02 d3       	rcall	.+1540   	; 0x1556 <_ZN3LCD5printEPKc>
     f52:	60 e7       	ldi	r22, 0x70	; 112
     f54:	8a ef       	ldi	r24, 0xFA	; 250
     f56:	93 e0       	ldi	r25, 0x03	; 3
     f58:	5b d4       	rcall	.+2230   	; 0x1810 <_ZN20Adafruit_LEDBackpack5beginEh>
	RsevenSeg.begin(0x71);
     f5a:	61 e7       	ldi	r22, 0x71	; 113
     f5c:	82 eb       	ldi	r24, 0xB2	; 178
     f5e:	93 e0       	ldi	r25, 0x03	; 3
     f60:	57 d4       	rcall	.+2222   	; 0x1810 <_ZN20Adafruit_LEDBackpack5beginEh>
     f62:	df 91       	pop	r29
}
     f64:	cf 91       	pop	r28
     f66:	1f 91       	pop	r17
     f68:	0f 91       	pop	r16
     f6a:	08 95       	ret

00000f6c <_Z10copy_rangePhS_h>:
     f6c:	af 92       	push	r10
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
	state = DONE;
     f6e:	bf 92       	push	r11
     f70:	cf 92       	push	r12
     f72:	df 92       	push	r13
     f74:	ef 92       	push	r14
     f76:	ff 92       	push	r15
     f78:	0f 93       	push	r16
     f7a:	1f 93       	push	r17
     f7c:	cf 93       	push	r28
     f7e:	df 93       	push	r29
     f80:	a4 2e       	mov	r10, r20
     f82:	b1 2c       	mov	r11, r1
     f84:	1a 14       	cp	r1, r10
     f86:	1b 04       	cpc	r1, r11
     f88:	2c f5       	brge	.+74     	; 0xfd4 <_Z10copy_rangePhS_h+0x68>
     f8a:	e8 2e       	mov	r14, r24
     f8c:	f9 2e       	mov	r15, r25
     f8e:	06 2f       	mov	r16, r22
     f90:	17 2f       	mov	r17, r23
     f92:	c0 e0       	ldi	r28, 0x00	; 0
     f94:	d0 e0       	ldi	r29, 0x00	; 0
     f96:	0f 2e       	mov	r0, r31
     f98:	f8 e7       	ldi	r31, 0x78	; 120
     f9a:	cf 2e       	mov	r12, r31
     f9c:	f2 e0       	ldi	r31, 0x02	; 2
     f9e:	df 2e       	mov	r13, r31
     fa0:	f0 2d       	mov	r31, r0
     fa2:	f7 01       	movw	r30, r14
     fa4:	81 91       	ld	r24, Z+
     fa6:	7f 01       	movw	r14, r30
     fa8:	f8 01       	movw	r30, r16
     faa:	81 93       	st	Z+, r24
     fac:	8f 01       	movw	r16, r30
     fae:	80 81       	ld	r24, Z
     fb0:	1f 92       	push	r1
     fb2:	8f 93       	push	r24
     fb4:	df 93       	push	r29
     fb6:	cf 93       	push	r28
     fb8:	df 92       	push	r13
     fba:	cf 92       	push	r12
     fbc:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
     fc0:	21 96       	adiw	r28, 0x01	; 1
     fc2:	0f 90       	pop	r0
     fc4:	0f 90       	pop	r0
     fc6:	0f 90       	pop	r0
     fc8:	0f 90       	pop	r0
     fca:	0f 90       	pop	r0
     fcc:	0f 90       	pop	r0
     fce:	ca 15       	cp	r28, r10
     fd0:	db 05       	cpc	r29, r11
     fd2:	39 f7       	brne	.-50     	; 0xfa2 <_Z10copy_rangePhS_h+0x36>
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	bf 90       	pop	r11
     fe6:	af 90       	pop	r10
     fe8:	08 95       	ret

00000fea <_ZN3I2C11set_addressEh>:
     fea:	66 0f       	add	r22, r22
     fec:	fc 01       	movw	r30, r24
     fee:	61 83       	std	Z+1, r22	; 0x01
     ff0:	08 95       	ret

00000ff2 <_ZN3I2C12send_addressENS_9DirectionE>:
     ff2:	fc 01       	movw	r30, r24
     ff4:	61 11       	cpse	r22, r1
     ff6:	04 c0       	rjmp	.+8      	; 0x1000 <_ZN3I2C12send_addressENS_9DirectionE+0xe>
     ff8:	81 81       	ldd	r24, Z+1	; 0x01
     ffa:	81 60       	ori	r24, 0x01	; 1
     ffc:	81 83       	std	Z+1, r24	; 0x01
     ffe:	03 c0       	rjmp	.+6      	; 0x1006 <_ZN3I2C12send_addressENS_9DirectionE+0x14>
    1000:	81 81       	ldd	r24, Z+1	; 0x01
    1002:	8e 7f       	andi	r24, 0xFE	; 254
    1004:	81 83       	std	Z+1, r24	; 0x01
    1006:	81 81       	ldd	r24, Z+1	; 0x01
    1008:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    100c:	84 e8       	ldi	r24, 0x84	; 132
    100e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1012:	83 e0       	ldi	r24, 0x03	; 3
    1014:	80 83       	st	Z, r24
    1016:	08 95       	ret

00001018 <_ZN3I2C14read_data_byteEv>:
    1018:	fc 01       	movw	r30, r24
    101a:	83 89       	ldd	r24, Z+19	; 0x13
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	24 89       	ldd	r18, Z+20	; 0x14
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	21 50       	subi	r18, 0x01	; 1
    1024:	31 09       	sbc	r19, r1
    1026:	82 17       	cp	r24, r18
    1028:	93 07       	cpc	r25, r19
    102a:	31 f4       	brne	.+12     	; 0x1038 <_ZN3I2C14read_data_byteEv+0x20>
    102c:	ac eb       	ldi	r26, 0xBC	; 188
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	9c 91       	ld	r25, X
    1032:	80 e4       	ldi	r24, 0x40	; 64
    1034:	89 27       	eor	r24, r25
    1036:	8c 93       	st	X, r24
    1038:	84 e8       	ldi	r24, 0x84	; 132
    103a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    103e:	86 e0       	ldi	r24, 0x06	; 6
    1040:	80 83       	st	Z, r24
    1042:	08 95       	ret

00001044 <_ZN3I2C4failEv>:
}

void I2C::fail ()
{
    1044:	fc 01       	movw	r30, r24
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    1046:	84 e9       	ldi	r24, 0x94	; 148
    1048:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	index = 0;
    104c:	13 8a       	std	Z+19, r1	; 0x13
	state = START;
    104e:	10 82       	st	Z, r1
	++fail_count;
    1050:	85 89       	ldd	r24, Z+21	; 0x15
    1052:	8f 5f       	subi	r24, 0xFF	; 255
    1054:	85 8b       	std	Z+21, r24	; 0x15
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1056:	85 e3       	ldi	r24, 0x35	; 53
    1058:	8a 95       	dec	r24
    105a:	f1 f7       	brne	.-4      	; 0x1058 <_ZN3I2C4failEv+0x14>
    105c:	00 00       	nop
    105e:	08 95       	ret

00001060 <_ZN3I2C12verify_startEv>:
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
	state = VERIFY_START;
}

void I2C::verify_start ()
{
    1060:	fc 01       	movw	r30, r24
	}
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
    1062:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_START;
}

void I2C::verify_start ()
{
	if (!interrupt_flag_set())
    1066:	99 23       	and	r25, r25
    1068:	54 f4       	brge	.+20     	; 0x107e <_ZN3I2C12verify_startEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    106a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_start ()
{
	if (!interrupt_flag_set())
	return;
	if (check_status(TW_START))
    106e:	88 7f       	andi	r24, 0xF8	; 248
    1070:	88 30       	cpi	r24, 0x08	; 8
    1072:	19 f4       	brne	.+6      	; 0x107a <_ZN3I2C12verify_startEv+0x1a>
	state = SEND_ADDRESS;
    1074:	82 e0       	ldi	r24, 0x02	; 2
    1076:	80 83       	st	Z, r24
    1078:	08 95       	ret
    107a:	cf 01       	movw	r24, r30
	else
	fail();
    107c:	e3 cf       	rjmp	.-58     	; 0x1044 <_ZN3I2C4failEv>
    107e:	08 95       	ret

00001080 <_ZN3I2C25verify_write_address_sentEv>:
	TWCR = (1 << TWINT) | (1 << TWEN);
	state = VERIFY_ADDRESS;
}

void I2C::verify_write_address_sent ()
{
    1080:	fc 01       	movw	r30, r24
	}
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
    1082:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_ADDRESS;
}

void I2C::verify_write_address_sent ()
{
	if (interrupt_flag_set())
    1086:	99 23       	and	r25, r25
    1088:	54 f4       	brge	.+20     	; 0x109e <_ZN3I2C25verify_write_address_sentEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    108a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_write_address_sent ()
{
	if (interrupt_flag_set())
	{
		if (check_status(TW_MT_SLA_ACK))
    108e:	88 7f       	andi	r24, 0xF8	; 248
    1090:	88 31       	cpi	r24, 0x18	; 24
    1092:	19 f4       	brne	.+6      	; 0x109a <_ZN3I2C25verify_write_address_sentEv+0x1a>
		state = SEND_BYTE;
    1094:	84 e0       	ldi	r24, 0x04	; 4
    1096:	80 83       	st	Z, r24
    1098:	08 95       	ret
    109a:	cf 01       	movw	r24, r30
		else
		fail();
    109c:	d3 cf       	rjmp	.-90     	; 0x1044 <_ZN3I2C4failEv>
    109e:	08 95       	ret

000010a0 <_ZN3I2C24verify_read_address_sentEv>:
	}
}

void I2C::verify_read_address_sent ()
{
    10a0:	fc 01       	movw	r30, r24
	}
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
    10a2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	}
}

void I2C::verify_read_address_sent ()
{
	if (interrupt_flag_set())
    10a6:	99 23       	and	r25, r25
    10a8:	54 f4       	brge	.+20     	; 0x10be <_ZN3I2C24verify_read_address_sentEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    10aa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_read_address_sent ()
{
	if (interrupt_flag_set())
	{
		if (check_status(TW_MR_SLA_ACK))
    10ae:	88 7f       	andi	r24, 0xF8	; 248
    10b0:	80 34       	cpi	r24, 0x40	; 64
    10b2:	19 f4       	brne	.+6      	; 0x10ba <_ZN3I2C24verify_read_address_sentEv+0x1a>
		state = READ_BYTE;
    10b4:	85 e0       	ldi	r24, 0x05	; 5
    10b6:	80 83       	st	Z, r24
    10b8:	08 95       	ret
    10ba:	cf 01       	movw	r24, r30
		else
		fail();
    10bc:	c3 cf       	rjmp	.-122    	; 0x1044 <_ZN3I2C4failEv>
    10be:	08 95       	ret

000010c0 <_ZN3I2C16verify_data_sentEv>:
	}
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
    10c0:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_DATA;
}

void I2C::verify_data_sent ()
{
	if (!interrupt_flag_set())
    10c4:	22 23       	and	r18, r18
    10c6:	a4 f4       	brge	.+40     	; 0x10f0 <_ZN3I2C16verify_data_sentEv+0x30>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    10c8:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_data_sent ()
{
	if (!interrupt_flag_set())
	return;
	if (check_status(TW_MT_DATA_ACK))
    10cc:	28 7f       	andi	r18, 0xF8	; 248
    10ce:	28 32       	cpi	r18, 0x28	; 40
    10d0:	71 f4       	brne	.+28     	; 0x10ee <_ZN3I2C16verify_data_sentEv+0x2e>
	{
		if (++index < size)
    10d2:	fc 01       	movw	r30, r24
    10d4:	23 89       	ldd	r18, Z+19	; 0x13
    10d6:	2f 5f       	subi	r18, 0xFF	; 255
    10d8:	23 8b       	std	Z+19, r18	; 0x13
    10da:	34 89       	ldd	r19, Z+20	; 0x14
    10dc:	23 17       	cp	r18, r19
    10de:	18 f4       	brcc	.+6      	; 0x10e6 <_ZN3I2C16verify_data_sentEv+0x26>
		state = SEND_BYTE;
    10e0:	24 e0       	ldi	r18, 0x04	; 4
    10e2:	20 83       	st	Z, r18
    10e4:	08 95       	ret
		else
		state = STOP;
    10e6:	27 e0       	ldi	r18, 0x07	; 7
    10e8:	fc 01       	movw	r30, r24
    10ea:	20 83       	st	Z, r18
    10ec:	08 95       	ret
	}
	else
	fail();
    10ee:	aa cf       	rjmp	.-172    	; 0x1044 <_ZN3I2C4failEv>
    10f0:	08 95       	ret

000010f2 <_ZN3I2C5writeEPhh>:
{
	this->address = _address << 1;
}

int I2C::write (uint8_t * data, uint8_t size)
{
    10f2:	9f 92       	push	r9
    10f4:	af 92       	push	r10
    10f6:	bf 92       	push	r11
    10f8:	cf 92       	push	r12
    10fa:	df 92       	push	r13
    10fc:	ef 92       	push	r14
    10fe:	ff 92       	push	r15
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	ec 01       	movw	r28, r24
    110a:	7b 01       	movw	r14, r22
    110c:	14 2f       	mov	r17, r20

	copy_range(data, buffer, size);
    110e:	bc 01       	movw	r22, r24
    1110:	6e 5f       	subi	r22, 0xFE	; 254
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	c7 01       	movw	r24, r14
    1116:	2a df       	rcall	.-428    	; 0xf6c <_Z10copy_rangePhS_h>

/*------------------------ Internal Helper Functions -------------------------*/

void I2C::reset (uint8_t size)
{
	TWBR = (uint8_t)TWBR_VALUE;
    1118:	88 e4       	ldi	r24, 0x48	; 72
    111a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	this->size = size;
    111e:	1c 8b       	std	Y+20, r17	; 0x14
	index = 0;
    1120:	1b 8a       	std	Y+19, r1	; 0x13
	fail_count = 0;
    1122:	1d 8a       	std	Y+21, r1	; 0x15
	state = START;
    1124:	18 82       	st	Y, r1
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
    1126:	e0 e0       	ldi	r30, 0x00	; 0
	}
}

void I2C::send_data_byte (uint8_t data)
{
	TWDR = data;
    1128:	0f 2e       	mov	r0, r31
    112a:	fb eb       	ldi	r31, 0xBB	; 187
    112c:	cf 2e       	mov	r12, r31
    112e:	d1 2c       	mov	r13, r1
    1130:	f0 2d       	mov	r31, r0
	TWCR = (1 << TWINT) | (1 << TWEN);
    1132:	0c eb       	ldi	r16, 0xBC	; 188
    1134:	10 e0       	ldi	r17, 0x00	; 0
    1136:	0f 2e       	mov	r0, r31
    1138:	f4 e8       	ldi	r31, 0x84	; 132
    113a:	9f 2e       	mov	r9, r31
    113c:	f0 2d       	mov	r31, r0
	state = VERIFY_DATA;
    113e:	0f 2e       	mov	r0, r31
    1140:	f6 e0       	ldi	r31, 0x06	; 6
    1142:	af 2e       	mov	r10, r31
    1144:	f0 2d       	mov	r31, r0
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    1146:	0f 2e       	mov	r0, r31
    1148:	f4 ee       	ldi	r31, 0xE4	; 228
    114a:	bf 2e       	mov	r11, r31
    114c:	f0 2d       	mov	r31, r0
    114e:	03 c0       	rjmp	.+6      	; 0x1156 <_ZN3I2C5writeEPhh+0x64>
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
    1150:	e8 81       	ld	r30, Y
    1152:	e8 30       	cpi	r30, 0x08	; 8
    1154:	99 f1       	breq	.+102    	; 0x11bc <_ZN3I2C5writeEPhh+0xca>
	{
		if (fail_count >= MAX_FAIL_COUNT)
    1156:	8d 89       	ldd	r24, Y+21	; 0x15
    1158:	85 30       	cpi	r24, 0x05	; 5
    115a:	98 f5       	brcc	.+102    	; 0x11c2 <_ZN3I2C5writeEPhh+0xd0>
		return I2C_FAILURE;
		switch (state)
    115c:	8e 2f       	mov	r24, r30
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	88 30       	cpi	r24, 0x08	; 8
    1162:	91 05       	cpc	r25, r1
    1164:	40 f5       	brcc	.+80     	; 0x11b6 <_ZN3I2C5writeEPhh+0xc4>
    1166:	fc 01       	movw	r30, r24
    1168:	e8 57       	subi	r30, 0x78	; 120
    116a:	ff 4f       	sbci	r31, 0xFF	; 255
    116c:	0c 94 d0 18 	jmp	0x31a0	; 0x31a0 <__tablejump2__>
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    1170:	f8 01       	movw	r30, r16
    1172:	b0 82       	st	Z, r11
	state = VERIFY_START;
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	88 83       	st	Y, r24
    1178:	2a c0       	rjmp	.+84     	; 0x11ce <_ZN3I2C5writeEPhh+0xdc>
		switch (state)
		{
			case START:
			start();
			when VERIFY_START:
			verify_start();
    117a:	ce 01       	movw	r24, r28
    117c:	71 df       	rcall	.-286    	; 0x1060 <_ZN3I2C12verify_startEv>
			when SEND_ADDRESS:
    117e:	e8 cf       	rjmp	.-48     	; 0x1150 <_ZN3I2C5writeEPhh+0x5e>
			send_address(WRITE);
    1180:	61 e0       	ldi	r22, 0x01	; 1
    1182:	ce 01       	movw	r24, r28
    1184:	36 df       	rcall	.-404    	; 0xff2 <_ZN3I2C12send_addressENS_9DirectionE>
			when VERIFY_ADDRESS:
    1186:	e4 cf       	rjmp	.-56     	; 0x1150 <_ZN3I2C5writeEPhh+0x5e>
			verify_write_address_sent();
    1188:	ce 01       	movw	r24, r28
    118a:	7a df       	rcall	.-268    	; 0x1080 <_ZN3I2C25verify_write_address_sentEv>
    118c:	e1 cf       	rjmp	.-62     	; 0x1150 <_ZN3I2C5writeEPhh+0x5e>
			when SEND_BYTE:
    118e:	8b 89       	ldd	r24, Y+19	; 0x13
			send_data_byte(data[index]);
    1190:	f7 01       	movw	r30, r14
    1192:	e8 0f       	add	r30, r24
    1194:	f1 1d       	adc	r31, r1
    1196:	80 81       	ld	r24, Z
    1198:	f6 01       	movw	r30, r12
	}
}

void I2C::send_data_byte (uint8_t data)
{
	TWDR = data;
    119a:	80 83       	st	Z, r24
    119c:	f8 01       	movw	r30, r16
	TWCR = (1 << TWINT) | (1 << TWEN);
    119e:	90 82       	st	Z, r9
	state = VERIFY_DATA;
    11a0:	a8 82       	st	Y, r10
    11a2:	15 c0       	rjmp	.+42     	; 0x11ce <_ZN3I2C5writeEPhh+0xdc>
			verify_write_address_sent();
			when SEND_BYTE:
			send_data_byte(data[index]);

			when VERIFY_DATA:
			verify_data_sent();
    11a4:	ce 01       	movw	r24, r28
    11a6:	8c df       	rcall	.-232    	; 0x10c0 <_ZN3I2C16verify_data_sentEv>
    11a8:	d3 cf       	rjmp	.-90     	; 0x1150 <_ZN3I2C5writeEPhh+0x5e>
			when STOP:
    11aa:	84 e9       	ldi	r24, 0x94	; 148
	fail();
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    11ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    11b0:	88 e0       	ldi	r24, 0x08	; 8
	state = DONE;
    11b2:	88 83       	st	Y, r24
    11b4:	09 c0       	rjmp	.+18     	; 0x11c8 <_ZN3I2C5writeEPhh+0xd6>
    11b6:	88 e0       	ldi	r24, 0x08	; 8
			when VERIFY_DATA:
			verify_data_sent();
			when STOP:
			stop();
			otherwise:
			state = DONE;
    11b8:	88 83       	st	Y, r24
    11ba:	06 c0       	rjmp	.+12     	; 0x11c8 <_ZN3I2C5writeEPhh+0xd6>
    11bc:	81 e0       	ldi	r24, 0x01	; 1
		}
	}
	return I2C_SUCCESS;
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	08 c0       	rjmp	.+16     	; 0x11d2 <_ZN3I2C5writeEPhh+0xe0>
    11c2:	80 e0       	ldi	r24, 0x00	; 0
	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
	{
		if (fail_count >= MAX_FAIL_COUNT)
		return I2C_FAILURE;
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	05 c0       	rjmp	.+10     	; 0x11d2 <_ZN3I2C5writeEPhh+0xe0>
    11c8:	81 e0       	ldi	r24, 0x01	; 1
			stop();
			otherwise:
			state = DONE;
		}
	}
	return I2C_SUCCESS;
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <_ZN3I2C5writeEPhh+0xe0>
    11ce:	e8 81       	ld	r30, Y
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
    11d0:	c2 cf       	rjmp	.-124    	; 0x1156 <_ZN3I2C5writeEPhh+0x64>
    11d2:	df 91       	pop	r29
			otherwise:
			state = DONE;
		}
	}
	return I2C_SUCCESS;
}
    11d4:	cf 91       	pop	r28
    11d6:	1f 91       	pop	r17
    11d8:	0f 91       	pop	r16
    11da:	ff 90       	pop	r15
    11dc:	ef 90       	pop	r14
    11de:	df 90       	pop	r13
    11e0:	cf 90       	pop	r12
    11e2:	bf 90       	pop	r11
    11e4:	af 90       	pop	r10
    11e6:	9f 90       	pop	r9
    11e8:	08 95       	ret

000011ea <_ZN3I2C16verify_data_readEv>:
    11ea:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	fail();
}

void I2C::verify_data_read ()
{
	if (!interrupt_flag_set())
    11ee:	22 23       	and	r18, r18
    11f0:	fc f4       	brge	.+62     	; 0x1230 <_ZN3I2C16verify_data_readEv+0x46>
	return;
	bool last_byte = !(TWCR & (1 << TWEA));
    11f2:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
    11f6:	26 ff       	sbrs	r18, 6
    11f8:	03 c0       	rjmp	.+6      	; 0x1200 <_ZN3I2C16verify_data_readEv+0x16>
    11fa:	40 e5       	ldi	r20, 0x50	; 80
	State next_state = last_byte ? STOP : READ_BYTE;
    11fc:	65 e0       	ldi	r22, 0x05	; 5
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <_ZN3I2C16verify_data_readEv+0x1a>
void I2C::verify_data_read ()
{
	if (!interrupt_flag_set())
	return;
	bool last_byte = !(TWCR & (1 << TWEA));
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
    1200:	48 e5       	ldi	r20, 0x58	; 88
	State next_state = last_byte ? STOP : READ_BYTE;
    1202:	67 e0       	ldi	r22, 0x07	; 7
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    1204:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if (!interrupt_flag_set())
	return;
	bool last_byte = !(TWCR & (1 << TWEA));
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
	State next_state = last_byte ? STOP : READ_BYTE;
	if (check_status(status))
    1208:	28 7f       	andi	r18, 0xF8	; 248
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	50 e0       	ldi	r21, 0x00	; 0
    120e:	24 17       	cp	r18, r20
    1210:	35 07       	cpc	r19, r21
    1212:	69 f4       	brne	.+26     	; 0x122e <_ZN3I2C16verify_data_readEv+0x44>
	{
		buffer[index++] = TWDR;
    1214:	fc 01       	movw	r30, r24
    1216:	23 89       	ldd	r18, Z+19	; 0x13
    1218:	31 e0       	ldi	r19, 0x01	; 1
    121a:	32 0f       	add	r19, r18
    121c:	33 8b       	std	Z+19, r19	; 0x13
    121e:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1222:	e2 0f       	add	r30, r18
    1224:	f1 1d       	adc	r31, r1
    1226:	32 83       	std	Z+2, r19	; 0x02
		state = next_state;
    1228:	fc 01       	movw	r30, r24
    122a:	60 83       	st	Z, r22
    122c:	08 95       	ret
	}
	else
	fail();
    122e:	0a cf       	rjmp	.-492    	; 0x1044 <_ZN3I2C4failEv>
    1230:	08 95       	ret

00001232 <_ZN3I2C4readEPhh>:
	}
	return I2C_SUCCESS;
}

int I2C::read (uint8_t * data, uint8_t size)
{
    1232:	bf 92       	push	r11
    1234:	cf 92       	push	r12
    1236:	df 92       	push	r13
    1238:	ef 92       	push	r14
    123a:	ff 92       	push	r15
    123c:	0f 93       	push	r16
    123e:	1f 93       	push	r17
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	ec 01       	movw	r28, r24
    1246:	7b 01       	movw	r14, r22
    1248:	c4 2e       	mov	r12, r20

/*------------------------ Internal Helper Functions -------------------------*/

void I2C::reset (uint8_t size)
{
	TWBR = (uint8_t)TWBR_VALUE;
    124a:	88 e4       	ldi	r24, 0x48	; 72
    124c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	this->size = size;
    1250:	4c 8b       	std	Y+20, r20	; 0x14
	index = 0;
    1252:	1b 8a       	std	Y+19, r1	; 0x13
	fail_count = 0;
    1254:	1d 8a       	std	Y+21, r1	; 0x15
	state = START;
    1256:	18 82       	st	Y, r1
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    1258:	e0 e0       	ldi	r30, 0x00	; 0
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    125a:	0c eb       	ldi	r16, 0xBC	; 188
    125c:	10 e0       	ldi	r17, 0x00	; 0
    125e:	0f 2e       	mov	r0, r31
    1260:	f4 ee       	ldi	r31, 0xE4	; 228
    1262:	bf 2e       	mov	r11, r31
    1264:	f0 2d       	mov	r31, r0
	state = VERIFY_START;
    1266:	dd 24       	eor	r13, r13
    1268:	d3 94       	inc	r13
    126a:	03 c0       	rjmp	.+6      	; 0x1272 <_ZN3I2C4readEPhh+0x40>
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    126c:	e8 81       	ld	r30, Y
    126e:	e8 30       	cpi	r30, 0x08	; 8
    1270:	51 f1       	breq	.+84     	; 0x12c6 <_ZN3I2C4readEPhh+0x94>
	{
		if (fail_count >= MAX_FAIL_COUNT)
    1272:	8d 89       	ldd	r24, Y+21	; 0x15
    1274:	85 30       	cpi	r24, 0x05	; 5
    1276:	78 f5       	brcc	.+94     	; 0x12d6 <_ZN3I2C4readEPhh+0xa4>
		return I2C_FAILURE;
		switch (state)
    1278:	8e 2f       	mov	r24, r30
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	88 30       	cpi	r24, 0x08	; 8
    127e:	91 05       	cpc	r25, r1
    1280:	00 f5       	brcc	.+64     	; 0x12c2 <_ZN3I2C4readEPhh+0x90>
    1282:	fc 01       	movw	r30, r24
    1284:	e0 57       	subi	r30, 0x70	; 112
    1286:	ff 4f       	sbci	r31, 0xFF	; 255
    1288:	0c 94 d0 18 	jmp	0x31a0	; 0x31a0 <__tablejump2__>
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    128c:	f8 01       	movw	r30, r16
    128e:	b0 82       	st	Z, r11
	state = VERIFY_START;
    1290:	d8 82       	st	Y, r13
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    1292:	ed 2d       	mov	r30, r13
    1294:	ee cf       	rjmp	.-36     	; 0x1272 <_ZN3I2C4readEPhh+0x40>
		switch (state)
		{
			case START:
			start();
			when VERIFY_START:
			verify_start();
    1296:	ce 01       	movw	r24, r28
    1298:	e3 de       	rcall	.-570    	; 0x1060 <_ZN3I2C12verify_startEv>
			when SEND_ADDRESS:
    129a:	e8 cf       	rjmp	.-48     	; 0x126c <_ZN3I2C4readEPhh+0x3a>
			send_address(READ);
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	ce 01       	movw	r24, r28
    12a0:	a8 de       	rcall	.-688    	; 0xff2 <_ZN3I2C12send_addressENS_9DirectionE>
			when VERIFY_ADDRESS:
			verify_read_address_sent();
    12a2:	e4 cf       	rjmp	.-56     	; 0x126c <_ZN3I2C4readEPhh+0x3a>
    12a4:	ce 01       	movw	r24, r28
			when READ_BYTE:
    12a6:	fc de       	rcall	.-520    	; 0x10a0 <_ZN3I2C24verify_read_address_sentEv>
			read_data_byte();
    12a8:	e1 cf       	rjmp	.-62     	; 0x126c <_ZN3I2C4readEPhh+0x3a>
    12aa:	ce 01       	movw	r24, r28
			when VERIFY_DATA:
    12ac:	b5 de       	rcall	.-662    	; 0x1018 <_ZN3I2C14read_data_byteEv>
			verify_data_read();
    12ae:	de cf       	rjmp	.-68     	; 0x126c <_ZN3I2C4readEPhh+0x3a>
    12b0:	ce 01       	movw	r24, r28
    12b2:	9b df       	rcall	.-202    	; 0x11ea <_ZN3I2C16verify_data_readEv>
			when STOP:
    12b4:	db cf       	rjmp	.-74     	; 0x126c <_ZN3I2C4readEPhh+0x3a>
	fail();
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    12b6:	84 e9       	ldi	r24, 0x94	; 148
    12b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = DONE;
    12bc:	88 e0       	ldi	r24, 0x08	; 8
    12be:	88 83       	st	Y, r24
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <_ZN3I2C4readEPhh+0x94>
			when VERIFY_DATA:
			verify_data_read();
			when STOP:
			stop();
			otherwise:
			state = DONE;
    12c2:	88 e0       	ldi	r24, 0x08	; 8
		}
	}
	copy_range(buffer, data, size);
    12c4:	88 83       	st	Y, r24
    12c6:	4c 2d       	mov	r20, r12
    12c8:	b7 01       	movw	r22, r14
    12ca:	ce 01       	movw	r24, r28
    12cc:	02 96       	adiw	r24, 0x02	; 2
    12ce:	4e de       	rcall	.-868    	; 0xf6c <_Z10copy_rangePhS_h>
	return I2C_SUCCESS;
    12d0:	81 e0       	ldi	r24, 0x01	; 1
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <_ZN3I2C4readEPhh+0xa8>
{
	reset(size);
	while (state != DONE)
	{
		if (fail_count >= MAX_FAIL_COUNT)
		return I2C_FAILURE;
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
			state = DONE;
		}
	}
	copy_range(buffer, data, size);
	return I2C_SUCCESS;
}
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	ff 90       	pop	r15
    12e4:	ef 90       	pop	r14
    12e6:	df 90       	pop	r13
    12e8:	cf 90       	pop	r12
    12ea:	bf 90       	pop	r11
    12ec:	08 95       	ret

000012ee <_ZN5I2CIOC1Ev>:
	Wire.read (&receivedVal,1 );
	retVal = ( _dirMask &  receivedVal);

//	}
	return ( retVal );
}
    12ee:	fc 01       	movw	r30, r24
    12f0:	12 82       	std	Z+2, r1	; 0x02
    12f2:	8f ef       	ldi	r24, 0xFF	; 255
    12f4:	81 83       	std	Z+1, r24	; 0x01
    12f6:	10 82       	st	Z, r1
    12f8:	13 82       	std	Z+3, r1	; 0x03
    12fa:	08 95       	ret

000012fc <_ZN5I2CIO5beginEh>:
    12fc:	cf 93       	push	r28
    12fe:	df 93       	push	r29
    1300:	ec 01       	movw	r28, r24
    1302:	6a 83       	std	Y+2, r22	; 0x02
    1304:	82 e4       	ldi	r24, 0x42	; 66
    1306:	94 e0       	ldi	r25, 0x04	; 4
    1308:	70 de       	rcall	.-800    	; 0xfea <_ZN3I2C11set_addressEh>
    130a:	41 e0       	ldi	r20, 0x01	; 1
    130c:	be 01       	movw	r22, r28
    130e:	82 e4       	ldi	r24, 0x42	; 66
    1310:	94 e0       	ldi	r25, 0x04	; 4
    1312:	8f df       	rcall	.-226    	; 0x1232 <_ZN3I2C4readEPhh>
    1314:	88 83       	st	Y, r24
    1316:	81 e0       	ldi	r24, 0x01	; 1
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	08 95       	ret

00001320 <_ZN5I2CIO8portModeEh>:
    1320:	61 11       	cpse	r22, r1
    1322:	04 c0       	rjmp	.+8      	; 0x132c <_ZN5I2CIO8portModeEh+0xc>
    1324:	2f ef       	ldi	r18, 0xFF	; 255
    1326:	fc 01       	movw	r30, r24
    1328:	21 83       	std	Z+1, r18	; 0x01
    132a:	08 95       	ret
    132c:	fc 01       	movw	r30, r24
    132e:	11 82       	std	Z+1, r1	; 0x01
    1330:	08 95       	ret

00001332 <_ZN5I2CIO5writeEh>:
	// outputs updating the output shadow of the device

	//
	// 15-FEB-2018 - fix, all I/Os initialized as input must be written as HIGH
	//    _shadow = ( value & ~(_dirMask) );
	_shadow = ( value | _dirMask );
    1332:	fc 01       	movw	r30, r24
    1334:	21 81       	ldd	r18, Z+1	; 0x01
    1336:	62 2b       	or	r22, r18
    1338:	60 83       	st	Z, r22


	Wire.write ( &_shadow,1 );
    133a:	41 e0       	ldi	r20, 0x01	; 1
    133c:	bc 01       	movw	r22, r24
    133e:	82 e4       	ldi	r24, 0x42	; 66
    1340:	94 e0       	ldi	r25, 0x04	; 4
    1342:	d7 de       	rcall	.-594    	; 0x10f2 <_ZN3I2C5writeEPhh>

//	}
	return ( (status == 0) );
}
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	08 95       	ret

0000134a <_ZN3LCD15setBacklightPinEh14t_backlightPol>:
	for (uint8_t i = 0; i < 8; i++)
	{
		write(pgm_read_byte_near(charmap++));
		_delay_us(40);
	}
}
    134a:	08 95       	ret

0000134c <_ZN3LCD12setBacklightEh>:
    134c:	08 95       	ret

0000134e <_ZN3LCD4sendEhh>:
    134e:	08 95       	ret

00001350 <_ZN3LCD5writeEh>:
    1350:	dc 01       	movw	r26, r24
    1352:	ed 91       	ld	r30, X+
    1354:	fc 91       	ld	r31, X
    1356:	00 84       	ldd	r0, Z+8	; 0x08
    1358:	f1 85       	ldd	r31, Z+9	; 0x09
    135a:	e0 2d       	mov	r30, r0
    135c:	41 e0       	ldi	r20, 0x01	; 1
    135e:	09 95       	icall
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	08 95       	ret

00001366 <_ZN3LCDC1Ev>:
    1366:	26 e9       	ldi	r18, 0x96	; 150
    1368:	32 e0       	ldi	r19, 0x02	; 2
    136a:	fc 01       	movw	r30, r24
    136c:	31 83       	std	Z+1, r19	; 0x01
    136e:	20 83       	st	Z, r18
    1370:	08 95       	ret

00001372 <_ZN3LCD9backlightEv>:
    1372:	dc 01       	movw	r26, r24
    1374:	ed 91       	ld	r30, X+
    1376:	fc 91       	ld	r31, X
    1378:	04 80       	ldd	r0, Z+4	; 0x04
    137a:	f5 81       	ldd	r31, Z+5	; 0x05
    137c:	e0 2d       	mov	r30, r0
    137e:	6f ef       	ldi	r22, 0xFF	; 255
    1380:	09 95       	icall
    1382:	08 95       	ret

00001384 <_ZN3LCD7commandEh>:
    1384:	dc 01       	movw	r26, r24
    1386:	ed 91       	ld	r30, X+
    1388:	fc 91       	ld	r31, X
    138a:	00 84       	ldd	r0, Z+8	; 0x08
    138c:	f1 85       	ldd	r31, Z+9	; 0x09
    138e:	e0 2d       	mov	r30, r0
    1390:	40 e0       	ldi	r20, 0x00	; 0
    1392:	09 95       	icall
    1394:	08 95       	ret

00001396 <_ZN3LCD5clearEv>:
    1396:	61 e0       	ldi	r22, 0x01	; 1
    1398:	f5 df       	rcall	.-22     	; 0x1384 <_ZN3LCD7commandEh>
    139a:	8f e3       	ldi	r24, 0x3F	; 63
    139c:	9f e1       	ldi	r25, 0x1F	; 31
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	f1 f7       	brne	.-4      	; 0x139e <_ZN3LCD5clearEv+0x8>
    13a2:	00 c0       	rjmp	.+0      	; 0x13a4 <_ZN3LCD5clearEv+0xe>
    13a4:	00 00       	nop
    13a6:	08 95       	ret

000013a8 <_ZN3LCD9setCursorEhh>:
    13a8:	cf 93       	push	r28
    13aa:	df 93       	push	r29
    13ac:	cd b7       	in	r28, 0x3d	; 61
    13ae:	de b7       	in	r29, 0x3e	; 62
    13b0:	28 97       	sbiw	r28, 0x08	; 8
    13b2:	0f b6       	in	r0, 0x3f	; 63
    13b4:	f8 94       	cli
    13b6:	de bf       	out	0x3e, r29	; 62
    13b8:	0f be       	out	0x3f, r0	; 63
    13ba:	cd bf       	out	0x3d, r28	; 61
    13bc:	fc 01       	movw	r30, r24
    13be:	19 82       	std	Y+1, r1	; 0x01
    13c0:	80 e4       	ldi	r24, 0x40	; 64
    13c2:	8a 83       	std	Y+2, r24	; 0x02
    13c4:	94 e1       	ldi	r25, 0x14	; 20
    13c6:	9b 83       	std	Y+3, r25	; 0x03
    13c8:	94 e5       	ldi	r25, 0x54	; 84
    13ca:	9c 83       	std	Y+4, r25	; 0x04
    13cc:	1d 82       	std	Y+5, r1	; 0x05
    13ce:	8e 83       	std	Y+6, r24	; 0x06
    13d0:	80 e1       	ldi	r24, 0x10	; 16
    13d2:	8f 83       	std	Y+7, r24	; 0x07
    13d4:	80 e5       	ldi	r24, 0x50	; 80
    13d6:	88 87       	std	Y+8, r24	; 0x08
    13d8:	85 81       	ldd	r24, Z+5	; 0x05
    13da:	48 17       	cp	r20, r24
    13dc:	10 f0       	brcs	.+4      	; 0x13e2 <_ZN3LCD9setCursorEhh+0x3a>
    13de:	4f ef       	ldi	r20, 0xFF	; 255
    13e0:	48 0f       	add	r20, r24
    13e2:	96 81       	ldd	r25, Z+6	; 0x06
    13e4:	90 31       	cpi	r25, 0x10	; 16
    13e6:	61 f4       	brne	.+24     	; 0x1400 <_ZN3LCD9setCursorEhh+0x58>
    13e8:	84 30       	cpi	r24, 0x04	; 4
    13ea:	51 f4       	brne	.+20     	; 0x1400 <_ZN3LCD9setCursorEhh+0x58>
    13ec:	de 01       	movw	r26, r28
    13ee:	a4 0f       	add	r26, r20
    13f0:	b1 1d       	adc	r27, r1
    13f2:	15 96       	adiw	r26, 0x05	; 5
    13f4:	8c 91       	ld	r24, X
    13f6:	68 0f       	add	r22, r24
    13f8:	60 68       	ori	r22, 0x80	; 128
    13fa:	cf 01       	movw	r24, r30
    13fc:	c3 df       	rcall	.-122    	; 0x1384 <_ZN3LCD7commandEh>
    13fe:	09 c0       	rjmp	.+18     	; 0x1412 <_ZN3LCD9setCursorEhh+0x6a>
    1400:	de 01       	movw	r26, r28
    1402:	a4 0f       	add	r26, r20
    1404:	b1 1d       	adc	r27, r1
    1406:	11 96       	adiw	r26, 0x01	; 1
    1408:	9c 91       	ld	r25, X
    140a:	69 0f       	add	r22, r25
    140c:	60 68       	ori	r22, 0x80	; 128
    140e:	cf 01       	movw	r24, r30
    1410:	b9 df       	rcall	.-142    	; 0x1384 <_ZN3LCD7commandEh>
    1412:	28 96       	adiw	r28, 0x08	; 8
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	cd bf       	out	0x3d, r28	; 61
    141e:	df 91       	pop	r29
    1420:	cf 91       	pop	r28
    1422:	08 95       	ret

00001424 <_ZN3LCD7displayEv>:
    1424:	fc 01       	movw	r30, r24
    1426:	63 81       	ldd	r22, Z+3	; 0x03
    1428:	26 2f       	mov	r18, r22
    142a:	24 60       	ori	r18, 0x04	; 4
    142c:	23 83       	std	Z+3, r18	; 0x03
    142e:	6c 60       	ori	r22, 0x0C	; 12
    1430:	a9 cf       	rjmp	.-174    	; 0x1384 <_ZN3LCD7commandEh>
    1432:	08 95       	ret

00001434 <_ZN3LCD5beginEhhh>:
    1434:	cf 93       	push	r28
    1436:	df 93       	push	r29
    1438:	ec 01       	movw	r28, r24
    143a:	42 30       	cpi	r20, 0x02	; 2
    143c:	18 f0       	brcs	.+6      	; 0x1444 <_ZN3LCD5beginEhhh+0x10>
    143e:	8a 81       	ldd	r24, Y+2	; 0x02
    1440:	88 60       	ori	r24, 0x08	; 8
    1442:	8a 83       	std	Y+2, r24	; 0x02
    1444:	4d 83       	std	Y+5, r20	; 0x05
    1446:	6e 83       	std	Y+6, r22	; 0x06
    1448:	22 23       	and	r18, r18
    144a:	29 f0       	breq	.+10     	; 0x1456 <_ZN3LCD5beginEhhh+0x22>
    144c:	41 30       	cpi	r20, 0x01	; 1
    144e:	19 f4       	brne	.+6      	; 0x1456 <_ZN3LCD5beginEhhh+0x22>
    1450:	8a 81       	ldd	r24, Y+2	; 0x02
    1452:	84 60       	ori	r24, 0x04	; 4
    1454:	8a 83       	std	Y+2, r24	; 0x02
    1456:	2f ef       	ldi	r18, 0xFF	; 255
    1458:	81 ee       	ldi	r24, 0xE1	; 225
    145a:	94 e0       	ldi	r25, 0x04	; 4
    145c:	21 50       	subi	r18, 0x01	; 1
    145e:	80 40       	sbci	r24, 0x00	; 0
    1460:	90 40       	sbci	r25, 0x00	; 0
    1462:	e1 f7       	brne	.-8      	; 0x145c <_ZN3LCD5beginEhhh+0x28>
    1464:	00 c0       	rjmp	.+0      	; 0x1466 <_ZN3LCD5beginEhhh+0x32>
    1466:	00 00       	nop
    1468:	6a 81       	ldd	r22, Y+2	; 0x02
    146a:	64 fd       	sbrc	r22, 4
    146c:	3d c0       	rjmp	.+122    	; 0x14e8 <_ZN3LCD5beginEhhh+0xb4>
    146e:	e8 81       	ld	r30, Y
    1470:	f9 81       	ldd	r31, Y+1	; 0x01
    1472:	00 84       	ldd	r0, Z+8	; 0x08
    1474:	f1 85       	ldd	r31, Z+9	; 0x09
    1476:	e0 2d       	mov	r30, r0
    1478:	42 e0       	ldi	r20, 0x02	; 2
    147a:	63 e0       	ldi	r22, 0x03	; 3
    147c:	ce 01       	movw	r24, r28
    147e:	09 95       	icall
    1480:	8f e4       	ldi	r24, 0x4F	; 79
    1482:	96 e4       	ldi	r25, 0x46	; 70
    1484:	01 97       	sbiw	r24, 0x01	; 1
    1486:	f1 f7       	brne	.-4      	; 0x1484 <_ZN3LCD5beginEhhh+0x50>
    1488:	00 c0       	rjmp	.+0      	; 0x148a <_ZN3LCD5beginEhhh+0x56>
    148a:	00 00       	nop
    148c:	e8 81       	ld	r30, Y
    148e:	f9 81       	ldd	r31, Y+1	; 0x01
    1490:	00 84       	ldd	r0, Z+8	; 0x08
    1492:	f1 85       	ldd	r31, Z+9	; 0x09
    1494:	e0 2d       	mov	r30, r0
    1496:	42 e0       	ldi	r20, 0x02	; 2
    1498:	63 e0       	ldi	r22, 0x03	; 3
    149a:	ce 01       	movw	r24, r28
    149c:	09 95       	icall
    149e:	87 e5       	ldi	r24, 0x57	; 87
    14a0:	92 e0       	ldi	r25, 0x02	; 2
    14a2:	01 97       	sbiw	r24, 0x01	; 1
    14a4:	f1 f7       	brne	.-4      	; 0x14a2 <_ZN3LCD5beginEhhh+0x6e>
    14a6:	00 c0       	rjmp	.+0      	; 0x14a8 <_ZN3LCD5beginEhhh+0x74>
    14a8:	00 00       	nop
    14aa:	e8 81       	ld	r30, Y
    14ac:	f9 81       	ldd	r31, Y+1	; 0x01
    14ae:	00 84       	ldd	r0, Z+8	; 0x08
    14b0:	f1 85       	ldd	r31, Z+9	; 0x09
    14b2:	e0 2d       	mov	r30, r0
    14b4:	42 e0       	ldi	r20, 0x02	; 2
    14b6:	63 e0       	ldi	r22, 0x03	; 3
    14b8:	ce 01       	movw	r24, r28
    14ba:	09 95       	icall
    14bc:	87 e5       	ldi	r24, 0x57	; 87
    14be:	92 e0       	ldi	r25, 0x02	; 2
    14c0:	01 97       	sbiw	r24, 0x01	; 1
    14c2:	f1 f7       	brne	.-4      	; 0x14c0 <_ZN3LCD5beginEhhh+0x8c>
    14c4:	00 c0       	rjmp	.+0      	; 0x14c6 <_ZN3LCD5beginEhhh+0x92>
    14c6:	00 00       	nop
    14c8:	e8 81       	ld	r30, Y
    14ca:	f9 81       	ldd	r31, Y+1	; 0x01
    14cc:	00 84       	ldd	r0, Z+8	; 0x08
    14ce:	f1 85       	ldd	r31, Z+9	; 0x09
    14d0:	e0 2d       	mov	r30, r0
    14d2:	42 e0       	ldi	r20, 0x02	; 2
    14d4:	62 e0       	ldi	r22, 0x02	; 2
    14d6:	ce 01       	movw	r24, r28
    14d8:	09 95       	icall
    14da:	87 e5       	ldi	r24, 0x57	; 87
    14dc:	92 e0       	ldi	r25, 0x02	; 2
    14de:	01 97       	sbiw	r24, 0x01	; 1
    14e0:	f1 f7       	brne	.-4      	; 0x14de <_ZN3LCD5beginEhhh+0xaa>
    14e2:	00 c0       	rjmp	.+0      	; 0x14e4 <_ZN3LCD5beginEhhh+0xb0>
    14e4:	00 00       	nop
    14e6:	1d c0       	rjmp	.+58     	; 0x1522 <_ZN3LCD5beginEhhh+0xee>
    14e8:	60 62       	ori	r22, 0x20	; 32
    14ea:	ce 01       	movw	r24, r28
    14ec:	4b df       	rcall	.-362    	; 0x1384 <_ZN3LCD7commandEh>
    14ee:	8f e4       	ldi	r24, 0x4F	; 79
    14f0:	96 e4       	ldi	r25, 0x46	; 70
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	f1 f7       	brne	.-4      	; 0x14f2 <_ZN3LCD5beginEhhh+0xbe>
    14f6:	00 c0       	rjmp	.+0      	; 0x14f8 <_ZN3LCD5beginEhhh+0xc4>
    14f8:	00 00       	nop
    14fa:	6a 81       	ldd	r22, Y+2	; 0x02
    14fc:	60 62       	ori	r22, 0x20	; 32
    14fe:	ce 01       	movw	r24, r28
    1500:	41 df       	rcall	.-382    	; 0x1384 <_ZN3LCD7commandEh>
    1502:	87 e5       	ldi	r24, 0x57	; 87
    1504:	92 e0       	ldi	r25, 0x02	; 2
    1506:	01 97       	sbiw	r24, 0x01	; 1
    1508:	f1 f7       	brne	.-4      	; 0x1506 <_ZN3LCD5beginEhhh+0xd2>
    150a:	00 c0       	rjmp	.+0      	; 0x150c <_ZN3LCD5beginEhhh+0xd8>
    150c:	00 00       	nop
    150e:	6a 81       	ldd	r22, Y+2	; 0x02
    1510:	60 62       	ori	r22, 0x20	; 32
    1512:	ce 01       	movw	r24, r28
    1514:	37 df       	rcall	.-402    	; 0x1384 <_ZN3LCD7commandEh>
    1516:	87 e5       	ldi	r24, 0x57	; 87
    1518:	92 e0       	ldi	r25, 0x02	; 2
    151a:	01 97       	sbiw	r24, 0x01	; 1
    151c:	f1 f7       	brne	.-4      	; 0x151a <_ZN3LCD5beginEhhh+0xe6>
    151e:	00 c0       	rjmp	.+0      	; 0x1520 <_ZN3LCD5beginEhhh+0xec>
    1520:	00 00       	nop
    1522:	6a 81       	ldd	r22, Y+2	; 0x02
    1524:	60 62       	ori	r22, 0x20	; 32
    1526:	ce 01       	movw	r24, r28
    1528:	2d df       	rcall	.-422    	; 0x1384 <_ZN3LCD7commandEh>
    152a:	8f ee       	ldi	r24, 0xEF	; 239
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	01 97       	sbiw	r24, 0x01	; 1
    1530:	f1 f7       	brne	.-4      	; 0x152e <_ZN3LCD5beginEhhh+0xfa>
    1532:	00 c0       	rjmp	.+0      	; 0x1534 <_ZN3LCD5beginEhhh+0x100>
    1534:	00 00       	nop
    1536:	84 e0       	ldi	r24, 0x04	; 4
    1538:	8b 83       	std	Y+3, r24	; 0x03
    153a:	ce 01       	movw	r24, r28
    153c:	73 df       	rcall	.-282    	; 0x1424 <_ZN3LCD7displayEv>
    153e:	ce 01       	movw	r24, r28
    1540:	2a df       	rcall	.-428    	; 0x1396 <_ZN3LCD5clearEv>
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	8c 83       	std	Y+4, r24	; 0x04
    1546:	66 e0       	ldi	r22, 0x06	; 6
    1548:	ce 01       	movw	r24, r28
    154a:	1c df       	rcall	.-456    	; 0x1384 <_ZN3LCD7commandEh>
    154c:	ce 01       	movw	r24, r28
    154e:	11 df       	rcall	.-478    	; 0x1372 <_ZN3LCD9backlightEv>
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	08 95       	ret

00001556 <_ZN3LCD5printEPKc>:
	return 1;             // assume OK
}


void LCD::print(const char *str)
{
    1556:	cf 92       	push	r12
    1558:	df 92       	push	r13
    155a:	ef 92       	push	r14
    155c:	ff 92       	push	r15
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	8c 01       	movw	r16, r24
	while(*str != 0x00)
    1568:	db 01       	movw	r26, r22
    156a:	9c 91       	ld	r25, X
    156c:	99 23       	and	r25, r25
    156e:	01 f1       	breq	.+64     	; 0x15b0 <_ZN3LCD5printEPKc+0x5a>
    1570:	eb 01       	movw	r28, r22
	{
		printf("PrintVal: %d\n",str);
    1572:	0f 2e       	mov	r0, r31
    1574:	f4 e8       	ldi	r31, 0x84	; 132
    1576:	ef 2e       	mov	r14, r31
    1578:	f2 e0       	ldi	r31, 0x02	; 2
    157a:	ff 2e       	mov	r15, r31
    157c:	f0 2d       	mov	r31, r0
    157e:	6e 01       	movw	r12, r28
    1580:	df 93       	push	r29
    1582:	cf 93       	push	r28
    1584:	ff 92       	push	r15
    1586:	ef 92       	push	r14
    1588:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
    158c:	21 96       	adiw	r28, 0x01	; 1
		write(*(str++));
    158e:	d8 01       	movw	r26, r16
    1590:	ed 91       	ld	r30, X+
    1592:	fc 91       	ld	r31, X
    1594:	06 80       	ldd	r0, Z+6	; 0x06
    1596:	f7 81       	ldd	r31, Z+7	; 0x07
    1598:	e0 2d       	mov	r30, r0
    159a:	d6 01       	movw	r26, r12
    159c:	6c 91       	ld	r22, X
    159e:	c8 01       	movw	r24, r16
    15a0:	09 95       	icall
}


void LCD::print(const char *str)
{
	while(*str != 0x00)
    15a2:	0f 90       	pop	r0
    15a4:	0f 90       	pop	r0
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	88 81       	ld	r24, Y
    15ac:	81 11       	cpse	r24, r1
    15ae:	e7 cf       	rjmp	.-50     	; 0x157e <_ZN3LCD5printEPKc+0x28>
		printf("PrintVal: %d\n",str);
		write(*(str++));

	}

    15b0:	df 91       	pop	r29
    15b2:	cf 91       	pop	r28
    15b4:	1f 91       	pop	r17
    15b6:	0f 91       	pop	r16
    15b8:	ff 90       	pop	r15
    15ba:	ef 90       	pop	r14
    15bc:	df 90       	pop	r13
    15be:	cf 90       	pop	r12
    15c0:	08 95       	ret

000015c2 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol>:
	// Initialise pin mapping
	_data_pins[0] = ( 1 << d4 );
	_data_pins[1] = ( 1 << d5 );
	_data_pins[2] = ( 1 << d6 );
	_data_pins[3] = ( 1 << d7 );
}
    15c2:	21 e0       	ldi	r18, 0x01	; 1
    15c4:	01 c0       	rjmp	.+2      	; 0x15c8 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol+0x6>
    15c6:	22 0f       	add	r18, r18
    15c8:	6a 95       	dec	r22
    15ca:	ea f7       	brpl	.-6      	; 0x15c6 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol+0x4>
    15cc:	dc 01       	movw	r26, r24
    15ce:	19 96       	adiw	r26, 0x09	; 9
    15d0:	2c 93       	st	X, r18
    15d2:	19 97       	sbiw	r26, 0x09	; 9
    15d4:	17 96       	adiw	r26, 0x07	; 7
    15d6:	4c 93       	st	X, r20
    15d8:	17 97       	sbiw	r26, 0x07	; 7
    15da:	ed 91       	ld	r30, X+
    15dc:	fc 91       	ld	r31, X
    15de:	04 80       	ldd	r0, Z+4	; 0x04
    15e0:	f5 81       	ldd	r31, Z+5	; 0x05
    15e2:	e0 2d       	mov	r30, r0
    15e4:	60 e0       	ldi	r22, 0x00	; 0
    15e6:	09 95       	icall
    15e8:	08 95       	ret

000015ea <_ZN17LiquidCrystal_I2C12setBacklightEh>:
    15ea:	fc 01       	movw	r30, r24
    15ec:	81 85       	ldd	r24, Z+9	; 0x09
    15ee:	88 23       	and	r24, r24
    15f0:	89 f0       	breq	.+34     	; 0x1614 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x2a>
    15f2:	97 81       	ldd	r25, Z+7	; 0x07
    15f4:	91 11       	cpse	r25, r1
    15f6:	03 c0       	rjmp	.+6      	; 0x15fe <_ZN17LiquidCrystal_I2C12setBacklightEh+0x14>
    15f8:	61 11       	cpse	r22, r1
    15fa:	05 c0       	rjmp	.+10     	; 0x1606 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x1c>
    15fc:	06 c0       	rjmp	.+12     	; 0x160a <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    15fe:	91 30       	cpi	r25, 0x01	; 1
    1600:	21 f4       	brne	.+8      	; 0x160a <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    1602:	61 11       	cpse	r22, r1
    1604:	02 c0       	rjmp	.+4      	; 0x160a <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    1606:	82 87       	std	Z+10, r24	; 0x0a
    1608:	01 c0       	rjmp	.+2      	; 0x160c <_ZN17LiquidCrystal_I2C12setBacklightEh+0x22>
    160a:	12 86       	std	Z+10, r1	; 0x0a
    160c:	62 85       	ldd	r22, Z+10	; 0x0a
    160e:	cf 01       	movw	r24, r30
    1610:	0b 96       	adiw	r24, 0x0b	; 11
    1612:	8f ce       	rjmp	.-738    	; 0x1332 <_ZN5I2CIO5writeEh>
    1614:	08 95       	ret

00001616 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh>:
    1616:	6f 92       	push	r6
    1618:	7f 92       	push	r7
    161a:	8f 92       	push	r8
    161c:	af 92       	push	r10
    161e:	cf 92       	push	r12
    1620:	df 92       	push	r13
    1622:	ef 92       	push	r14
    1624:	ff 92       	push	r15
    1626:	0f 93       	push	r16
    1628:	1f 93       	push	r17
    162a:	cf 93       	push	r28
    162c:	df 93       	push	r29
    162e:	cd b7       	in	r28, 0x3d	; 61
    1630:	de b7       	in	r29, 0x3e	; 62
    1632:	3c 01       	movw	r6, r24
    1634:	d6 2e       	mov	r13, r22
    1636:	f4 2e       	mov	r15, r20
    1638:	12 2f       	mov	r17, r18
    163a:	95 de       	rcall	.-726    	; 0x1366 <_ZN3LCDC1Ev>
    163c:	84 ea       	ldi	r24, 0xA4	; 164
    163e:	92 e0       	ldi	r25, 0x02	; 2
    1640:	f3 01       	movw	r30, r6
    1642:	91 83       	std	Z+1, r25	; 0x01
    1644:	80 83       	st	Z, r24
    1646:	c3 01       	movw	r24, r6
    1648:	0b 96       	adiw	r24, 0x0b	; 11
    164a:	51 de       	rcall	.-862    	; 0x12ee <_ZN5I2CIOC1Ev>
    164c:	f3 01       	movw	r30, r6
    164e:	d0 86       	std	Z+8, r13	; 0x08
    1650:	11 86       	std	Z+9, r1	; 0x09
    1652:	12 86       	std	Z+10, r1	; 0x0a
    1654:	17 82       	std	Z+7, r1	; 0x07
    1656:	81 e0       	ldi	r24, 0x01	; 1
    1658:	98 2f       	mov	r25, r24
    165a:	01 c0       	rjmp	.+2      	; 0x165e <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x48>
    165c:	99 0f       	add	r25, r25
    165e:	fa 94       	dec	r15
    1660:	ea f7       	brpl	.-6      	; 0x165c <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x46>
    1662:	97 87       	std	Z+15, r25	; 0x0f
    1664:	98 2f       	mov	r25, r24
    1666:	01 c0       	rjmp	.+2      	; 0x166a <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x54>
    1668:	99 0f       	add	r25, r25
    166a:	1a 95       	dec	r17
    166c:	ea f7       	brpl	.-6      	; 0x1668 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x52>
    166e:	90 8b       	std	Z+16, r25	; 0x10
    1670:	98 2f       	mov	r25, r24
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x60>
    1674:	99 0f       	add	r25, r25
    1676:	0a 95       	dec	r16
    1678:	ea f7       	brpl	.-6      	; 0x1674 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x5e>
    167a:	91 8b       	std	Z+17, r25	; 0x11
    167c:	98 2f       	mov	r25, r24
    167e:	01 c0       	rjmp	.+2      	; 0x1682 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x6c>
    1680:	99 0f       	add	r25, r25
    1682:	ea 94       	dec	r14
    1684:	ea f7       	brpl	.-6      	; 0x1680 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x6a>
    1686:	92 8b       	std	Z+18, r25	; 0x12
    1688:	98 2f       	mov	r25, r24
    168a:	01 c0       	rjmp	.+2      	; 0x168e <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x78>
    168c:	99 0f       	add	r25, r25
    168e:	ca 94       	dec	r12
    1690:	ea f7       	brpl	.-6      	; 0x168c <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x76>
    1692:	93 8b       	std	Z+19, r25	; 0x13
    1694:	98 2f       	mov	r25, r24
    1696:	01 c0       	rjmp	.+2      	; 0x169a <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x84>
    1698:	99 0f       	add	r25, r25
    169a:	aa 94       	dec	r10
    169c:	ea f7       	brpl	.-6      	; 0x1698 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x82>
    169e:	94 8b       	std	Z+20, r25	; 0x14
    16a0:	01 c0       	rjmp	.+2      	; 0x16a4 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x8e>
    16a2:	88 0f       	add	r24, r24
    16a4:	8a 94       	dec	r8
    16a6:	ea f7       	brpl	.-6      	; 0x16a2 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x8c>
    16a8:	85 8b       	std	Z+21, r24	; 0x15
    16aa:	df 91       	pop	r29
    16ac:	cf 91       	pop	r28
    16ae:	1f 91       	pop	r17
    16b0:	0f 91       	pop	r16
    16b2:	ff 90       	pop	r15
    16b4:	ef 90       	pop	r14
    16b6:	df 90       	pop	r13
    16b8:	cf 90       	pop	r12
    16ba:	af 90       	pop	r10
    16bc:	8f 90       	pop	r8
    16be:	7f 90       	pop	r7
    16c0:	6f 90       	pop	r6
    16c2:	08 95       	ret

000016c4 <_ZN17LiquidCrystal_I2C4initEv>:
    16c4:	0f 93       	push	r16
    16c6:	1f 93       	push	r17
    16c8:	cf 93       	push	r28
    16ca:	df 93       	push	r29
    16cc:	ec 01       	movw	r28, r24
    16ce:	8c 01       	movw	r16, r24
    16d0:	05 5f       	subi	r16, 0xF5	; 245
    16d2:	1f 4f       	sbci	r17, 0xFF	; 255
    16d4:	68 85       	ldd	r22, Y+8	; 0x08
    16d6:	c8 01       	movw	r24, r16
    16d8:	11 de       	rcall	.-990    	; 0x12fc <_ZN5I2CIO5beginEh>
    16da:	01 97       	sbiw	r24, 0x01	; 1
    16dc:	51 f4       	brne	.+20     	; 0x16f2 <_ZN17LiquidCrystal_I2C4initEv+0x2e>
    16de:	61 e0       	ldi	r22, 0x01	; 1
    16e0:	c8 01       	movw	r24, r16
    16e2:	1e de       	rcall	.-964    	; 0x1320 <_ZN5I2CIO8portModeEh>
    16e4:	1a 82       	std	Y+2, r1	; 0x02
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	c8 01       	movw	r24, r16
    16ea:	23 de       	rcall	.-954    	; 0x1332 <_ZN5I2CIO5writeEh>
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	02 c0       	rjmp	.+4      	; 0x16f6 <_ZN17LiquidCrystal_I2C4initEv+0x32>
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	df 91       	pop	r29
    16f8:	cf 91       	pop	r28
    16fa:	1f 91       	pop	r17
    16fc:	0f 91       	pop	r16
    16fe:	08 95       	ret

00001700 <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
}

//
// pulseEnable
void LiquidCrystal_I2C::pulseEnable (uint8_t data)
{
    1700:	ef 92       	push	r14
    1702:	ff 92       	push	r15
    1704:	0f 93       	push	r16
    1706:	1f 93       	push	r17
    1708:	cf 93       	push	r28
    170a:	8c 01       	movw	r16, r24
    170c:	c6 2f       	mov	r28, r22
	_i2cio.write (data | _En);   // En HIGH
    170e:	7c 01       	movw	r14, r24
    1710:	8b e0       	ldi	r24, 0x0B	; 11
    1712:	e8 0e       	add	r14, r24
    1714:	f1 1c       	adc	r15, r1
    1716:	f8 01       	movw	r30, r16
    1718:	67 85       	ldd	r22, Z+15	; 0x0f
    171a:	6c 2b       	or	r22, r28
    171c:	c7 01       	movw	r24, r14
    171e:	09 de       	rcall	.-1006   	; 0x1332 <_ZN5I2CIO5writeEh>
	_i2cio.write (data & ~_En);  // En LOW
    1720:	f8 01       	movw	r30, r16
    1722:	67 85       	ldd	r22, Z+15	; 0x0f
    1724:	60 95       	com	r22
    1726:	6c 23       	and	r22, r28
    1728:	c7 01       	movw	r24, r14
    172a:	03 de       	rcall	.-1018   	; 0x1332 <_ZN5I2CIO5writeEh>
    172c:	cf 91       	pop	r28
    172e:	1f 91       	pop	r17
    1730:	0f 91       	pop	r16
    1732:	ff 90       	pop	r15
    1734:	ef 90       	pop	r14
    1736:	08 95       	ret

00001738 <_ZN17LiquidCrystal_I2C10write4bitsEhh>:
}

//
// write4bits
void LiquidCrystal_I2C::write4bits ( uint8_t value, uint8_t mode )
{
    1738:	dc 01       	movw	r26, r24
    173a:	fc 01       	movw	r30, r24
    173c:	04 96       	adiw	r24, 0x04	; 4
	uint8_t pinMapValue = 0;
    173e:	20 e0       	ldi	r18, 0x00	; 0

	// Map the value to LCD pin mapping
	// --------------------------------
	for ( uint8_t i = 0; i < 4; i++ )
	{
		if ( ( value & 0x1 ) == 1 )
    1740:	60 ff       	sbrs	r22, 0
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x10>
		{
			pinMapValue |= _data_pins[i];
    1744:	32 89       	ldd	r19, Z+18	; 0x12
    1746:	23 2b       	or	r18, r19
		}
		value = ( value >> 1 );
    1748:	66 95       	lsr	r22
    174a:	31 96       	adiw	r30, 0x01	; 1
{
	uint8_t pinMapValue = 0;

	// Map the value to LCD pin mapping
	// --------------------------------
	for ( uint8_t i = 0; i < 4; i++ )
    174c:	e8 17       	cp	r30, r24
    174e:	f9 07       	cpc	r31, r25
    1750:	b9 f7       	brne	.-18     	; 0x1740 <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x8>
		value = ( value >> 1 );
	}

	// Is it a command or data
	// -----------------------
	if ( mode == LCD_DATA )
    1752:	41 30       	cpi	r20, 0x01	; 1
    1754:	19 f4       	brne	.+6      	; 0x175c <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x24>
	{
		mode = _Rs;
    1756:	51 96       	adiw	r26, 0x11	; 17
    1758:	4c 91       	ld	r20, X
    175a:	51 97       	sbiw	r26, 0x11	; 17
    175c:	1a 96       	adiw	r26, 0x0a	; 10
    175e:	9c 91       	ld	r25, X
    1760:	1a 97       	sbiw	r26, 0x0a	; 10
    1762:	62 2f       	mov	r22, r18
    1764:	69 2b       	or	r22, r25
	}

	pinMapValue |= mode | _backlightStsMask;
	pulseEnable ( pinMapValue );
    1766:	64 2b       	or	r22, r20
    1768:	cd 01       	movw	r24, r26
    176a:	ca cf       	rjmp	.-108    	; 0x1700 <_ZN17LiquidCrystal_I2C11pulseEnableEh>
    176c:	08 95       	ret

0000176e <_ZN17LiquidCrystal_I2C4sendEhh>:
//----------------------------------------------------------------------------

//
// send - write either command or data
void LiquidCrystal_I2C::send(uint8_t value, uint8_t mode)
{
    176e:	0f 93       	push	r16
    1770:	1f 93       	push	r17
    1772:	cf 93       	push	r28
    1774:	df 93       	push	r29
    1776:	8c 01       	movw	r16, r24
    1778:	c6 2f       	mov	r28, r22
    177a:	d4 2f       	mov	r29, r20
	// No need to use the delay routines since the time taken to write takes
	// longer that what is needed both for toggling and enable pin an to execute
	// the command.

	if ( mode == FOUR_BITS )
    177c:	42 30       	cpi	r20, 0x02	; 2
    177e:	21 f4       	brne	.+8      	; 0x1788 <_ZN17LiquidCrystal_I2C4sendEhh+0x1a>
	{
		write4bits( (value & 0x0F), COMMAND );
    1780:	6f 70       	andi	r22, 0x0F	; 15
    1782:	40 e0       	ldi	r20, 0x00	; 0
    1784:	d9 df       	rcall	.-78     	; 0x1738 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
    1786:	0f c0       	rjmp	.+30     	; 0x17a6 <_ZN17LiquidCrystal_I2C4sendEhh+0x38>
	}
	else
	{
		write4bits( (value >> 4), mode );
    1788:	70 e0       	ldi	r23, 0x00	; 0
    178a:	75 95       	asr	r23
    178c:	67 95       	ror	r22
    178e:	75 95       	asr	r23
    1790:	67 95       	ror	r22
    1792:	75 95       	asr	r23
    1794:	67 95       	ror	r22
    1796:	75 95       	asr	r23
    1798:	67 95       	ror	r22
    179a:	ce df       	rcall	.-100    	; 0x1738 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
		write4bits( (value & 0x0F), mode);
    179c:	6c 2f       	mov	r22, r28
    179e:	6f 70       	andi	r22, 0x0F	; 15
    17a0:	4d 2f       	mov	r20, r29
    17a2:	c8 01       	movw	r24, r16
    17a4:	c9 df       	rcall	.-110    	; 0x1738 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
	}
}
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	08 95       	ret

000017b0 <_ZN17LiquidCrystal_I2C5beginEhhh>:
// ---------------------------------------------------------------------------

//
// begin
void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize)
{
    17b0:	ff 92       	push	r15
    17b2:	0f 93       	push	r16
    17b4:	1f 93       	push	r17
    17b6:	cf 93       	push	r28
    17b8:	df 93       	push	r29
    17ba:	ec 01       	movw	r28, r24
    17bc:	16 2f       	mov	r17, r22
    17be:	04 2f       	mov	r16, r20
    17c0:	f2 2e       	mov	r15, r18

	init();     // Initialise the I2C expander interface
    17c2:	80 df       	rcall	.-256    	; 0x16c4 <_ZN17LiquidCrystal_I2C4initEv>
	LCD::begin ( cols, lines, dotsize );
    17c4:	2f 2d       	mov	r18, r15
    17c6:	40 2f       	mov	r20, r16
    17c8:	61 2f       	mov	r22, r17
    17ca:	ce 01       	movw	r24, r28
    17cc:	33 de       	rcall	.-922    	; 0x1434 <_ZN3LCD5beginEhhh>
}
    17ce:	df 91       	pop	r29
    17d0:	cf 91       	pop	r28
    17d2:	1f 91       	pop	r17
    17d4:	0f 91       	pop	r16
    17d6:	ff 90       	pop	r15
    17d8:	08 95       	ret

000017da <_ZN20Adafruit_LEDBackpack13setBrightnessEh>:

void  Adafruit_7segment::println(long n, int base)
{
	print(n, base);
	println();
}
    17da:	60 31       	cpi	r22, 0x10	; 16
    17dc:	08 f0       	brcs	.+2      	; 0x17e0 <_ZN20Adafruit_LEDBackpack13setBrightnessEh+0x6>
    17de:	6f e0       	ldi	r22, 0x0F	; 15
    17e0:	60 6e       	ori	r22, 0xE0	; 224
    17e2:	fc 01       	movw	r30, r24
    17e4:	67 a3       	std	Z+39, r22	; 0x27
    17e6:	bc 01       	movw	r22, r24
    17e8:	69 5d       	subi	r22, 0xD9	; 217
    17ea:	7f 4f       	sbci	r23, 0xFF	; 255
    17ec:	41 e0       	ldi	r20, 0x01	; 1
    17ee:	41 96       	adiw	r24, 0x11	; 17
    17f0:	80 cc       	rjmp	.-1792   	; 0x10f2 <_ZN3I2C5writeEPhh>
    17f2:	08 95       	ret

000017f4 <_ZN20Adafruit_LEDBackpack9blinkRateEh>:
    17f4:	64 30       	cpi	r22, 0x04	; 4
    17f6:	08 f0       	brcs	.+2      	; 0x17fa <_ZN20Adafruit_LEDBackpack9blinkRateEh+0x6>
    17f8:	60 e0       	ldi	r22, 0x00	; 0
    17fa:	66 0f       	add	r22, r22
    17fc:	61 68       	ori	r22, 0x81	; 129
    17fe:	fc 01       	movw	r30, r24
    1800:	67 a3       	std	Z+39, r22	; 0x27
    1802:	bc 01       	movw	r22, r24
    1804:	69 5d       	subi	r22, 0xD9	; 217
    1806:	7f 4f       	sbci	r23, 0xFF	; 255
    1808:	41 e0       	ldi	r20, 0x01	; 1
    180a:	41 96       	adiw	r24, 0x11	; 17
    180c:	72 cc       	rjmp	.-1820   	; 0x10f2 <_ZN3I2C5writeEPhh>
    180e:	08 95       	ret

00001810 <_ZN20Adafruit_LEDBackpack5beginEh>:
    1810:	cf 93       	push	r28
    1812:	df 93       	push	r29
    1814:	ec 01       	movw	r28, r24
    1816:	68 8b       	std	Y+16, r22	; 0x10
    1818:	81 e2       	ldi	r24, 0x21	; 33
    181a:	8f a3       	std	Y+39, r24	; 0x27
    181c:	be 01       	movw	r22, r28
    181e:	69 5d       	subi	r22, 0xD9	; 217
    1820:	7f 4f       	sbci	r23, 0xFF	; 255
    1822:	41 e0       	ldi	r20, 0x01	; 1
    1824:	ce 01       	movw	r24, r28
    1826:	41 96       	adiw	r24, 0x11	; 17
    1828:	64 dc       	rcall	.-1848   	; 0x10f2 <_ZN3I2C5writeEPhh>
    182a:	60 e0       	ldi	r22, 0x00	; 0
    182c:	ce 01       	movw	r24, r28
    182e:	e2 df       	rcall	.-60     	; 0x17f4 <_ZN20Adafruit_LEDBackpack9blinkRateEh>
    1830:	62 e0       	ldi	r22, 0x02	; 2
    1832:	ce 01       	movw	r24, r28
    1834:	d2 df       	rcall	.-92     	; 0x17da <_ZN20Adafruit_LEDBackpack13setBrightnessEh>
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	08 95       	ret

0000183c <_ZN20Adafruit_LEDBackpack12writeDisplayEv>:
    183c:	dc 01       	movw	r26, r24
    183e:	97 96       	adiw	r26, 0x27	; 39
    1840:	1c 92       	st	X, r1
    1842:	97 97       	sbiw	r26, 0x27	; 39
    1844:	fc 01       	movw	r30, r24
    1846:	ac 01       	movw	r20, r24
    1848:	40 5f       	subi	r20, 0xF0	; 240
    184a:	5f 4f       	sbci	r21, 0xFF	; 255
    184c:	20 81       	ld	r18, Z
    184e:	91 81       	ldd	r25, Z+1	; 0x01
    1850:	32 96       	adiw	r30, 0x02	; 2
    1852:	26 a3       	std	Z+38, r18	; 0x26
    1854:	97 a3       	std	Z+39, r25	; 0x27
    1856:	e4 17       	cp	r30, r20
    1858:	f5 07       	cpc	r31, r21
    185a:	c1 f7       	brne	.-16     	; 0x184c <_ZN20Adafruit_LEDBackpack12writeDisplayEv+0x10>
    185c:	bd 01       	movw	r22, r26
    185e:	69 5d       	subi	r22, 0xD9	; 217
    1860:	7f 4f       	sbci	r23, 0xFF	; 255
    1862:	41 e1       	ldi	r20, 0x11	; 17
    1864:	cd 01       	movw	r24, r26
    1866:	41 96       	adiw	r24, 0x11	; 17
    1868:	44 cc       	rjmp	.-1912   	; 0x10f2 <_ZN3I2C5writeEPhh>
    186a:	08 95       	ret

0000186c <_ZN17Adafruit_7segmentC1Eh>:
    186c:	fc 01       	movw	r30, r24
    186e:	e9 5b       	subi	r30, 0xB9	; 185
    1870:	ff 4f       	sbci	r31, 0xFF	; 255
    1872:	10 82       	st	Z, r1
    1874:	41 96       	adiw	r24, 0x11	; 17
    1876:	b9 cb       	rjmp	.-2190   	; 0xfea <_ZN3I2C11set_addressEh>
    1878:	08 95       	ret

0000187a <_ZN17Adafruit_7segment13writeDigitRawEhh>:
    187a:	65 30       	cpi	r22, 0x05	; 5
    187c:	d0 f4       	brcc	.+52     	; 0x18b2 <_ZN17Adafruit_7segment13writeDigitRawEhh+0x38>
    187e:	e6 2f       	mov	r30, r22
    1880:	f0 e0       	ldi	r31, 0x00	; 0
    1882:	24 2f       	mov	r18, r20
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	ee 0f       	add	r30, r30
    1888:	ff 1f       	adc	r31, r31
    188a:	e8 0f       	add	r30, r24
    188c:	f9 1f       	adc	r31, r25
    188e:	31 83       	std	Z+1, r19	; 0x01
    1890:	20 83       	st	Z, r18
    1892:	1f 92       	push	r1
    1894:	4f 93       	push	r20
    1896:	1f 92       	push	r1
    1898:	6f 93       	push	r22
    189a:	8e ea       	ldi	r24, 0xAE	; 174
    189c:	92 e0       	ldi	r25, 0x02	; 2
    189e:	9f 93       	push	r25
    18a0:	8f 93       	push	r24
    18a2:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
    18a6:	0f 90       	pop	r0
    18a8:	0f 90       	pop	r0
    18aa:	0f 90       	pop	r0
    18ac:	0f 90       	pop	r0
    18ae:	0f 90       	pop	r0
    18b0:	0f 90       	pop	r0
    18b2:	08 95       	ret

000018b4 <_ZN17Adafruit_7segment13writeDigitNumEhhb>:
    18b4:	65 30       	cpi	r22, 0x05	; 5
    18b6:	58 f4       	brcc	.+22     	; 0x18ce <_ZN17Adafruit_7segment13writeDigitNumEhhb+0x1a>
    18b8:	e4 2f       	mov	r30, r20
    18ba:	f0 e0       	ldi	r31, 0x00	; 0
    18bc:	e5 54       	subi	r30, 0x45	; 69
    18be:	fd 4f       	sbci	r31, 0xFD	; 253
    18c0:	40 e8       	ldi	r20, 0x80	; 128
    18c2:	24 9f       	mul	r18, r20
    18c4:	90 01       	movw	r18, r0
    18c6:	11 24       	eor	r1, r1
    18c8:	40 81       	ld	r20, Z
    18ca:	42 2b       	or	r20, r18
    18cc:	d6 cf       	rjmp	.-84     	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    18ce:	08 95       	ret

000018d0 <_ZN17Adafruit_7segment5writeEh>:
    18d0:	cf 93       	push	r28
    18d2:	df 93       	push	r29
    18d4:	ec 01       	movw	r28, r24
    18d6:	6a 30       	cpi	r22, 0x0A	; 10
    18d8:	31 f4       	brne	.+12     	; 0x18e6 <_ZN17Adafruit_7segment5writeEh+0x16>
    18da:	fc 01       	movw	r30, r24
    18dc:	e9 5b       	subi	r30, 0xB9	; 185
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	10 82       	st	Z, r1
    18e2:	80 e0       	ldi	r24, 0x00	; 0
    18e4:	16 c0       	rjmp	.+44     	; 0x1912 <_ZN17Adafruit_7segment5writeEh+0x42>
    18e6:	6d 30       	cpi	r22, 0x0D	; 13
    18e8:	39 f4       	brne	.+14     	; 0x18f8 <_ZN17Adafruit_7segment5writeEh+0x28>
    18ea:	fc 01       	movw	r30, r24
    18ec:	e9 5b       	subi	r30, 0xB9	; 185
    18ee:	ff 4f       	sbci	r31, 0xFF	; 255
    18f0:	10 82       	st	Z, r1
    18f2:	21 e0       	ldi	r18, 0x01	; 1
    18f4:	80 e0       	ldi	r24, 0x00	; 0
    18f6:	15 c0       	rjmp	.+42     	; 0x1922 <_ZN17Adafruit_7segment5writeEh+0x52>
    18f8:	40 ed       	ldi	r20, 0xD0	; 208
    18fa:	46 0f       	add	r20, r22
    18fc:	4a 30       	cpi	r20, 0x0A	; 10
    18fe:	40 f4       	brcc	.+16     	; 0x1910 <_ZN17Adafruit_7segment5writeEh+0x40>
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	fc 01       	movw	r30, r24
    1904:	e9 5b       	subi	r30, 0xB9	; 185
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	60 81       	ld	r22, Z
    190a:	d4 df       	rcall	.-88     	; 0x18b4 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    190c:	81 e0       	ldi	r24, 0x01	; 1
    190e:	01 c0       	rjmp	.+2      	; 0x1912 <_ZN17Adafruit_7segment5writeEh+0x42>
    1910:	80 e0       	ldi	r24, 0x00	; 0
    1912:	fe 01       	movw	r30, r28
    1914:	e9 5b       	subi	r30, 0xB9	; 185
    1916:	ff 4f       	sbci	r31, 0xFF	; 255
    1918:	90 81       	ld	r25, Z
    191a:	21 e0       	ldi	r18, 0x01	; 1
    191c:	29 0f       	add	r18, r25
    191e:	22 30       	cpi	r18, 0x02	; 2
    1920:	21 f0       	breq	.+8      	; 0x192a <_ZN17Adafruit_7segment5writeEh+0x5a>
    1922:	c9 5b       	subi	r28, 0xB9	; 185
    1924:	df 4f       	sbci	r29, 0xFF	; 255
    1926:	28 83       	st	Y, r18
    1928:	04 c0       	rjmp	.+8      	; 0x1932 <_ZN17Adafruit_7segment5writeEh+0x62>
    192a:	c9 5b       	subi	r28, 0xB9	; 185
    192c:	df 4f       	sbci	r29, 0xFF	; 255
    192e:	9e 5f       	subi	r25, 0xFE	; 254
    1930:	98 83       	st	Y, r25
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	df 91       	pop	r29
    1936:	cf 91       	pop	r28
    1938:	08 95       	ret

0000193a <_ZN17Adafruit_7segment10printErrorEv>:
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	8c 01       	movw	r16, r24
    1944:	d1 e0       	ldi	r29, 0x01	; 1
    1946:	c0 e0       	ldi	r28, 0x00	; 0
    1948:	02 c0       	rjmp	.+4      	; 0x194e <_ZN17Adafruit_7segment10printErrorEv+0x14>
    194a:	cf 5f       	subi	r28, 0xFF	; 255
    194c:	df 5f       	subi	r29, 0xFF	; 255
    194e:	c2 30       	cpi	r28, 0x02	; 2
    1950:	39 f0       	breq	.+14     	; 0x1960 <_ZN17Adafruit_7segment10printErrorEv+0x26>
    1952:	40 e4       	ldi	r20, 0x40	; 64
    1954:	6c 2f       	mov	r22, r28
    1956:	c8 01       	movw	r24, r16
    1958:	90 df       	rcall	.-224    	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    195a:	d5 30       	cpi	r29, 0x05	; 5
    195c:	b0 f3       	brcs	.-20     	; 0x194a <_ZN17Adafruit_7segment10printErrorEv+0x10>
    195e:	05 c0       	rjmp	.+10     	; 0x196a <_ZN17Adafruit_7segment10printErrorEv+0x30>
    1960:	40 e0       	ldi	r20, 0x00	; 0
    1962:	6c 2f       	mov	r22, r28
    1964:	c8 01       	movw	r24, r16
    1966:	89 df       	rcall	.-238    	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    1968:	f0 cf       	rjmp	.-32     	; 0x194a <_ZN17Adafruit_7segment10printErrorEv+0x10>
    196a:	df 91       	pop	r29
    196c:	cf 91       	pop	r28
    196e:	1f 91       	pop	r17
    1970:	0f 91       	pop	r16
    1972:	08 95       	ret

00001974 <_ZN17Adafruit_7segment10printFloatEdhh>:
    1974:	2f 92       	push	r2
    1976:	3f 92       	push	r3
    1978:	4f 92       	push	r4
    197a:	5f 92       	push	r5
    197c:	6f 92       	push	r6
    197e:	7f 92       	push	r7
    1980:	8f 92       	push	r8
    1982:	9f 92       	push	r9
    1984:	af 92       	push	r10
    1986:	bf 92       	push	r11
    1988:	cf 92       	push	r12
    198a:	df 92       	push	r13
    198c:	ef 92       	push	r14
    198e:	ff 92       	push	r15
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	cf 93       	push	r28
    1996:	df 93       	push	r29
    1998:	cd b7       	in	r28, 0x3d	; 61
    199a:	de b7       	in	r29, 0x3e	; 62
    199c:	2b 97       	sbiw	r28, 0x0b	; 11
    199e:	0f b6       	in	r0, 0x3f	; 63
    19a0:	f8 94       	cli
    19a2:	de bf       	out	0x3e, r29	; 62
    19a4:	0f be       	out	0x3f, r0	; 63
    19a6:	cd bf       	out	0x3d, r28	; 61
    19a8:	1c 01       	movw	r2, r24
    19aa:	4d 83       	std	Y+5, r20	; 0x05
    19ac:	5e 83       	std	Y+6, r21	; 0x06
    19ae:	6f 83       	std	Y+7, r22	; 0x07
    19b0:	78 87       	std	Y+8, r23	; 0x08
    19b2:	2b 87       	std	Y+11, r18	; 0x0b
    19b4:	09 87       	std	Y+9, r16	; 0x09
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	a9 01       	movw	r20, r18
    19bc:	6d 81       	ldd	r22, Y+5	; 0x05
    19be:	7e 81       	ldd	r23, Y+6	; 0x06
    19c0:	8f 81       	ldd	r24, Y+7	; 0x07
    19c2:	98 85       	ldd	r25, Y+8	; 0x08
    19c4:	0e 94 f2 16 	call	0x2de4	; 0x2de4 <__cmpsf2>
    19c8:	88 23       	and	r24, r24
    19ca:	0c f0       	brlt	.+2      	; 0x19ce <_ZN17Adafruit_7segment10printFloatEdhh+0x5a>
    19cc:	25 c1       	rjmp	.+586    	; 0x1c18 <_ZN17Adafruit_7segment10printFloatEdhh+0x2a4>
    19ce:	8d 81       	ldd	r24, Y+5	; 0x05
    19d0:	9e 81       	ldd	r25, Y+6	; 0x06
    19d2:	af 81       	ldd	r26, Y+7	; 0x07
    19d4:	b8 85       	ldd	r27, Y+8	; 0x08
    19d6:	b0 58       	subi	r27, 0x80	; 128
    19d8:	8d 83       	std	Y+5, r24	; 0x05
    19da:	9e 83       	std	Y+6, r25	; 0x06
    19dc:	af 83       	std	Y+7, r26	; 0x07
    19de:	b8 87       	std	Y+8, r27	; 0x08
    19e0:	91 e0       	ldi	r25, 0x01	; 1
    19e2:	9a 87       	std	Y+10, r25	; 0x0a
    19e4:	a3 e0       	ldi	r26, 0x03	; 3
    19e6:	a9 83       	std	Y+1, r26	; 0x01
    19e8:	1a c1       	rjmp	.+564    	; 0x1c1e <_ZN17Adafruit_7segment10printFloatEdhh+0x2aa>
    19ea:	c3 01       	movw	r24, r6
    19ec:	b2 01       	movw	r22, r4
    19ee:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__floatsisf>
    19f2:	9b 01       	movw	r18, r22
    19f4:	ac 01       	movw	r20, r24
    19f6:	c7 01       	movw	r24, r14
    19f8:	b6 01       	movw	r22, r12
    19fa:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    19fe:	6b 01       	movw	r12, r22
    1a00:	7c 01       	movw	r14, r24
    1a02:	0f 5f       	subi	r16, 0xFF	; 255
    1a04:	1f 4f       	sbci	r17, 0xFF	; 255
    1a06:	0a 15       	cp	r16, r10
    1a08:	1b 05       	cpc	r17, r11
    1a0a:	79 f7       	brne	.-34     	; 0x19ea <_ZN17Adafruit_7segment10printFloatEdhh+0x76>
    1a0c:	2d 81       	ldd	r18, Y+5	; 0x05
    1a0e:	3e 81       	ldd	r19, Y+6	; 0x06
    1a10:	4f 81       	ldd	r20, Y+7	; 0x07
    1a12:	58 85       	ldd	r21, Y+8	; 0x08
    1a14:	c7 01       	movw	r24, r14
    1a16:	b6 01       	movw	r22, r12
    1a18:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    1a1c:	20 e0       	ldi	r18, 0x00	; 0
    1a1e:	30 e0       	ldi	r19, 0x00	; 0
    1a20:	40 e0       	ldi	r20, 0x00	; 0
    1a22:	5f e3       	ldi	r21, 0x3F	; 63
    1a24:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__addsf3>
    1a28:	0e 94 5e 17 	call	0x2ebc	; 0x2ebc <__fixunssfsi>
    1a2c:	2b 01       	movw	r4, r22
    1a2e:	3c 01       	movw	r6, r24
    1a30:	99 81       	ldd	r25, Y+1	; 0x01
    1a32:	e9 2f       	mov	r30, r25
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	1e 16       	cp	r1, r30
    1a38:	1f 06       	cpc	r1, r31
    1a3a:	a4 f0       	brlt	.+40     	; 0x1a64 <_ZN17Adafruit_7segment10printFloatEdhh+0xf0>
    1a3c:	81 2c       	mov	r8, r1
    1a3e:	91 2c       	mov	r9, r1
    1a40:	54 01       	movw	r10, r8
    1a42:	83 94       	inc	r8
    1a44:	48 14       	cp	r4, r8
    1a46:	59 04       	cpc	r5, r9
    1a48:	6a 04       	cpc	r6, r10
    1a4a:	7b 04       	cpc	r7, r11
    1a4c:	08 f4       	brcc	.+2      	; 0x1a50 <_ZN17Adafruit_7segment10printFloatEdhh+0xdc>
    1a4e:	4f c0       	rjmp	.+158    	; 0x1aee <_ZN17Adafruit_7segment10printFloatEdhh+0x17a>
    1a50:	99 85       	ldd	r25, Y+9	; 0x09
    1a52:	89 2f       	mov	r24, r25
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	a0 e0       	ldi	r26, 0x00	; 0
    1a58:	b0 e0       	ldi	r27, 0x00	; 0
    1a5a:	89 83       	std	Y+1, r24	; 0x01
    1a5c:	9a 83       	std	Y+2, r25	; 0x02
    1a5e:	ab 83       	std	Y+3, r26	; 0x03
    1a60:	bc 83       	std	Y+4, r27	; 0x04
    1a62:	1f c0       	rjmp	.+62     	; 0x1aa2 <_ZN17Adafruit_7segment10printFloatEdhh+0x12e>
    1a64:	00 e0       	ldi	r16, 0x00	; 0
    1a66:	10 e0       	ldi	r17, 0x00	; 0
    1a68:	81 2c       	mov	r8, r1
    1a6a:	91 2c       	mov	r9, r1
    1a6c:	54 01       	movw	r10, r8
    1a6e:	83 94       	inc	r8
    1a70:	99 85       	ldd	r25, Y+9	; 0x09
    1a72:	89 2f       	mov	r24, r25
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	a0 e0       	ldi	r26, 0x00	; 0
    1a78:	b0 e0       	ldi	r27, 0x00	; 0
    1a7a:	89 83       	std	Y+1, r24	; 0x01
    1a7c:	9a 83       	std	Y+2, r25	; 0x02
    1a7e:	ab 83       	std	Y+3, r26	; 0x03
    1a80:	bc 83       	std	Y+4, r27	; 0x04
    1a82:	a5 01       	movw	r20, r10
    1a84:	94 01       	movw	r18, r8
    1a86:	69 81       	ldd	r22, Y+1	; 0x01
    1a88:	7a 81       	ldd	r23, Y+2	; 0x02
    1a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a8e:	0e 94 9f 18 	call	0x313e	; 0x313e <__mulsi3>
    1a92:	4b 01       	movw	r8, r22
    1a94:	5c 01       	movw	r10, r24
    1a96:	0f 5f       	subi	r16, 0xFF	; 255
    1a98:	1f 4f       	sbci	r17, 0xFF	; 255
    1a9a:	0e 17       	cp	r16, r30
    1a9c:	1f 07       	cpc	r17, r31
    1a9e:	8c f3       	brlt	.-30     	; 0x1a82 <_ZN17Adafruit_7segment10printFloatEdhh+0x10e>
    1aa0:	d1 cf       	rjmp	.-94     	; 0x1a44 <_ZN17Adafruit_7segment10printFloatEdhh+0xd0>
    1aa2:	8b 85       	ldd	r24, Y+11	; 0x0b
    1aa4:	81 50       	subi	r24, 0x01	; 1
    1aa6:	8b 87       	std	Y+11, r24	; 0x0b
    1aa8:	69 81       	ldd	r22, Y+1	; 0x01
    1aaa:	7a 81       	ldd	r23, Y+2	; 0x02
    1aac:	8b 81       	ldd	r24, Y+3	; 0x03
    1aae:	9c 81       	ldd	r25, Y+4	; 0x04
    1ab0:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__floatsisf>
    1ab4:	9b 01       	movw	r18, r22
    1ab6:	ac 01       	movw	r20, r24
    1ab8:	c7 01       	movw	r24, r14
    1aba:	b6 01       	movw	r22, r12
    1abc:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__divsf3>
    1ac0:	6b 01       	movw	r12, r22
    1ac2:	7c 01       	movw	r14, r24
    1ac4:	2d 81       	ldd	r18, Y+5	; 0x05
    1ac6:	3e 81       	ldd	r19, Y+6	; 0x06
    1ac8:	4f 81       	ldd	r20, Y+7	; 0x07
    1aca:	58 85       	ldd	r21, Y+8	; 0x08
    1acc:	0e 94 3c 18 	call	0x3078	; 0x3078 <__mulsf3>
    1ad0:	20 e0       	ldi	r18, 0x00	; 0
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	40 e0       	ldi	r20, 0x00	; 0
    1ad6:	5f e3       	ldi	r21, 0x3F	; 63
    1ad8:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__addsf3>
    1adc:	0e 94 5e 17 	call	0x2ebc	; 0x2ebc <__fixunssfsi>
    1ae0:	2b 01       	movw	r4, r22
    1ae2:	3c 01       	movw	r6, r24
    1ae4:	68 15       	cp	r22, r8
    1ae6:	79 05       	cpc	r23, r9
    1ae8:	8a 05       	cpc	r24, r10
    1aea:	9b 05       	cpc	r25, r11
    1aec:	d0 f6       	brcc	.-76     	; 0x1aa2 <_ZN17Adafruit_7segment10printFloatEdhh+0x12e>
    1aee:	20 e0       	ldi	r18, 0x00	; 0
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	40 e8       	ldi	r20, 0x80	; 128
    1af4:	5f e3       	ldi	r21, 0x3F	; 63
    1af6:	c7 01       	movw	r24, r14
    1af8:	b6 01       	movw	r22, r12
    1afa:	0e 94 f2 16 	call	0x2de4	; 0x2de4 <__cmpsf2>
    1afe:	88 23       	and	r24, r24
    1b00:	1c f4       	brge	.+6      	; 0x1b08 <_ZN17Adafruit_7segment10printFloatEdhh+0x194>
    1b02:	c1 01       	movw	r24, r2
    1b04:	1a df       	rcall	.-460    	; 0x193a <_ZN17Adafruit_7segment10printErrorEv>
    1b06:	a1 c0       	rjmp	.+322    	; 0x1c4a <_ZN17Adafruit_7segment10printFloatEdhh+0x2d6>
    1b08:	41 14       	cp	r4, r1
    1b0a:	51 04       	cpc	r5, r1
    1b0c:	61 04       	cpc	r6, r1
    1b0e:	71 04       	cpc	r7, r1
    1b10:	29 f4       	brne	.+10     	; 0x1b1c <_ZN17Adafruit_7segment10printFloatEdhh+0x1a8>
    1b12:	41 c0       	rjmp	.+130    	; 0x1b96 <_ZN17Adafruit_7segment10printFloatEdhh+0x222>
    1b14:	ab 85       	ldd	r26, Y+11	; 0x0b
    1b16:	a1 17       	cp	r26, r17
    1b18:	60 f4       	brcc	.+24     	; 0x1b32 <_ZN17Adafruit_7segment10printFloatEdhh+0x1be>
    1b1a:	48 c0       	rjmp	.+144    	; 0x1bac <_ZN17Adafruit_7segment10printFloatEdhh+0x238>
    1b1c:	10 e0       	ldi	r17, 0x00	; 0
    1b1e:	84 e0       	ldi	r24, 0x04	; 4
    1b20:	99 24       	eor	r9, r9
    1b22:	93 94       	inc	r9
    1b24:	a1 2c       	mov	r10, r1
    1b26:	99 85       	ldd	r25, Y+9	; 0x09
    1b28:	c9 2e       	mov	r12, r25
    1b2a:	d1 2c       	mov	r13, r1
    1b2c:	e1 2c       	mov	r14, r1
    1b2e:	f1 2c       	mov	r15, r1
    1b30:	89 83       	std	Y+1, r24	; 0x01
    1b32:	bb 85       	ldd	r27, Y+11	; 0x0b
    1b34:	bb 23       	and	r27, r27
    1b36:	29 f0       	breq	.+10     	; 0x1b42 <_ZN17Adafruit_7segment10printFloatEdhh+0x1ce>
    1b38:	09 2d       	mov	r16, r9
    1b3a:	b1 17       	cp	r27, r17
    1b3c:	19 f0       	breq	.+6      	; 0x1b44 <_ZN17Adafruit_7segment10printFloatEdhh+0x1d0>
    1b3e:	0a 2d       	mov	r16, r10
    1b40:	01 c0       	rjmp	.+2      	; 0x1b44 <_ZN17Adafruit_7segment10printFloatEdhh+0x1d0>
    1b42:	0a 2d       	mov	r16, r10
    1b44:	b9 80       	ldd	r11, Y+1	; 0x01
    1b46:	8b 2d       	mov	r24, r11
    1b48:	81 50       	subi	r24, 0x01	; 1
    1b4a:	89 83       	std	Y+1, r24	; 0x01
    1b4c:	88 2e       	mov	r8, r24
    1b4e:	c3 01       	movw	r24, r6
    1b50:	b2 01       	movw	r22, r4
    1b52:	a7 01       	movw	r20, r14
    1b54:	96 01       	movw	r18, r12
    1b56:	0e 94 ae 18 	call	0x315c	; 0x315c <__udivmodsi4>
    1b5a:	46 2f       	mov	r20, r22
    1b5c:	20 2f       	mov	r18, r16
    1b5e:	6b 2d       	mov	r22, r11
    1b60:	c1 01       	movw	r24, r2
    1b62:	a8 de       	rcall	.-688    	; 0x18b4 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    1b64:	99 81       	ldd	r25, Y+1	; 0x01
    1b66:	92 30       	cpi	r25, 0x02	; 2
    1b68:	39 f4       	brne	.+14     	; 0x1b78 <_ZN17Adafruit_7segment10printFloatEdhh+0x204>
    1b6a:	ba 94       	dec	r11
    1b6c:	ba 94       	dec	r11
    1b6e:	b9 82       	std	Y+1, r11	; 0x01
    1b70:	4a 2d       	mov	r20, r10
    1b72:	68 2d       	mov	r22, r8
    1b74:	c1 01       	movw	r24, r2
    1b76:	81 de       	rcall	.-766    	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    1b78:	c3 01       	movw	r24, r6
    1b7a:	b2 01       	movw	r22, r4
    1b7c:	a7 01       	movw	r20, r14
    1b7e:	96 01       	movw	r18, r12
    1b80:	0e 94 ae 18 	call	0x315c	; 0x315c <__udivmodsi4>
    1b84:	29 01       	movw	r4, r18
    1b86:	3a 01       	movw	r6, r20
    1b88:	1f 5f       	subi	r17, 0xFF	; 255
    1b8a:	23 2b       	or	r18, r19
    1b8c:	24 2b       	or	r18, r20
    1b8e:	25 2b       	or	r18, r21
    1b90:	09 f4       	brne	.+2      	; 0x1b94 <_ZN17Adafruit_7segment10printFloatEdhh+0x220>
    1b92:	c0 cf       	rjmp	.-128    	; 0x1b14 <_ZN17Adafruit_7segment10printFloatEdhh+0x1a0>
    1b94:	ce cf       	rjmp	.-100    	; 0x1b32 <_ZN17Adafruit_7segment10printFloatEdhh+0x1be>
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	40 e0       	ldi	r20, 0x00	; 0
    1b9a:	64 e0       	ldi	r22, 0x04	; 4
    1b9c:	c1 01       	movw	r24, r2
    1b9e:	8a de       	rcall	.-748    	; 0x18b4 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    1ba0:	aa 85       	ldd	r26, Y+10	; 0x0a
    1ba2:	a1 11       	cpse	r26, r1
    1ba4:	07 c0       	rjmp	.+14     	; 0x1bb4 <_ZN17Adafruit_7segment10printFloatEdhh+0x240>
    1ba6:	b3 e0       	ldi	r27, 0x03	; 3
    1ba8:	b9 83       	std	Y+1, r27	; 0x01
    1baa:	11 c0       	rjmp	.+34     	; 0x1bce <_ZN17Adafruit_7segment10printFloatEdhh+0x25a>
    1bac:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bae:	88 23       	and	r24, r24
    1bb0:	51 f0       	breq	.+20     	; 0x1bc6 <_ZN17Adafruit_7segment10printFloatEdhh+0x252>
    1bb2:	02 c0       	rjmp	.+4      	; 0x1bb8 <_ZN17Adafruit_7segment10printFloatEdhh+0x244>
    1bb4:	93 e0       	ldi	r25, 0x03	; 3
    1bb6:	99 83       	std	Y+1, r25	; 0x01
    1bb8:	69 81       	ldd	r22, Y+1	; 0x01
    1bba:	40 e4       	ldi	r20, 0x40	; 64
    1bbc:	a6 2f       	mov	r26, r22
    1bbe:	a1 50       	subi	r26, 0x01	; 1
    1bc0:	a9 83       	std	Y+1, r26	; 0x01
    1bc2:	c1 01       	movw	r24, r2
    1bc4:	5a de       	rcall	.-844    	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    1bc6:	b9 81       	ldd	r27, Y+1	; 0x01
    1bc8:	bb 23       	and	r27, r27
    1bca:	0c f4       	brge	.+2      	; 0x1bce <_ZN17Adafruit_7segment10printFloatEdhh+0x25a>
    1bcc:	3e c0       	rjmp	.+124    	; 0x1c4a <_ZN17Adafruit_7segment10printFloatEdhh+0x2d6>
    1bce:	69 81       	ldd	r22, Y+1	; 0x01
    1bd0:	86 2f       	mov	r24, r22
    1bd2:	81 50       	subi	r24, 0x01	; 1
    1bd4:	89 83       	std	Y+1, r24	; 0x01
    1bd6:	40 e0       	ldi	r20, 0x00	; 0
    1bd8:	c1 01       	movw	r24, r2
    1bda:	4f de       	rcall	.-866    	; 0x187a <_ZN17Adafruit_7segment13writeDigitRawEhh>
    1bdc:	99 81       	ldd	r25, Y+1	; 0x01
    1bde:	99 23       	and	r25, r25
    1be0:	b4 f7       	brge	.-20     	; 0x1bce <_ZN17Adafruit_7segment10printFloatEdhh+0x25a>
    1be2:	33 c0       	rjmp	.+102    	; 0x1c4a <_ZN17Adafruit_7segment10printFloatEdhh+0x2d6>
    1be4:	20 e0       	ldi	r18, 0x00	; 0
    1be6:	30 e0       	ldi	r19, 0x00	; 0
    1be8:	40 e0       	ldi	r20, 0x00	; 0
    1bea:	5f e3       	ldi	r21, 0x3F	; 63
    1bec:	6d 81       	ldd	r22, Y+5	; 0x05
    1bee:	7e 81       	ldd	r23, Y+6	; 0x06
    1bf0:	8f 81       	ldd	r24, Y+7	; 0x07
    1bf2:	98 85       	ldd	r25, Y+8	; 0x08
    1bf4:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <__addsf3>
    1bf8:	0e 94 5e 17 	call	0x2ebc	; 0x2ebc <__fixunssfsi>
    1bfc:	2b 01       	movw	r4, r22
    1bfe:	3c 01       	movw	r6, r24
    1c00:	a9 81       	ldd	r26, Y+1	; 0x01
    1c02:	ea 2f       	mov	r30, r26
    1c04:	f0 e0       	ldi	r31, 0x00	; 0
    1c06:	0f 2e       	mov	r0, r31
    1c08:	c1 2c       	mov	r12, r1
    1c0a:	d1 2c       	mov	r13, r1
    1c0c:	f0 e8       	ldi	r31, 0x80	; 128
    1c0e:	ef 2e       	mov	r14, r31
    1c10:	ff e3       	ldi	r31, 0x3F	; 63
    1c12:	ff 2e       	mov	r15, r31
    1c14:	f0 2d       	mov	r31, r0
    1c16:	26 cf       	rjmp	.-436    	; 0x1a64 <_ZN17Adafruit_7segment10printFloatEdhh+0xf0>
    1c18:	1a 86       	std	Y+10, r1	; 0x0a
    1c1a:	b4 e0       	ldi	r27, 0x04	; 4
    1c1c:	b9 83       	std	Y+1, r27	; 0x01
    1c1e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c20:	a8 2e       	mov	r10, r24
    1c22:	b1 2c       	mov	r11, r1
    1c24:	1a 14       	cp	r1, r10
    1c26:	1b 04       	cpc	r1, r11
    1c28:	ec f6       	brge	.-70     	; 0x1be4 <_ZN17Adafruit_7segment10printFloatEdhh+0x270>
    1c2a:	00 e0       	ldi	r16, 0x00	; 0
    1c2c:	10 e0       	ldi	r17, 0x00	; 0
    1c2e:	0f 2e       	mov	r0, r31
    1c30:	c1 2c       	mov	r12, r1
    1c32:	d1 2c       	mov	r13, r1
    1c34:	f0 e8       	ldi	r31, 0x80	; 128
    1c36:	ef 2e       	mov	r14, r31
    1c38:	ff e3       	ldi	r31, 0x3F	; 63
    1c3a:	ff 2e       	mov	r15, r31
    1c3c:	f0 2d       	mov	r31, r0
    1c3e:	99 85       	ldd	r25, Y+9	; 0x09
    1c40:	49 2e       	mov	r4, r25
    1c42:	51 2c       	mov	r5, r1
    1c44:	61 2c       	mov	r6, r1
    1c46:	71 2c       	mov	r7, r1
    1c48:	d0 ce       	rjmp	.-608    	; 0x19ea <_ZN17Adafruit_7segment10printFloatEdhh+0x76>
    1c4a:	2b 96       	adiw	r28, 0x0b	; 11
    1c4c:	0f b6       	in	r0, 0x3f	; 63
    1c4e:	f8 94       	cli
    1c50:	de bf       	out	0x3e, r29	; 62
    1c52:	0f be       	out	0x3f, r0	; 63
    1c54:	cd bf       	out	0x3d, r28	; 61
    1c56:	df 91       	pop	r29
    1c58:	cf 91       	pop	r28
    1c5a:	1f 91       	pop	r17
    1c5c:	0f 91       	pop	r16
    1c5e:	ff 90       	pop	r15
    1c60:	ef 90       	pop	r14
    1c62:	df 90       	pop	r13
    1c64:	cf 90       	pop	r12
    1c66:	bf 90       	pop	r11
    1c68:	af 90       	pop	r10
    1c6a:	9f 90       	pop	r9
    1c6c:	8f 90       	pop	r8
    1c6e:	7f 90       	pop	r7
    1c70:	6f 90       	pop	r6
    1c72:	5f 90       	pop	r5
    1c74:	4f 90       	pop	r4
    1c76:	3f 90       	pop	r3
    1c78:	2f 90       	pop	r2
    1c7a:	08 95       	ret

00001c7c <_ZN17Adafruit_7segment11printNumberElh>:
    1c7c:	0f 93       	push	r16
    1c7e:	cf 93       	push	r28
    1c80:	df 93       	push	r29
    1c82:	ec 01       	movw	r28, r24
    1c84:	02 2f       	mov	r16, r18
    1c86:	cb 01       	movw	r24, r22
    1c88:	ba 01       	movw	r22, r20
    1c8a:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__floatsisf>
    1c8e:	ab 01       	movw	r20, r22
    1c90:	bc 01       	movw	r22, r24
    1c92:	20 e0       	ldi	r18, 0x00	; 0
    1c94:	ce 01       	movw	r24, r28
    1c96:	6e de       	rcall	.-804    	; 0x1974 <_ZN17Adafruit_7segment10printFloatEdhh>
    1c98:	df 91       	pop	r29
    1c9a:	cf 91       	pop	r28
    1c9c:	0f 91       	pop	r16
    1c9e:	08 95       	ret

00001ca0 <_ZN17Adafruit_7segment5printEmi>:
    1ca0:	21 15       	cp	r18, r1
    1ca2:	31 05       	cpc	r19, r1
    1ca4:	19 f4       	brne	.+6      	; 0x1cac <_ZN17Adafruit_7segment5printEmi+0xc>
    1ca6:	64 2f       	mov	r22, r20
    1ca8:	13 ce       	rjmp	.-986    	; 0x18d0 <_ZN17Adafruit_7segment5writeEh>
    1caa:	08 95       	ret
    1cac:	e7 cf       	rjmp	.-50     	; 0x1c7c <_ZN17Adafruit_7segment11printNumberElh>
    1cae:	08 95       	ret

00001cb0 <_ZN17Adafruit_7segment5printEji>:
    1cb0:	9a 01       	movw	r18, r20
    1cb2:	ab 01       	movw	r20, r22
    1cb4:	60 e0       	ldi	r22, 0x00	; 0
    1cb6:	70 e0       	ldi	r23, 0x00	; 0
    1cb8:	f3 cf       	rjmp	.-26     	; 0x1ca0 <_ZN17Adafruit_7segment5printEmi>
    1cba:	08 95       	ret

00001cbc <_ZN17Adafruit_7segment5printEii>:
{
	print((unsigned long) b, base);
}

void Adafruit_7segment::print(int n, int base)
{
    1cbc:	24 2f       	mov	r18, r20
	//printf("write%d: %d\n",d,numbertable[num] | (dot << 7));
}

void Adafruit_7segment::print(long n, int base)
{
	printNumber(n, base);
    1cbe:	ab 01       	movw	r20, r22
    1cc0:	77 0f       	add	r23, r23
    1cc2:	66 0b       	sbc	r22, r22
    1cc4:	77 0b       	sbc	r23, r23
    1cc6:	da cf       	rjmp	.-76     	; 0x1c7c <_ZN17Adafruit_7segment11printNumberElh>
    1cc8:	08 95       	ret

00001cca <main>:

#define F_CPU 16000000UL
#include <util/delay.h>

int main ()
{
    1cca:	cf 93       	push	r28
    1ccc:	df 93       	push	r29
    1cce:	cd b7       	in	r28, 0x3d	; 61
    1cd0:	de b7       	in	r29, 0x3e	; 62
    1cd2:	cd 56       	subi	r28, 0x6D	; 109
    1cd4:	d2 40       	sbci	r29, 0x02	; 2
    1cd6:	0f b6       	in	r0, 0x3f	; 63
    1cd8:	f8 94       	cli
    1cda:	de bf       	out	0x3e, r29	; 62
    1cdc:	0f be       	out	0x3f, r0	; 63
    1cde:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1ce0:	2f ef       	ldi	r18, 0xFF	; 255
    1ce2:	83 ed       	ldi	r24, 0xD3	; 211
    1ce4:	90 e3       	ldi	r25, 0x30	; 48
    1ce6:	21 50       	subi	r18, 0x01	; 1
    1ce8:	80 40       	sbci	r24, 0x00	; 0
    1cea:	90 40       	sbci	r25, 0x00	; 0
    1cec:	e1 f7       	brne	.-8      	; 0x1ce6 <main+0x1c>
    1cee:	00 c0       	rjmp	.+0      	; 0x1cf0 <main+0x26>
    1cf0:	00 00       	nop
#include "../memory/memory.hpp"
#include "../uart/uart_module.hpp"
#include "request.hpp"
#include "../timer/Clock.hpp"

class Communications
    1cf2:	ce 01       	movw	r24, r28
    1cf4:	04 96       	adiw	r24, 0x04	; 4
    1cf6:	0e 94 c8 01 	call	0x390	; 0x390 <_ZN12MessageQueueC1Ev>
    1cfa:	ce 01       	movw	r24, r28
    1cfc:	83 56       	subi	r24, 0x63	; 99
    1cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    1d00:	0e 94 1b 02 	call	0x436	; 0x436 <_ZN18FastTransferParserC1Ev>
    1d04:	ce 01       	movw	r24, r28
    1d06:	80 53       	subi	r24, 0x30	; 48
    1d08:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0a:	b2 d3       	rcall	.+1892   	; 0x2470 <_ZN6ClocksC1Ev>
  _delay_ms(1000);
  ControlBoxEngine box;
  box.initialize();
    1d0c:	ce 01       	movw	r24, r28
    1d0e:	01 96       	adiw	r24, 0x01	; 1
    1d10:	0e 94 a6 02 	call	0x54c	; 0x54c <_ZN16ControlBoxEngine10initializeEv>
  box.loop();
    1d14:	ce 01       	movw	r24, r28
    1d16:	01 96       	adiw	r24, 0x01	; 1
    1d18:	0e 94 be 02 	call	0x57c	; 0x57c <_ZN16ControlBoxEngine4loopEv>
  return 0;
    1d1c:	80 e0       	ldi	r24, 0x00	; 0
    1d1e:	90 e0       	ldi	r25, 0x00	; 0
    1d20:	c3 59       	subi	r28, 0x93	; 147
    1d22:	dd 4f       	sbci	r29, 0xFD	; 253
    1d24:	0f b6       	in	r0, 0x3f	; 63
    1d26:	f8 94       	cli
    1d28:	de bf       	out	0x3e, r29	; 62
    1d2a:	0f be       	out	0x3f, r0	; 63
    1d2c:	cd bf       	out	0x3d, r28	; 61
    1d2e:	df 91       	pop	r29
    1d30:	cf 91       	pop	r28
    1d32:	08 95       	ret

00001d34 <_ZN6Memory10initializeEv>:
void Memory::link (uint8_t i, uint8_t j)
{
  Variable * ptr = &variables[i];
  while (ptr->next)
    ptr = ptr->next;
  ptr->next = &variables[j];
    1d34:	e8 e5       	ldi	r30, 0x58	; 88
    1d36:	f4 e0       	ldi	r31, 0x04	; 4
    1d38:	88 e5       	ldi	r24, 0x58	; 88
    1d3a:	97 e0       	ldi	r25, 0x07	; 7
    1d3c:	11 82       	std	Z+1, r1	; 0x01
    1d3e:	10 82       	st	Z, r1
    1d40:	13 82       	std	Z+3, r1	; 0x03
    1d42:	12 82       	std	Z+2, r1	; 0x02
    1d44:	15 82       	std	Z+5, r1	; 0x05
    1d46:	14 82       	std	Z+4, r1	; 0x04
    1d48:	36 96       	adiw	r30, 0x06	; 6
    1d4a:	e8 17       	cp	r30, r24
    1d4c:	f9 07       	cpc	r31, r25
    1d4e:	b1 f7       	brne	.-20     	; 0x1d3c <_ZN6Memory10initializeEv+0x8>
    1d50:	08 95       	ret

00001d52 <_ZN6Memory5writeEhj>:
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	fc 01       	movw	r30, r24
    1d56:	ee 0f       	add	r30, r30
    1d58:	ff 1f       	adc	r31, r31
    1d5a:	e8 0f       	add	r30, r24
    1d5c:	f9 1f       	adc	r31, r25
    1d5e:	ee 0f       	add	r30, r30
    1d60:	ff 1f       	adc	r31, r31
    1d62:	e8 5a       	subi	r30, 0xA8	; 168
    1d64:	fb 4f       	sbci	r31, 0xFB	; 251
    1d66:	01 c0       	rjmp	.+2      	; 0x1d6a <_ZN6Memory5writeEhj+0x18>
    1d68:	fc 01       	movw	r30, r24
    1d6a:	84 81       	ldd	r24, Z+4	; 0x04
    1d6c:	95 81       	ldd	r25, Z+5	; 0x05
    1d6e:	00 97       	sbiw	r24, 0x00	; 0
    1d70:	d9 f7       	brne	.-10     	; 0x1d68 <_ZN6Memory5writeEhj+0x16>
    1d72:	30 97       	sbiw	r30, 0x00	; 0
    1d74:	39 f0       	breq	.+14     	; 0x1d84 <_ZN6Memory5writeEhj+0x32>
    1d76:	71 83       	std	Z+1, r23	; 0x01
    1d78:	60 83       	st	Z, r22
    1d7a:	02 80       	ldd	r0, Z+2	; 0x02
    1d7c:	f3 81       	ldd	r31, Z+3	; 0x03
    1d7e:	e0 2d       	mov	r30, r0
    1d80:	30 97       	sbiw	r30, 0x00	; 0
    1d82:	c9 f7       	brne	.-14     	; 0x1d76 <_ZN6Memory5writeEhj+0x24>
    1d84:	08 95       	ret

00001d86 <_ZN6Memory4readEh>:
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	fc 01       	movw	r30, r24
    1d8a:	ee 0f       	add	r30, r30
    1d8c:	ff 1f       	adc	r31, r31
    1d8e:	e8 0f       	add	r30, r24
    1d90:	f9 1f       	adc	r31, r25
    1d92:	ee 0f       	add	r30, r30
    1d94:	ff 1f       	adc	r31, r31
    1d96:	e8 5a       	subi	r30, 0xA8	; 168
    1d98:	fb 4f       	sbci	r31, 0xFB	; 251
    1d9a:	80 81       	ld	r24, Z
    1d9c:	91 81       	ldd	r25, Z+1	; 0x01
    1d9e:	08 95       	ret

00001da0 <_ZN6Memory13valid_addressEh>:
}

bool Memory::valid_address (uint8_t address)
{
  return address < Memory::SIZE;
    1da0:	80 95       	com	r24
}
    1da2:	88 1f       	adc	r24, r24
    1da4:	88 27       	eor	r24, r24
    1da6:	88 1f       	adc	r24, r24
    1da8:	08 95       	ret

00001daa <_ZN11TouchScreen14assign_objectsEv>:
	if(!send_message(msg)) {
		printf("Failed Sending Screen Message\n");
	}
}
void TouchScreen::update_object (uint16_t object,uint16_t _d) const
{
    1daa:	fc 01       	movw	r30, r24
    1dac:	36 96       	adiw	r30, 0x06	; 6
    1dae:	9c 01       	movw	r18, r24
    1db0:	2a 5f       	subi	r18, 0xFA	; 250
    1db2:	3e 4f       	sbci	r19, 0xFE	; 254
    1db4:	11 92       	st	Z+, r1
    1db6:	11 92       	st	Z+, r1
    1db8:	e2 17       	cp	r30, r18
    1dba:	f3 07       	cpc	r31, r19
    1dbc:	d9 f7       	brne	.-10     	; 0x1db4 <_ZN11TouchScreen14assign_objectsEv+0xa>
    1dbe:	2f e0       	ldi	r18, 0x0F	; 15
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	fc 01       	movw	r30, r24
    1dc4:	31 87       	std	Z+9, r19	; 0x09
    1dc6:	20 87       	std	Z+8, r18	; 0x08
    1dc8:	e4 ef       	ldi	r30, 0xF4	; 244
    1dca:	f7 e0       	ldi	r31, 0x07	; 7
    1dcc:	8f e0       	ldi	r24, 0x0F	; 15
    1dce:	80 83       	st	Z, r24
    1dd0:	11 82       	std	Z+1, r1	; 0x01
    1dd2:	13 82       	std	Z+3, r1	; 0x03
    1dd4:	12 82       	std	Z+2, r1	; 0x02
    1dd6:	e4 ea       	ldi	r30, 0xA4	; 164
    1dd8:	f7 e0       	ldi	r31, 0x07	; 7
    1dda:	80 83       	st	Z, r24
    1ddc:	21 e0       	ldi	r18, 0x01	; 1
    1dde:	21 83       	std	Z+1, r18	; 0x01
    1de0:	13 82       	std	Z+3, r1	; 0x03
    1de2:	12 82       	std	Z+2, r1	; 0x02
    1de4:	84 83       	std	Z+4, r24	; 0x04
    1de6:	62 e0       	ldi	r22, 0x02	; 2
    1de8:	65 83       	std	Z+5, r22	; 0x05
    1dea:	17 82       	std	Z+7, r1	; 0x07
    1dec:	16 82       	std	Z+6, r1	; 0x06
    1dee:	80 87       	std	Z+8, r24	; 0x08
    1df0:	53 e0       	ldi	r21, 0x03	; 3
    1df2:	51 87       	std	Z+9, r21	; 0x09
    1df4:	13 86       	std	Z+11, r1	; 0x0b
    1df6:	12 86       	std	Z+10, r1	; 0x0a
    1df8:	84 87       	std	Z+12, r24	; 0x0c
    1dfa:	44 e0       	ldi	r20, 0x04	; 4
    1dfc:	45 87       	std	Z+13, r20	; 0x0d
    1dfe:	17 86       	std	Z+15, r1	; 0x0f
    1e00:	16 86       	std	Z+14, r1	; 0x0e
    1e02:	80 8b       	std	Z+16, r24	; 0x10
    1e04:	98 e0       	ldi	r25, 0x08	; 8
    1e06:	91 8b       	std	Z+17, r25	; 0x11
    1e08:	13 8a       	std	Z+19, r1	; 0x13
    1e0a:	12 8a       	std	Z+18, r1	; 0x12
    1e0c:	84 8b       	std	Z+20, r24	; 0x14
    1e0e:	17 8a       	std	Z+23, r1	; 0x17
    1e10:	16 8a       	std	Z+22, r1	; 0x16
    1e12:	80 8f       	std	Z+24, r24	; 0x18
    1e14:	13 8e       	std	Z+27, r1	; 0x1b
    1e16:	12 8e       	std	Z+26, r1	; 0x1a
    1e18:	84 8f       	std	Z+28, r24	; 0x1c
    1e1a:	17 8e       	std	Z+31, r1	; 0x1f
    1e1c:	16 8e       	std	Z+30, r1	; 0x1e
    1e1e:	80 a3       	std	Z+32, r24	; 0x20
    1e20:	13 a2       	std	Z+35, r1	; 0x23
    1e22:	12 a2       	std	Z+34, r1	; 0x22
    1e24:	84 a3       	std	Z+36, r24	; 0x24
    1e26:	9a e0       	ldi	r25, 0x0A	; 10
    1e28:	95 a3       	std	Z+37, r25	; 0x25
    1e2a:	17 a2       	std	Z+39, r1	; 0x27
    1e2c:	16 a2       	std	Z+38, r1	; 0x26
    1e2e:	80 a7       	std	Z+40, r24	; 0x28
    1e30:	9b e0       	ldi	r25, 0x0B	; 11
    1e32:	91 a7       	std	Z+41, r25	; 0x29
    1e34:	13 a6       	std	Z+43, r1	; 0x2b
    1e36:	12 a6       	std	Z+42, r1	; 0x2a
    1e38:	84 a7       	std	Z+44, r24	; 0x2c
    1e3a:	3c e0       	ldi	r19, 0x0C	; 12
    1e3c:	35 a7       	std	Z+45, r19	; 0x2d
    1e3e:	17 a6       	std	Z+47, r1	; 0x2f
    1e40:	16 a6       	std	Z+46, r1	; 0x2e
    1e42:	80 ab       	std	Z+48, r24	; 0x30
    1e44:	3d e0       	ldi	r19, 0x0D	; 13
    1e46:	31 ab       	std	Z+49, r19	; 0x31
    1e48:	13 aa       	std	Z+51, r1	; 0x33
    1e4a:	12 aa       	std	Z+50, r1	; 0x32
    1e4c:	84 ab       	std	Z+52, r24	; 0x34
    1e4e:	3e e0       	ldi	r19, 0x0E	; 14
    1e50:	35 ab       	std	Z+53, r19	; 0x35
    1e52:	17 aa       	std	Z+55, r1	; 0x37
    1e54:	16 aa       	std	Z+54, r1	; 0x36
    1e56:	80 af       	std	Z+56, r24	; 0x38
    1e58:	81 af       	std	Z+57, r24	; 0x39
    1e5a:	13 ae       	std	Z+59, r1	; 0x3b
    1e5c:	12 ae       	std	Z+58, r1	; 0x3a
    1e5e:	84 af       	std	Z+60, r24	; 0x3c
    1e60:	70 e1       	ldi	r23, 0x10	; 16
    1e62:	75 af       	std	Z+61, r23	; 0x3d
    1e64:	17 ae       	std	Z+63, r1	; 0x3f
    1e66:	16 ae       	std	Z+62, r1	; 0x3e
    1e68:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <Form1Objects+0x40>
    1e6c:	71 e1       	ldi	r23, 0x11	; 17
    1e6e:	70 93 e5 07 	sts	0x07E5, r23	; 0x8007e5 <Form1Objects+0x41>
    1e72:	10 92 e7 07 	sts	0x07E7, r1	; 0x8007e7 <Form1Objects+0x43>
    1e76:	10 92 e6 07 	sts	0x07E6, r1	; 0x8007e6 <Form1Objects+0x42>
    1e7a:	80 93 e8 07 	sts	0x07E8, r24	; 0x8007e8 <Form1Objects+0x44>
    1e7e:	72 e1       	ldi	r23, 0x12	; 18
    1e80:	70 93 e9 07 	sts	0x07E9, r23	; 0x8007e9 <Form1Objects+0x45>
    1e84:	10 92 eb 07 	sts	0x07EB, r1	; 0x8007eb <Form1Objects+0x47>
    1e88:	10 92 ea 07 	sts	0x07EA, r1	; 0x8007ea <Form1Objects+0x46>
    1e8c:	80 93 ec 07 	sts	0x07EC, r24	; 0x8007ec <Form1Objects+0x48>
    1e90:	73 e1       	ldi	r23, 0x13	; 19
    1e92:	70 93 ed 07 	sts	0x07ED, r23	; 0x8007ed <Form1Objects+0x49>
    1e96:	10 92 ef 07 	sts	0x07EF, r1	; 0x8007ef <Form1Objects+0x4b>
    1e9a:	10 92 ee 07 	sts	0x07EE, r1	; 0x8007ee <Form1Objects+0x4a>
    1e9e:	80 93 f0 07 	sts	0x07F0, r24	; 0x8007f0 <Form1Objects+0x4c>
    1ea2:	74 e1       	ldi	r23, 0x14	; 20
    1ea4:	70 93 f1 07 	sts	0x07F1, r23	; 0x8007f1 <Form1Objects+0x4d>
    1ea8:	10 92 f3 07 	sts	0x07F3, r1	; 0x8007f3 <Form1Objects+0x4f>
    1eac:	10 92 f2 07 	sts	0x07F2, r1	; 0x8007f2 <Form1Objects+0x4e>
    1eb0:	ac e8       	ldi	r26, 0x8C	; 140
    1eb2:	b7 e0       	ldi	r27, 0x07	; 7
    1eb4:	9c 93       	st	X, r25
    1eb6:	11 96       	adiw	r26, 0x01	; 1
    1eb8:	1c 92       	st	X, r1
    1eba:	11 97       	sbiw	r26, 0x01	; 1
    1ebc:	13 96       	adiw	r26, 0x03	; 3
    1ebe:	1c 92       	st	X, r1
    1ec0:	1e 92       	st	-X, r1
    1ec2:	12 97       	sbiw	r26, 0x02	; 2
    1ec4:	14 96       	adiw	r26, 0x04	; 4
    1ec6:	9c 93       	st	X, r25
    1ec8:	14 97       	sbiw	r26, 0x04	; 4
    1eca:	15 96       	adiw	r26, 0x05	; 5
    1ecc:	2c 93       	st	X, r18
    1ece:	15 97       	sbiw	r26, 0x05	; 5
    1ed0:	17 96       	adiw	r26, 0x07	; 7
    1ed2:	1c 92       	st	X, r1
    1ed4:	1e 92       	st	-X, r1
    1ed6:	16 97       	sbiw	r26, 0x06	; 6
    1ed8:	18 96       	adiw	r26, 0x08	; 8
    1eda:	9c 93       	st	X, r25
    1edc:	18 97       	sbiw	r26, 0x08	; 8
    1ede:	19 96       	adiw	r26, 0x09	; 9
    1ee0:	6c 93       	st	X, r22
    1ee2:	19 97       	sbiw	r26, 0x09	; 9
    1ee4:	1b 96       	adiw	r26, 0x0b	; 11
    1ee6:	1c 92       	st	X, r1
    1ee8:	1e 92       	st	-X, r1
    1eea:	1a 97       	sbiw	r26, 0x0a	; 10
    1eec:	1c 96       	adiw	r26, 0x0c	; 12
    1eee:	9c 93       	st	X, r25
    1ef0:	1c 97       	sbiw	r26, 0x0c	; 12
    1ef2:	1d 96       	adiw	r26, 0x0d	; 13
    1ef4:	5c 93       	st	X, r21
    1ef6:	1d 97       	sbiw	r26, 0x0d	; 13
    1ef8:	1f 96       	adiw	r26, 0x0f	; 15
    1efa:	1c 92       	st	X, r1
    1efc:	1e 92       	st	-X, r1
    1efe:	1e 97       	sbiw	r26, 0x0e	; 14
    1f00:	50 96       	adiw	r26, 0x10	; 16
    1f02:	9c 93       	st	X, r25
    1f04:	50 97       	sbiw	r26, 0x10	; 16
    1f06:	51 96       	adiw	r26, 0x11	; 17
    1f08:	4c 93       	st	X, r20
    1f0a:	51 97       	sbiw	r26, 0x11	; 17
    1f0c:	53 96       	adiw	r26, 0x13	; 19
    1f0e:	1c 92       	st	X, r1
    1f10:	1e 92       	st	-X, r1
    1f12:	52 97       	sbiw	r26, 0x12	; 18
    1f14:	54 96       	adiw	r26, 0x14	; 20
    1f16:	9c 93       	st	X, r25
    1f18:	54 97       	sbiw	r26, 0x14	; 20
    1f1a:	95 e0       	ldi	r25, 0x05	; 5
    1f1c:	55 96       	adiw	r26, 0x15	; 21
    1f1e:	9c 93       	st	X, r25
    1f20:	55 97       	sbiw	r26, 0x15	; 21
    1f22:	57 96       	adiw	r26, 0x17	; 23
    1f24:	1c 92       	st	X, r1
    1f26:	1e 92       	st	-X, r1
    1f28:	56 97       	sbiw	r26, 0x16	; 22
    1f2a:	a4 e6       	ldi	r26, 0x64	; 100
    1f2c:	b7 e0       	ldi	r27, 0x07	; 7
    1f2e:	8c 93       	st	X, r24
    1f30:	99 e1       	ldi	r25, 0x19	; 25
    1f32:	11 96       	adiw	r26, 0x01	; 1
    1f34:	9c 93       	st	X, r25
    1f36:	11 97       	sbiw	r26, 0x01	; 1
    1f38:	13 96       	adiw	r26, 0x03	; 3
    1f3a:	1c 92       	st	X, r1
    1f3c:	1e 92       	st	-X, r1
    1f3e:	12 97       	sbiw	r26, 0x02	; 2
    1f40:	14 96       	adiw	r26, 0x04	; 4
    1f42:	8c 93       	st	X, r24
    1f44:	14 97       	sbiw	r26, 0x04	; 4
    1f46:	9a e1       	ldi	r25, 0x1A	; 26
    1f48:	15 96       	adiw	r26, 0x05	; 5
    1f4a:	9c 93       	st	X, r25
    1f4c:	15 97       	sbiw	r26, 0x05	; 5
    1f4e:	17 96       	adiw	r26, 0x07	; 7
    1f50:	1c 92       	st	X, r1
    1f52:	1e 92       	st	-X, r1
    1f54:	16 97       	sbiw	r26, 0x06	; 6
    1f56:	18 96       	adiw	r26, 0x08	; 8
    1f58:	8c 93       	st	X, r24
    1f5a:	18 97       	sbiw	r26, 0x08	; 8
    1f5c:	8b e1       	ldi	r24, 0x1B	; 27
    1f5e:	19 96       	adiw	r26, 0x09	; 9
    1f60:	8c 93       	st	X, r24
    1f62:	19 97       	sbiw	r26, 0x09	; 9
    1f64:	1b 96       	adiw	r26, 0x0b	; 11
    1f66:	1c 92       	st	X, r1
    1f68:	1e 92       	st	-X, r1
    1f6a:	1a 97       	sbiw	r26, 0x0a	; 10
    1f6c:	1c 96       	adiw	r26, 0x0c	; 12
    1f6e:	3c 93       	st	X, r19
    1f70:	1c 97       	sbiw	r26, 0x0c	; 12
    1f72:	1d 96       	adiw	r26, 0x0d	; 13
    1f74:	1c 92       	st	X, r1
    1f76:	1d 97       	sbiw	r26, 0x0d	; 13
    1f78:	1f 96       	adiw	r26, 0x0f	; 15
    1f7a:	1c 92       	st	X, r1
    1f7c:	1e 92       	st	-X, r1
    1f7e:	1e 97       	sbiw	r26, 0x0e	; 14
    1f80:	50 96       	adiw	r26, 0x10	; 16
    1f82:	3c 93       	st	X, r19
    1f84:	50 97       	sbiw	r26, 0x10	; 16
    1f86:	51 96       	adiw	r26, 0x11	; 17
    1f88:	2c 93       	st	X, r18
    1f8a:	51 97       	sbiw	r26, 0x11	; 17
    1f8c:	53 96       	adiw	r26, 0x13	; 19
    1f8e:	1c 92       	st	X, r1
    1f90:	1e 92       	st	-X, r1
    1f92:	52 97       	sbiw	r26, 0x12	; 18
    1f94:	85 e1       	ldi	r24, 0x15	; 21
    1f96:	85 8b       	std	Z+21, r24	; 0x15
    1f98:	86 e1       	ldi	r24, 0x16	; 22
    1f9a:	81 8f       	std	Z+25, r24	; 0x19
    1f9c:	87 e1       	ldi	r24, 0x17	; 23
    1f9e:	85 8f       	std	Z+29, r24	; 0x1d
    1fa0:	88 e1       	ldi	r24, 0x18	; 24
    1fa2:	81 a3       	std	Z+33, r24	; 0x21
    1fa4:	08 95       	ret

00001fa6 <_ZN11TouchScreen10initializeEP6Memoryj>:
    1fa6:	cf 93       	push	r28
    1fa8:	df 93       	push	r29
    1faa:	ea 01       	movw	r28, r20
    1fac:	fc 01       	movw	r30, r24
    1fae:	11 82       	std	Z+1, r1	; 0x01
    1fb0:	10 82       	st	Z, r1
    1fb2:	73 83       	std	Z+3, r23	; 0x03
    1fb4:	62 83       	std	Z+2, r22	; 0x02
    1fb6:	55 83       	std	Z+5, r21	; 0x05
    1fb8:	44 83       	std	Z+4, r20	; 0x04
    1fba:	f7 de       	rcall	.-530    	; 0x1daa <_ZN11TouchScreen14assign_objectsEv>
    1fbc:	c1 30       	cpi	r28, 0x01	; 1
    1fbe:	d1 05       	cpc	r29, r1
    1fc0:	49 f0       	breq	.+18     	; 0x1fd4 <_ZN11TouchScreen10initializeEP6Memoryj+0x2e>
    1fc2:	20 f0       	brcs	.+8      	; 0x1fcc <_ZN11TouchScreen10initializeEP6Memoryj+0x26>
    1fc4:	c2 30       	cpi	r28, 0x02	; 2
    1fc6:	d1 05       	cpc	r29, r1
    1fc8:	49 f0       	breq	.+18     	; 0x1fdc <_ZN11TouchScreen10initializeEP6Memoryj+0x36>
    1fca:	0c c0       	rjmp	.+24     	; 0x1fe4 <_ZN11TouchScreen10initializeEP6Memoryj+0x3e>
    1fcc:	87 e6       	ldi	r24, 0x67	; 103
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	3c d4       	rcall	.+2168   	; 0x284a <_Z16uart0_initializej>
    1fd2:	0b c0       	rjmp	.+22     	; 0x1fea <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1fd4:	87 e6       	ldi	r24, 0x67	; 103
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	dd d4       	rcall	.+2490   	; 0x2994 <_Z16uart1_initializej>
    1fda:	07 c0       	rjmp	.+14     	; 0x1fea <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1fdc:	87 e6       	ldi	r24, 0x67	; 103
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	7e d5       	rcall	.+2812   	; 0x2ade <_Z16uart2_initializej>
    1fe2:	03 c0       	rjmp	.+6      	; 0x1fea <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1fe4:	87 e6       	ldi	r24, 0x67	; 103
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	3c d6       	rcall	.+3192   	; 0x2c62 <_Z16uart3_initializej>
    1fea:	df 93       	push	r29
    1fec:	cf 93       	push	r28
    1fee:	8b ec       	ldi	r24, 0xCB	; 203
    1ff0:	92 e0       	ldi	r25, 0x02	; 2
    1ff2:	9f 93       	push	r25
    1ff4:	8f 93       	push	r24
    1ff6:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
    1ffa:	0f 90       	pop	r0
    1ffc:	0f 90       	pop	r0
    1ffe:	0f 90       	pop	r0
    2000:	0f 90       	pop	r0
    2002:	df 91       	pop	r29
    2004:	cf 91       	pop	r28
    2006:	08 95       	ret

00002008 <_ZNK11TouchScreen17UpdateObject_dataEh>:
    2008:	cf 93       	push	r28
    200a:	df 93       	push	r29
    200c:	61 11       	cpse	r22, r1
    200e:	07 c0       	rjmp	.+14     	; 0x201e <_ZNK11TouchScreen17UpdateObject_dataEh+0x16>
    2010:	81 e0       	ldi	r24, 0x01	; 1
    2012:	b9 de       	rcall	.-654    	; 0x1d86 <_ZN6Memory4readEh>
    2014:	90 93 f7 07 	sts	0x07F7, r25	; 0x8007f7 <Form0Objects+0x3>
    2018:	80 93 f6 07 	sts	0x07F6, r24	; 0x8007f6 <Form0Objects+0x2>
    201c:	5f c0       	rjmp	.+190    	; 0x20dc <_ZNK11TouchScreen17UpdateObject_dataEh+0xd4>
    201e:	61 30       	cpi	r22, 0x01	; 1
    2020:	09 f4       	brne	.+2      	; 0x2024 <_ZNK11TouchScreen17UpdateObject_dataEh+0x1c>
    2022:	5c c0       	rjmp	.+184    	; 0x20dc <_ZNK11TouchScreen17UpdateObject_dataEh+0xd4>
    2024:	62 30       	cpi	r22, 0x02	; 2
    2026:	d9 f4       	brne	.+54     	; 0x205e <_ZNK11TouchScreen17UpdateObject_dataEh+0x56>
    2028:	80 e2       	ldi	r24, 0x20	; 32
    202a:	ad de       	rcall	.-678    	; 0x1d86 <_ZN6Memory4readEh>
    202c:	cc e8       	ldi	r28, 0x8C	; 140
    202e:	d7 e0       	ldi	r29, 0x07	; 7
    2030:	9b 83       	std	Y+3, r25	; 0x03
    2032:	8a 83       	std	Y+2, r24	; 0x02
    2034:	81 e2       	ldi	r24, 0x21	; 33
    2036:	a7 de       	rcall	.-690    	; 0x1d86 <_ZN6Memory4readEh>
    2038:	9f 83       	std	Y+7, r25	; 0x07
    203a:	8e 83       	std	Y+6, r24	; 0x06
    203c:	84 e2       	ldi	r24, 0x24	; 36
    203e:	a3 de       	rcall	.-698    	; 0x1d86 <_ZN6Memory4readEh>
    2040:	9b 87       	std	Y+11, r25	; 0x0b
    2042:	8a 87       	std	Y+10, r24	; 0x0a
    2044:	82 e2       	ldi	r24, 0x22	; 34
    2046:	9f de       	rcall	.-706    	; 0x1d86 <_ZN6Memory4readEh>
    2048:	9f 87       	std	Y+15, r25	; 0x0f
    204a:	8e 87       	std	Y+14, r24	; 0x0e
    204c:	83 e2       	ldi	r24, 0x23	; 35
    204e:	9b de       	rcall	.-714    	; 0x1d86 <_ZN6Memory4readEh>
    2050:	9b 8b       	std	Y+19, r25	; 0x13
    2052:	8a 8b       	std	Y+18, r24	; 0x12
    2054:	85 e2       	ldi	r24, 0x25	; 37
    2056:	97 de       	rcall	.-722    	; 0x1d86 <_ZN6Memory4readEh>
    2058:	9f 8b       	std	Y+23, r25	; 0x17
    205a:	8e 8b       	std	Y+22, r24	; 0x16
    205c:	3f c0       	rjmp	.+126    	; 0x20dc <_ZNK11TouchScreen17UpdateObject_dataEh+0xd4>
    205e:	63 30       	cpi	r22, 0x03	; 3
    2060:	09 f0       	breq	.+2      	; 0x2064 <_ZNK11TouchScreen17UpdateObject_dataEh+0x5c>
    2062:	3c c0       	rjmp	.+120    	; 0x20dc <_ZNK11TouchScreen17UpdateObject_dataEh+0xd4>
    2064:	8a e0       	ldi	r24, 0x0A	; 10
    2066:	8f de       	rcall	.-738    	; 0x1d86 <_ZN6Memory4readEh>
    2068:	c4 e6       	ldi	r28, 0x64	; 100
    206a:	d7 e0       	ldi	r29, 0x07	; 7
    206c:	9c 01       	movw	r18, r24
    206e:	ad ec       	ldi	r26, 0xCD	; 205
    2070:	bc ec       	ldi	r27, 0xCC	; 204
    2072:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2076:	96 95       	lsr	r25
    2078:	87 95       	ror	r24
    207a:	96 95       	lsr	r25
    207c:	87 95       	ror	r24
    207e:	96 95       	lsr	r25
    2080:	87 95       	ror	r24
    2082:	9b 83       	std	Y+3, r25	; 0x03
    2084:	8a 83       	std	Y+2, r24	; 0x02
    2086:	8b e0       	ldi	r24, 0x0B	; 11
    2088:	7e de       	rcall	.-772    	; 0x1d86 <_ZN6Memory4readEh>
    208a:	9c 01       	movw	r18, r24
    208c:	ad ec       	ldi	r26, 0xCD	; 205
    208e:	bc ec       	ldi	r27, 0xCC	; 204
    2090:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__umulhisi3>
    2094:	96 95       	lsr	r25
    2096:	87 95       	ror	r24
    2098:	96 95       	lsr	r25
    209a:	87 95       	ror	r24
    209c:	96 95       	lsr	r25
    209e:	87 95       	ror	r24
    20a0:	9f 83       	std	Y+7, r25	; 0x07
    20a2:	8e 83       	std	Y+6, r24	; 0x06
    20a4:	8c e0       	ldi	r24, 0x0C	; 12
    20a6:	6f de       	rcall	.-802    	; 0x1d86 <_ZN6Memory4readEh>
    20a8:	9b 87       	std	Y+11, r25	; 0x0b
    20aa:	8a 87       	std	Y+10, r24	; 0x0a
    20ac:	81 e0       	ldi	r24, 0x01	; 1
    20ae:	6b de       	rcall	.-810    	; 0x1d86 <_ZN6Memory4readEh>
    20b0:	21 e0       	ldi	r18, 0x01	; 1
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	89 2b       	or	r24, r25
    20b6:	11 f4       	brne	.+4      	; 0x20bc <_ZNK11TouchScreen17UpdateObject_dataEh+0xb4>
    20b8:	20 e0       	ldi	r18, 0x00	; 0
    20ba:	30 e0       	ldi	r19, 0x00	; 0
    20bc:	30 93 73 07 	sts	0x0773, r19	; 0x800773 <Form3Objects+0xf>
    20c0:	20 93 72 07 	sts	0x0772, r18	; 0x800772 <Form3Objects+0xe>
    20c4:	88 e0       	ldi	r24, 0x08	; 8
    20c6:	5f de       	rcall	.-834    	; 0x1d86 <_ZN6Memory4readEh>
    20c8:	21 e0       	ldi	r18, 0x01	; 1
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	89 2b       	or	r24, r25
    20ce:	11 f4       	brne	.+4      	; 0x20d4 <_ZNK11TouchScreen17UpdateObject_dataEh+0xcc>
    20d0:	20 e0       	ldi	r18, 0x00	; 0
    20d2:	30 e0       	ldi	r19, 0x00	; 0
    20d4:	30 93 77 07 	sts	0x0777, r19	; 0x800777 <Form3Objects+0x13>
    20d8:	20 93 76 07 	sts	0x0776, r18	; 0x800776 <Form3Objects+0x12>
    20dc:	df 91       	pop	r29
    20de:	cf 91       	pop	r28
    20e0:	08 95       	ret

000020e2 <_ZNK11TouchScreen9send_byteEh>:
/*-------------------------- Screen Communications ---------------------------*/

void TouchScreen::send_byte (uint8_t value) const
{

	switch (uart_module)
    20e2:	fc 01       	movw	r30, r24
    20e4:	84 81       	ldd	r24, Z+4	; 0x04
    20e6:	95 81       	ldd	r25, Z+5	; 0x05
    20e8:	81 30       	cpi	r24, 0x01	; 1
    20ea:	91 05       	cpc	r25, r1
    20ec:	39 f0       	breq	.+14     	; 0x20fc <_ZNK11TouchScreen9send_byteEh+0x1a>
    20ee:	18 f0       	brcs	.+6      	; 0x20f6 <_ZNK11TouchScreen9send_byteEh+0x14>
    20f0:	02 97       	sbiw	r24, 0x02	; 2
    20f2:	39 f0       	breq	.+14     	; 0x2102 <_ZNK11TouchScreen9send_byteEh+0x20>
    20f4:	09 c0       	rjmp	.+18     	; 0x2108 <_ZNK11TouchScreen9send_byteEh+0x26>
	{
	case UART_0:
		uart0_send_byte(value);
    20f6:	86 2f       	mov	r24, r22
    20f8:	da c3       	rjmp	.+1972   	; 0x28ae <_Z15uart0_send_byteh>
when UART_1:
    20fa:	08 95       	ret
		uart1_send_byte(value);
    20fc:	86 2f       	mov	r24, r22
    20fe:	7b c4       	rjmp	.+2294   	; 0x29f6 <_Z15uart1_send_byteh>
when UART_2:
		uart2_send_byte(value);
    2100:	08 95       	ret
    2102:	86 2f       	mov	r24, r22
otherwise: {
    2104:	27 c5       	rjmp	.+2638   	; 0x2b54 <_Z15uart2_send_byteh>
			uart3_send_byte(value);
    2106:	08 95       	ret
    2108:	86 2f       	mov	r24, r22
    210a:	f2 c5       	rjmp	.+3044   	; 0x2cf0 <_Z15uart3_send_byteh>
    210c:	08 95       	ret

0000210e <_ZNK11TouchScreen9read_byteEv>:
}


uint8_t TouchScreen::read_byte () const
{
	switch (uart_module)
    210e:	fc 01       	movw	r30, r24
    2110:	84 81       	ldd	r24, Z+4	; 0x04
    2112:	95 81       	ldd	r25, Z+5	; 0x05
    2114:	81 30       	cpi	r24, 0x01	; 1
    2116:	91 05       	cpc	r25, r1
    2118:	49 f0       	breq	.+18     	; 0x212c <_ZNK11TouchScreen9read_byteEv+0x1e>
    211a:	30 f0       	brcs	.+12     	; 0x2128 <_ZNK11TouchScreen9read_byteEv+0x1a>
    211c:	82 30       	cpi	r24, 0x02	; 2
    211e:	91 05       	cpc	r25, r1
    2120:	39 f0       	breq	.+14     	; 0x2130 <_ZNK11TouchScreen9read_byteEv+0x22>
    2122:	03 97       	sbiw	r24, 0x03	; 3
    2124:	39 f0       	breq	.+14     	; 0x2134 <_ZNK11TouchScreen9read_byteEv+0x26>
    2126:	08 c0       	rjmp	.+16     	; 0x2138 <_ZNK11TouchScreen9read_byteEv+0x2a>
	{
	case UART_0:
		return uart0_read_byte();
    2128:	a4 c3       	rjmp	.+1864   	; 0x2872 <_Z15uart0_read_bytev>
    212a:	08 95       	ret
	case UART_1:
		return uart1_read_byte();
    212c:	47 c4       	rjmp	.+2190   	; 0x29bc <_Z15uart1_read_bytev>
    212e:	08 95       	ret
	case UART_2:
		return uart2_read_byte();
    2130:	f3 c4       	rjmp	.+2534   	; 0x2b18 <_Z15uart2_read_bytev>
    2132:	08 95       	ret
	case UART_3:
		return uart3_read_byte();
    2134:	b6 c5       	rjmp	.+2924   	; 0x2ca2 <_Z15uart3_read_bytev>
    2136:	08 95       	ret
    2138:	80 e0       	ldi	r24, 0x00	; 0
	}
	return 0;
    213a:	08 95       	ret

0000213c <_ZNK11TouchScreen12send_messageERK20ScreenRequestMessage>:
}
    213c:	0f 93       	push	r16
		return success;
	}
	return false;
}
bool TouchScreen::send_message (const ScreenRequestMessage & msg) const
{
    213e:	1f 93       	push	r17
    2140:	cf 93       	push	r28
    2142:	df 93       	push	r29
    2144:	8c 01       	movw	r16, r24
    2146:	eb 01       	movw	r28, r22
	static bool good_screen_coms = true;
	const int MAX_ATTEMPTS = 10;
	if (good_screen_coms)
	{
		printf("requesting!\n");
    2148:	82 ee       	ldi	r24, 0xE2	; 226
    214a:	92 e0       	ldi	r25, 0x02	; 2
    214c:	0e 94 4f 19 	call	0x329e	; 0x329e <puts>
		send_byte(msg.command);
    2150:	68 81       	ld	r22, Y
    2152:	c8 01       	movw	r24, r16
    2154:	c6 df       	rcall	.-116    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
		send_byte(msg.object_type);
    2156:	69 81       	ldd	r22, Y+1	; 0x01
    2158:	c8 01       	movw	r24, r16
    215a:	c3 df       	rcall	.-122    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
		send_byte(msg.object_index);
    215c:	6a 81       	ldd	r22, Y+2	; 0x02
    215e:	c8 01       	movw	r24, r16
    2160:	c0 df       	rcall	.-128    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
		send_byte(msg.checksum);
    2162:	6b 81       	ldd	r22, Y+3	; 0x03
    2164:	c8 01       	movw	r24, r16
    2166:	bd df       	rcall	.-134    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
    2168:	80 e0       	ldi	r24, 0x00	; 0
	}
	return false;
}
    216a:	df 91       	pop	r29
    216c:	cf 91       	pop	r28
    216e:	1f 91       	pop	r17
    2170:	0f 91       	pop	r16
    2172:	08 95       	ret

00002174 <_ZNK11TouchScreen12quary_objectEh>:
    2174:	cf 92       	push	r12
	//if(send_message(msg)) {
	//printf("Sending Screen Message: %d\nObject: %d\n",value,object);
	//}
}
int TouchScreen::quary_object(uint8_t object) const
{
    2176:	df 92       	push	r13
    2178:	ef 92       	push	r14
    217a:	ff 92       	push	r15
    217c:	0f 93       	push	r16
    217e:	1f 93       	push	r17
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
    2184:	cd b7       	in	r28, 0x3d	; 61
    2186:	de b7       	in	r29, 0x3e	; 62
    2188:	60 97       	sbiw	r28, 0x10	; 16
    218a:	0f b6       	in	r0, 0x3f	; 63
    218c:	f8 94       	cli
    218e:	de bf       	out	0x3e, r29	; 62
    2190:	0f be       	out	0x3f, r0	; 63
    2192:	cd bf       	out	0x3d, r28	; 61
    2194:	8c 01       	movw	r16, r24
    2196:	e6 2e       	mov	r14, r22
	uart3_Buffer_Rx_Clear();
    2198:	7a d5       	rcall	.+2804   	; 0x2c8e <_Z21uart3_Buffer_Rx_Clearv>
	ScreenRequestMessage msg;
	ScreenMessage msgtx;
	Clocks timeout(1000);
    219a:	48 ee       	ldi	r20, 0xE8	; 232
    219c:	53 e0       	ldi	r21, 0x03	; 3
    219e:	60 e0       	ldi	r22, 0x00	; 0
    21a0:	70 e0       	ldi	r23, 0x00	; 0
    21a2:	ce 01       	movw	r24, r28
    21a4:	05 96       	adiw	r24, 0x05	; 5
    21a6:	7e d1       	rcall	.+764    	; 0x24a4 <_ZN6ClocksC1El>

	msg.command      = 0x00;
    21a8:	19 82       	std	Y+1, r1	; 0x01
	msg.object_type  = object;
    21aa:	ea 82       	std	Y+2, r14	; 0x02
	msg.object_index = 0;
    21ac:	1b 82       	std	Y+3, r1	; 0x03
	msg.checksum     = msg.calculate_correct_checksum();
    21ae:	ec 82       	std	Y+4, r14	; 0x04

	send_message(msg);
    21b0:	be 01       	movw	r22, r28
    21b2:	6f 5f       	subi	r22, 0xFF	; 255
    21b4:	7f 4f       	sbci	r23, 0xFF	; 255
    21b6:	c8 01       	movw	r24, r16
	while(uart3_ReceiveAvailable() < 6)
    21b8:	c1 df       	rcall	.-126    	; 0x213c <_ZNK11TouchScreen12send_messageERK20ScreenRequestMessage>
    21ba:	70 d5       	rcall	.+2784   	; 0x2c9c <_Z22uart3_ReceiveAvailablev>
    21bc:	86 30       	cpi	r24, 0x06	; 6
	{
		if(timeout.isDone())
    21be:	30 f4       	brcc	.+12     	; 0x21cc <_ZNK11TouchScreen12quary_objectEh+0x58>
    21c0:	ce 01       	movw	r24, r28
    21c2:	05 96       	adiw	r24, 0x05	; 5
    21c4:	a2 d1       	rcall	.+836    	; 0x250a <_ZN6Clocks6isDoneEv>
    21c6:	88 23       	and	r24, r24
    21c8:	c1 f3       	breq	.-16     	; 0x21ba <_ZNK11TouchScreen12quary_objectEh+0x46>
			return 0xff;
	}
	printf("available: %d\n",uart3_ReceiveAvailable());
    21ca:	12 c0       	rjmp	.+36     	; 0x21f0 <_ZNK11TouchScreen12quary_objectEh+0x7c>
    21cc:	67 d5       	rcall	.+2766   	; 0x2c9c <_Z22uart3_ReceiveAvailablev>
    21ce:	1f 92       	push	r1
    21d0:	8f 93       	push	r24
    21d2:	8e ee       	ldi	r24, 0xEE	; 238
    21d4:	92 e0       	ldi	r25, 0x02	; 2
    21d6:	9f 93       	push	r25
    21d8:	8f 93       	push	r24
    21da:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
	while(msgtx.command != 0x05) {
    21de:	0f 90       	pop	r0
    21e0:	0f 90       	pop	r0
    21e2:	0f 90       	pop	r0
		msgtx.command      = read_byte();
    21e4:	0f 90       	pop	r0
    21e6:	c8 01       	movw	r24, r16
    21e8:	92 df       	rcall	.-220    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
	{
		if(timeout.isDone())
			return 0xff;
	}
	printf("available: %d\n",uart3_ReceiveAvailable());
	while(msgtx.command != 0x05) {
    21ea:	85 30       	cpi	r24, 0x05	; 5
    21ec:	e1 f7       	brne	.-8      	; 0x21e6 <_ZNK11TouchScreen12quary_objectEh+0x72>
    21ee:	06 c0       	rjmp	.+12     	; 0x21fc <_ZNK11TouchScreen12quary_objectEh+0x88>

	send_message(msg);
	while(uart3_ReceiveAvailable() < 6)
	{
		if(timeout.isDone())
			return 0xff;
    21f0:	0f ef       	ldi	r16, 0xFF	; 255
    21f2:	10 e0       	ldi	r17, 0x00	; 0
	printf("Type: %d\nIndex: %d\n",msgtx.object_type,(msgtx.value_msb << 8) | msgtx.value_lsb);
	if(msgtx.command == 0x05 && msgtx.object_type == object) {
		return (msgtx.value_msb << 8) | msgtx.value_lsb;
	}

	return 0xff;
    21f4:	25 c0       	rjmp	.+74     	; 0x2240 <__stack+0x41>
    21f6:	0f ef       	ldi	r16, 0xFF	; 255
	printf("available: %d\n",uart3_ReceiveAvailable());
	while(msgtx.command != 0x05) {
		msgtx.command      = read_byte();
	}

	msgtx.object_type  = read_byte();
    21f8:	10 e0       	ldi	r17, 0x00	; 0
    21fa:	22 c0       	rjmp	.+68     	; 0x2240 <__stack+0x41>
    21fc:	c8 01       	movw	r24, r16
	msgtx.object_index = read_byte();
    21fe:	87 df       	rcall	.-242    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
    2200:	d8 2e       	mov	r13, r24
	msgtx.value_msb    = read_byte();
    2202:	c8 01       	movw	r24, r16
    2204:	84 df       	rcall	.-248    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
    2206:	c8 01       	movw	r24, r16
    2208:	82 df       	rcall	.-252    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
	msgtx.value_lsb    = read_byte();
    220a:	c8 2e       	mov	r12, r24
    220c:	c8 01       	movw	r24, r16
    220e:	7f df       	rcall	.-258    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
    2210:	f8 2e       	mov	r15, r24
	msgtx.checksum     = read_byte();
    2212:	c8 01       	movw	r24, r16
    2214:	7c df       	rcall	.-264    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
    2216:	0f 2d       	mov	r16, r15
	printf("Type: %d\nIndex: %d\n",msgtx.object_type,(msgtx.value_msb << 8) | msgtx.value_lsb);
    2218:	10 e0       	ldi	r17, 0x00	; 0
    221a:	1c 29       	or	r17, r12
    221c:	1f 93       	push	r17
    221e:	ff 92       	push	r15
    2220:	1f 92       	push	r1
    2222:	df 92       	push	r13
    2224:	8d ef       	ldi	r24, 0xFD	; 253
    2226:	92 e0       	ldi	r25, 0x02	; 2
    2228:	9f 93       	push	r25
    222a:	8f 93       	push	r24
    222c:	0e 94 3c 19 	call	0x3278	; 0x3278 <printf>
    2230:	0f 90       	pop	r0
	if(msgtx.command == 0x05 && msgtx.object_type == object) {
    2232:	0f 90       	pop	r0
    2234:	0f 90       	pop	r0
    2236:	0f 90       	pop	r0
    2238:	0f 90       	pop	r0
    223a:	0f 90       	pop	r0
    223c:	ed 10       	cpse	r14, r13
    223e:	db cf       	rjmp	.-74     	; 0x21f6 <_ZNK11TouchScreen12quary_objectEh+0x82>
    2240:	c8 01       	movw	r24, r16
	return 0xff;




}
    2242:	60 96       	adiw	r28, 0x10	; 16
    2244:	0f b6       	in	r0, 0x3f	; 63
    2246:	f8 94       	cli
    2248:	de bf       	out	0x3e, r29	; 62
    224a:	0f be       	out	0x3f, r0	; 63
    224c:	cd bf       	out	0x3d, r28	; 61
    224e:	df 91       	pop	r29
    2250:	cf 91       	pop	r28
    2252:	1f 91       	pop	r17
    2254:	0f 91       	pop	r16
    2256:	ff 90       	pop	r15
    2258:	ef 90       	pop	r14
    225a:	df 90       	pop	r13
    225c:	cf 90       	pop	r12
    225e:	08 95       	ret

00002260 <_ZNK11TouchScreen12received_ackEv>:
    2260:	ef 92       	push	r14
	}
	return false;
}

bool TouchScreen::received_ack () const
{
    2262:	ff 92       	push	r15
    2264:	1f 93       	push	r17
    2266:	cf 93       	push	r28
    2268:	df 93       	push	r29
    226a:	cd b7       	in	r28, 0x3d	; 61
    226c:	de b7       	in	r29, 0x3e	; 62
    226e:	2c 97       	sbiw	r28, 0x0c	; 12
    2270:	0f b6       	in	r0, 0x3f	; 63
    2272:	f8 94       	cli
    2274:	de bf       	out	0x3e, r29	; 62
    2276:	0f be       	out	0x3f, r0	; 63
    2278:	cd bf       	out	0x3d, r28	; 61
    227a:	7c 01       	movw	r14, r24
	const uint16_t NACK = 0x0015;
	const uint16_t ACK = 0x0006;
	Clocks timeout(200); //milliseconds
    227c:	48 ec       	ldi	r20, 0xC8	; 200
    227e:	50 e0       	ldi	r21, 0x00	; 0
    2280:	60 e0       	ldi	r22, 0x00	; 0
    2282:	70 e0       	ldi	r23, 0x00	; 0
    2284:	ce 01       	movw	r24, r28
    2286:	01 96       	adiw	r24, 0x01	; 1
    2288:	0d d1       	rcall	.+538    	; 0x24a4 <_ZN6ClocksC1El>
//  printf("timeout:\n");
//  printf("currentTime: %u\n", timeout.currentTime);
//  printf("startTime: %u\n", timeout.startTime);
//  printf("length: %u\n", timeout.length);
	while (!timeout.isDone())
    228a:	ce 01       	movw	r24, r28
    228c:	01 96       	adiw	r24, 0x01	; 1
    228e:	3d d1       	rcall	.+634    	; 0x250a <_ZN6Clocks6isDoneEv>
    2290:	18 2f       	mov	r17, r24
    2292:	81 11       	cpse	r24, r1
    2294:	0a c0       	rjmp	.+20     	; 0x22aa <_ZNK11TouchScreen12received_ackEv+0x4a>
	{
		uint16_t val = read_byte();
    2296:	c7 01       	movw	r24, r14
    2298:	3a df       	rcall	.-396    	; 0x210e <_ZNK11TouchScreen9read_byteEv>
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	85 31       	cpi	r24, 0x15	; 21
		if (val == NACK) {
    229e:	91 05       	cpc	r25, r1
    22a0:	29 f0       	breq	.+10     	; 0x22ac <_ZNK11TouchScreen12received_ackEv+0x4c>
    22a2:	06 97       	sbiw	r24, 0x06	; 6
			return false;
		}
		if (val == ACK) {
    22a4:	91 f7       	brne	.-28     	; 0x228a <_ZNK11TouchScreen12received_ackEv+0x2a>
    22a6:	11 e0       	ldi	r17, 0x01	; 1
			return true;
    22a8:	01 c0       	rjmp	.+2      	; 0x22ac <_ZNK11TouchScreen12received_ackEv+0x4c>
    22aa:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	return false;
    22ac:	81 2f       	mov	r24, r17
}
    22ae:	2c 96       	adiw	r28, 0x0c	; 12
    22b0:	0f b6       	in	r0, 0x3f	; 63
    22b2:	f8 94       	cli
    22b4:	de bf       	out	0x3e, r29	; 62
    22b6:	0f be       	out	0x3f, r0	; 63
    22b8:	cd bf       	out	0x3d, r28	; 61
    22ba:	df 91       	pop	r29
    22bc:	cf 91       	pop	r28
    22be:	1f 91       	pop	r17
    22c0:	ff 90       	pop	r15
    22c2:	ef 90       	pop	r14
    22c4:	08 95       	ret

000022c6 <_ZNK11TouchScreen12send_messageERK13ScreenMessage>:
    22c6:	df 92       	push	r13
  } while (!success && (i++ < MAX_ATTEMPTS));
  return success;
}
*/
bool TouchScreen::send_message (const ScreenMessage & msg) const
{
    22c8:	ef 92       	push	r14
    22ca:	ff 92       	push	r15
    22cc:	0f 93       	push	r16
    22ce:	1f 93       	push	r17
    22d0:	cf 93       	push	r28
    22d2:	df 93       	push	r29
    22d4:	8c 01       	movw	r16, r24
    22d6:	eb 01       	movw	r28, r22
    22d8:	e1 2c       	mov	r14, r1
    22da:	f1 2c       	mov	r15, r1
	{
		int i = 0;
		bool success = false;
		do
		{
			send_byte(msg.command);
    22dc:	68 81       	ld	r22, Y
    22de:	c8 01       	movw	r24, r16
    22e0:	00 df       	rcall	.-512    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
			send_byte(msg.object_type);
    22e2:	69 81       	ldd	r22, Y+1	; 0x01
    22e4:	c8 01       	movw	r24, r16
    22e6:	fd de       	rcall	.-518    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
			send_byte(msg.object_index);
    22e8:	6a 81       	ldd	r22, Y+2	; 0x02
    22ea:	c8 01       	movw	r24, r16
    22ec:	fa de       	rcall	.-524    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
			send_byte(msg.value_msb);
    22ee:	6b 81       	ldd	r22, Y+3	; 0x03
    22f0:	c8 01       	movw	r24, r16
    22f2:	f7 de       	rcall	.-530    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
			send_byte(msg.value_lsb);
    22f4:	6c 81       	ldd	r22, Y+4	; 0x04
    22f6:	c8 01       	movw	r24, r16
    22f8:	f4 de       	rcall	.-536    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
			send_byte(msg.checksum);
    22fa:	6d 81       	ldd	r22, Y+5	; 0x05
    22fc:	c8 01       	movw	r24, r16
    22fe:	f1 de       	rcall	.-542    	; 0x20e2 <_ZNK11TouchScreen9send_byteEh>
    2300:	c8 01       	movw	r24, r16
			success = received_ack();
    2302:	ae df       	rcall	.-164    	; 0x2260 <_ZNK11TouchScreen12received_ackEv>
    2304:	d8 2e       	mov	r13, r24
    2306:	8f ef       	ldi	r24, 0xFF	; 255
    2308:	e8 1a       	sub	r14, r24
			++i;
    230a:	f8 0a       	sbc	r15, r24
    230c:	d1 10       	cpse	r13, r1
    230e:	05 c0       	rjmp	.+10     	; 0x231a <_ZNK11TouchScreen12send_messageERK13ScreenMessage+0x54>
		} while (!success && (i < MAX_ATTEMPTS));
    2310:	8a e0       	ldi	r24, 0x0A	; 10
    2312:	e8 16       	cp	r14, r24
    2314:	f1 04       	cpc	r15, r1
    2316:	11 f7       	brne	.-60     	; 0x22dc <_ZNK11TouchScreen12send_messageERK13ScreenMessage+0x16>
    2318:	04 c0       	rjmp	.+8      	; 0x2322 <_ZNK11TouchScreen12send_messageERK13ScreenMessage+0x5c>
    231a:	8a e0       	ldi	r24, 0x0A	; 10
		if (i >= MAX_ATTEMPTS)
    231c:	e8 16       	cp	r14, r24
    231e:	f1 04       	cpc	r15, r1
    2320:	1c f0       	brlt	.+6      	; 0x2328 <_ZNK11TouchScreen12send_messageERK13ScreenMessage+0x62>
    2322:	81 e1       	ldi	r24, 0x11	; 17
			printf("Fail:!!\r\n");
    2324:	93 e0       	ldi	r25, 0x03	; 3
    2326:	bb d7       	rcall	.+3958   	; 0x329e <puts>
    2328:	8d 2d       	mov	r24, r13
    232a:	df 91       	pop	r29
//      good_screen_coms = false;
		return success;
	}
	return false;
}
    232c:	cf 91       	pop	r28
    232e:	1f 91       	pop	r17
    2330:	0f 91       	pop	r16
    2332:	ff 90       	pop	r15
    2334:	ef 90       	pop	r14
    2336:	df 90       	pop	r13
    2338:	08 95       	ret

0000233a <_ZNK11TouchScreen13update_objectE14ScreenObject_t>:
    233a:	cf 93       	push	r28
    233c:	df 93       	push	r29
		screenRefreshTimer.reset();
	}
}

void TouchScreen::update_object (ScreenObject_t i) const
{
    233e:	00 d0       	rcall	.+0      	; 0x2340 <_ZNK11TouchScreen13update_objectE14ScreenObject_t+0x6>
    2340:	00 d0       	rcall	.+0      	; 0x2342 <_ZNK11TouchScreen13update_objectE14ScreenObject_t+0x8>
    2342:	00 d0       	rcall	.+0      	; 0x2344 <_ZNK11TouchScreen13update_objectE14ScreenObject_t+0xa>
    2344:	cd b7       	in	r28, 0x3d	; 61
    2346:	de b7       	in	r29, 0x3e	; 62
    2348:	26 2f       	mov	r18, r22
	ScreenMessage msg;
	msg.command      = 0x01;
    234a:	31 e0       	ldi	r19, 0x01	; 1
    234c:	39 83       	std	Y+1, r19	; 0x01
	msg.object_type  = i.Control;
    234e:	4a 83       	std	Y+2, r20	; 0x02
	msg.object_index = i.ID;
    2350:	5b 83       	std	Y+3, r21	; 0x03
	msg.value_msb    = i.Data >> 8;
    2352:	7c 83       	std	Y+4, r23	; 0x04
	msg.value_lsb    = i.Data;
    2354:	6d 83       	std	Y+5, r22	; 0x05
	msg.checksum     = msg.calculate_correct_checksum();
    2356:	54 27       	eor	r21, r20
    2358:	35 27       	eor	r19, r21
    235a:	23 27       	eor	r18, r19
    235c:	27 27       	eor	r18, r23
    235e:	2e 83       	std	Y+6, r18	; 0x06
	if(!send_message(msg)) {
    2360:	be 01       	movw	r22, r28
    2362:	6f 5f       	subi	r22, 0xFF	; 255
    2364:	7f 4f       	sbci	r23, 0xFF	; 255
    2366:	af df       	rcall	.-162    	; 0x22c6 <_ZNK11TouchScreen12send_messageERK13ScreenMessage>
    2368:	81 11       	cpse	r24, r1
    236a:	03 c0       	rjmp	.+6      	; 0x2372 <_ZNK11TouchScreen13update_objectE14ScreenObject_t+0x38>
		printf("Failed Sending Screen Message\n");
    236c:	8a e1       	ldi	r24, 0x1A	; 26
    236e:	93 e0       	ldi	r25, 0x03	; 3
    2370:	96 d7       	rcall	.+3884   	; 0x329e <puts>
	}
}
    2372:	26 96       	adiw	r28, 0x06	; 6
    2374:	0f b6       	in	r0, 0x3f	; 63
    2376:	f8 94       	cli
    2378:	de bf       	out	0x3e, r29	; 62
    237a:	0f be       	out	0x3f, r0	; 63
    237c:	cd bf       	out	0x3d, r28	; 61
    237e:	df 91       	pop	r29
    2380:	cf 91       	pop	r28
    2382:	08 95       	ret

00002384 <_ZNK11TouchScreen7refreshEv>:
}

/*----------------------------- Updating Screen ------------------------------*/
Clocks screenRefreshTimer(500);
void TouchScreen::refresh() const
{
    2384:	cf 92       	push	r12
    2386:	df 92       	push	r13
    2388:	ef 92       	push	r14
    238a:	ff 92       	push	r15
    238c:	0f 93       	push	r16
    238e:	1f 93       	push	r17
    2390:	cf 93       	push	r28
    2392:	df 93       	push	r29
    2394:	7c 01       	movw	r14, r24
	if(screenRefreshTimer.isDone()) {
    2396:	88 e5       	ldi	r24, 0x58	; 88
    2398:	97 e0       	ldi	r25, 0x07	; 7
    239a:	b7 d0       	rcall	.+366    	; 0x250a <_ZN6Clocks6isDoneEv>
    239c:	88 23       	and	r24, r24
    239e:	09 f4       	brne	.+2      	; 0x23a2 <_ZNK11TouchScreen7refreshEv+0x1e>
    23a0:	45 c0       	rjmp	.+138    	; 0x242c <_ZNK11TouchScreen7refreshEv+0xa8>
		uint8_t _form = quary_object(Form);
    23a2:	6a e0       	ldi	r22, 0x0A	; 10
    23a4:	c7 01       	movw	r24, r14
    23a6:	e6 de       	rcall	.-564    	; 0x2174 <_ZNK11TouchScreen12quary_objectEh>
    23a8:	6c 01       	movw	r12, r24
    23aa:	ec 01       	movw	r28, r24
    23ac:	dd 27       	eor	r29, r29
		printf( "Form: %d\n",_form);
    23ae:	df 93       	push	r29
    23b0:	cf 93       	push	r28
    23b2:	88 e3       	ldi	r24, 0x38	; 56
    23b4:	93 e0       	ldi	r25, 0x03	; 3
    23b6:	9f 93       	push	r25
    23b8:	8f 93       	push	r24
    23ba:	5e d7       	rcall	.+3772   	; 0x3278 <printf>
		UpdateObject_data(_form);
    23bc:	6c 2d       	mov	r22, r12
    23be:	c7 01       	movw	r24, r14
    23c0:	23 de       	rcall	.-954    	; 0x2008 <_ZNK11TouchScreen17UpdateObject_dataEh>
    23c2:	0f 90       	pop	r0
		ScreenObject_t *ptr;
		switch(_form)
    23c4:	0f 90       	pop	r0
    23c6:	0f 90       	pop	r0
    23c8:	0f 90       	pop	r0
    23ca:	c1 30       	cpi	r28, 0x01	; 1
    23cc:	d1 05       	cpc	r29, r1
    23ce:	71 f0       	breq	.+28     	; 0x23ec <_ZNK11TouchScreen7refreshEv+0x68>
    23d0:	1c f4       	brge	.+6      	; 0x23d8 <_ZNK11TouchScreen7refreshEv+0x54>
    23d2:	20 97       	sbiw	r28, 0x00	; 0
    23d4:	41 f0       	breq	.+16     	; 0x23e6 <_ZNK11TouchScreen7refreshEv+0x62>
    23d6:	12 c0       	rjmp	.+36     	; 0x23fc <_ZNK11TouchScreen7refreshEv+0x78>
    23d8:	c2 30       	cpi	r28, 0x02	; 2
    23da:	d1 05       	cpc	r29, r1
    23dc:	51 f0       	breq	.+20     	; 0x23f2 <_ZNK11TouchScreen7refreshEv+0x6e>
    23de:	c3 30       	cpi	r28, 0x03	; 3
    23e0:	d1 05       	cpc	r29, r1
    23e2:	51 f0       	breq	.+20     	; 0x23f8 <_ZNK11TouchScreen7refreshEv+0x74>
    23e4:	0b c0       	rjmp	.+22     	; 0x23fc <_ZNK11TouchScreen7refreshEv+0x78>
    23e6:	04 ef       	ldi	r16, 0xF4	; 244
		{
		case 0:
			ptr = Form0Objects;
    23e8:	17 e0       	ldi	r17, 0x07	; 7
    23ea:	08 c0       	rjmp	.+16     	; 0x23fc <_ZNK11TouchScreen7refreshEv+0x78>
    23ec:	04 ea       	ldi	r16, 0xA4	; 164
			break;
		case 1:
			ptr = Form1Objects;
    23ee:	17 e0       	ldi	r17, 0x07	; 7
    23f0:	05 c0       	rjmp	.+10     	; 0x23fc <_ZNK11TouchScreen7refreshEv+0x78>
			break;
    23f2:	0c e8       	ldi	r16, 0x8C	; 140
		case 2:
			ptr = Form2Objects;
    23f4:	17 e0       	ldi	r17, 0x07	; 7
    23f6:	02 c0       	rjmp	.+4      	; 0x23fc <_ZNK11TouchScreen7refreshEv+0x78>
			break;
    23f8:	04 e6       	ldi	r16, 0x64	; 100
		case 3:
			ptr = Form3Objects;
    23fa:	17 e0       	ldi	r17, 0x07	; 7
    23fc:	ce 5b       	subi	r28, 0xBE	; 190
			break;
		}
		for (uint16_t i = 0; i < FormControlCount[_form]; ++i)
    23fe:	dc 4f       	sbci	r29, 0xFC	; 252
    2400:	c8 80       	ld	r12, Y
    2402:	d1 2c       	mov	r13, r1
    2404:	c1 14       	cp	r12, r1
    2406:	d1 04       	cpc	r13, r1
    2408:	71 f0       	breq	.+28     	; 0x2426 <_ZNK11TouchScreen7refreshEv+0xa2>
    240a:	c0 e0       	ldi	r28, 0x00	; 0
    240c:	d0 e0       	ldi	r29, 0x00	; 0
    240e:	f8 01       	movw	r30, r16
			update_object(ptr[i]);
    2410:	41 91       	ld	r20, Z+
    2412:	51 91       	ld	r21, Z+
    2414:	61 91       	ld	r22, Z+
    2416:	71 91       	ld	r23, Z+
    2418:	8f 01       	movw	r16, r30
    241a:	c7 01       	movw	r24, r14
    241c:	8e df       	rcall	.-228    	; 0x233a <_ZNK11TouchScreen13update_objectE14ScreenObject_t>
    241e:	21 96       	adiw	r28, 0x01	; 1
			break;
		case 3:
			ptr = Form3Objects;
			break;
		}
		for (uint16_t i = 0; i < FormControlCount[_form]; ++i)
    2420:	cc 15       	cp	r28, r12
    2422:	dd 05       	cpc	r29, r13
    2424:	a1 f7       	brne	.-24     	; 0x240e <_ZNK11TouchScreen7refreshEv+0x8a>
			update_object(ptr[i]);
		screenRefreshTimer.reset();
    2426:	88 e5       	ldi	r24, 0x58	; 88
    2428:	97 e0       	ldi	r25, 0x07	; 7
    242a:	11 d0       	rcall	.+34     	; 0x244e <_ZN6Clocks5resetEv>
    242c:	df 91       	pop	r29
	}
}
    242e:	cf 91       	pop	r28
    2430:	1f 91       	pop	r17
    2432:	0f 91       	pop	r16
    2434:	ff 90       	pop	r15
    2436:	ef 90       	pop	r14
    2438:	df 90       	pop	r13
    243a:	cf 90       	pop	r12
    243c:	08 95       	ret

0000243e <_GLOBAL__sub_I_Form0Objects>:
    243e:	44 ef       	ldi	r20, 0xF4	; 244
	}

}

/*----------------------------- Updating Screen ------------------------------*/
Clocks screenRefreshTimer(500);
    2440:	51 e0       	ldi	r21, 0x01	; 1
    2442:	60 e0       	ldi	r22, 0x00	; 0
    2444:	70 e0       	ldi	r23, 0x00	; 0
    2446:	88 e5       	ldi	r24, 0x58	; 88
    2448:	97 e0       	ldi	r25, 0x07	; 7
    244a:	2c c0       	rjmp	.+88     	; 0x24a4 <_ZN6ClocksC1El>
    244c:	08 95       	ret

0000244e <_ZN6Clocks5resetEv>:
{
	update();

	return abs(currentTime-startTime) / length;

}
    244e:	cf 93       	push	r28
    2450:	df 93       	push	r29
    2452:	ec 01       	movw	r28, r24
    2454:	88 ef       	ldi	r24, 0xF8	; 248
    2456:	97 e0       	ldi	r25, 0x07	; 7
    2458:	3b d1       	rcall	.+630    	; 0x26d0 <_ZN12SimpleTimer16millisEv>
    245a:	6c 83       	std	Y+4, r22	; 0x04
    245c:	7d 83       	std	Y+5, r23	; 0x05
    245e:	8e 83       	std	Y+6, r24	; 0x06
    2460:	9f 83       	std	Y+7, r25	; 0x07
    2462:	68 83       	st	Y, r22
    2464:	79 83       	std	Y+1, r23	; 0x01
    2466:	8a 83       	std	Y+2, r24	; 0x02
    2468:	9b 83       	std	Y+3, r25	; 0x03
    246a:	df 91       	pop	r29
    246c:	cf 91       	pop	r28
    246e:	08 95       	ret

00002470 <_ZN6ClocksC1Ev>:
    2470:	cf 93       	push	r28
    2472:	df 93       	push	r29
    2474:	ec 01       	movw	r28, r24
    2476:	41 e0       	ldi	r20, 0x01	; 1
    2478:	50 e0       	ldi	r21, 0x00	; 0
    247a:	60 e0       	ldi	r22, 0x00	; 0
    247c:	70 e0       	ldi	r23, 0x00	; 0
    247e:	88 ef       	ldi	r24, 0xF8	; 248
    2480:	97 e0       	ldi	r25, 0x07	; 7
    2482:	3c d1       	rcall	.+632    	; 0x26fc <_ZN12SimpleTimer112set_durationEm>
    2484:	88 ef       	ldi	r24, 0xF8	; 248
    2486:	97 e0       	ldi	r25, 0x07	; 7
    2488:	2c d1       	rcall	.+600    	; 0x26e2 <_ZN12SimpleTimer15startEv>
    248a:	82 e3       	ldi	r24, 0x32	; 50
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	a0 e0       	ldi	r26, 0x00	; 0
    2490:	b0 e0       	ldi	r27, 0x00	; 0
    2492:	88 87       	std	Y+8, r24	; 0x08
    2494:	99 87       	std	Y+9, r25	; 0x09
    2496:	aa 87       	std	Y+10, r26	; 0x0a
    2498:	bb 87       	std	Y+11, r27	; 0x0b
    249a:	ce 01       	movw	r24, r28
    249c:	d8 df       	rcall	.-80     	; 0x244e <_ZN6Clocks5resetEv>
    249e:	df 91       	pop	r29
    24a0:	cf 91       	pop	r28
    24a2:	08 95       	ret

000024a4 <_ZN6ClocksC1El>:
    24a4:	cf 92       	push	r12
    24a6:	df 92       	push	r13
    24a8:	ef 92       	push	r14
    24aa:	ff 92       	push	r15
    24ac:	cf 93       	push	r28
    24ae:	df 93       	push	r29
    24b0:	ec 01       	movw	r28, r24
    24b2:	6a 01       	movw	r12, r20
    24b4:	7b 01       	movw	r14, r22
    24b6:	41 e0       	ldi	r20, 0x01	; 1
    24b8:	50 e0       	ldi	r21, 0x00	; 0
    24ba:	60 e0       	ldi	r22, 0x00	; 0
    24bc:	70 e0       	ldi	r23, 0x00	; 0
    24be:	88 ef       	ldi	r24, 0xF8	; 248
    24c0:	97 e0       	ldi	r25, 0x07	; 7
    24c2:	1c d1       	rcall	.+568    	; 0x26fc <_ZN12SimpleTimer112set_durationEm>
    24c4:	88 ef       	ldi	r24, 0xF8	; 248
    24c6:	97 e0       	ldi	r25, 0x07	; 7
    24c8:	0c d1       	rcall	.+536    	; 0x26e2 <_ZN12SimpleTimer15startEv>
    24ca:	c8 86       	std	Y+8, r12	; 0x08
    24cc:	d9 86       	std	Y+9, r13	; 0x09
    24ce:	ea 86       	std	Y+10, r14	; 0x0a
    24d0:	fb 86       	std	Y+11, r15	; 0x0b
    24d2:	ce 01       	movw	r24, r28
    24d4:	bc df       	rcall	.-136    	; 0x244e <_ZN6Clocks5resetEv>
    24d6:	df 91       	pop	r29
    24d8:	cf 91       	pop	r28
    24da:	ff 90       	pop	r15
    24dc:	ef 90       	pop	r14
    24de:	df 90       	pop	r13
    24e0:	cf 90       	pop	r12
    24e2:	08 95       	ret

000024e4 <_ZN6Clocks11setIntervalEl>:
    24e4:	fc 01       	movw	r30, r24
    24e6:	40 87       	std	Z+8, r20	; 0x08
    24e8:	51 87       	std	Z+9, r21	; 0x09
    24ea:	62 87       	std	Z+10, r22	; 0x0a
    24ec:	73 87       	std	Z+11, r23	; 0x0b
    24ee:	08 95       	ret

000024f0 <_ZN6Clocks6updateEv>:
    24f0:	cf 93       	push	r28
    24f2:	df 93       	push	r29
    24f4:	ec 01       	movw	r28, r24
    24f6:	88 ef       	ldi	r24, 0xF8	; 248
    24f8:	97 e0       	ldi	r25, 0x07	; 7
    24fa:	ea d0       	rcall	.+468    	; 0x26d0 <_ZN12SimpleTimer16millisEv>
    24fc:	68 83       	st	Y, r22
    24fe:	79 83       	std	Y+1, r23	; 0x01
    2500:	8a 83       	std	Y+2, r24	; 0x02
    2502:	9b 83       	std	Y+3, r25	; 0x03
    2504:	df 91       	pop	r29
    2506:	cf 91       	pop	r28
    2508:	08 95       	ret

0000250a <_ZN6Clocks6isDoneEv>:
    250a:	cf 93       	push	r28
    250c:	df 93       	push	r29
    250e:	ec 01       	movw	r28, r24
    2510:	ef df       	rcall	.-34     	; 0x24f0 <_ZN6Clocks6updateEv>
    2512:	28 81       	ld	r18, Y
    2514:	39 81       	ldd	r19, Y+1	; 0x01
    2516:	8c 81       	ldd	r24, Y+4	; 0x04
    2518:	9d 81       	ldd	r25, Y+5	; 0x05
    251a:	28 1b       	sub	r18, r24
    251c:	39 0b       	sbc	r19, r25
    251e:	c9 01       	movw	r24, r18
    2520:	99 23       	and	r25, r25
    2522:	24 f4       	brge	.+8      	; 0x252c <_ZN6Clocks6isDoneEv+0x22>
    2524:	88 27       	eor	r24, r24
    2526:	99 27       	eor	r25, r25
    2528:	82 1b       	sub	r24, r18
    252a:	93 0b       	sbc	r25, r19
    252c:	09 2e       	mov	r0, r25
    252e:	00 0c       	add	r0, r0
    2530:	aa 0b       	sbc	r26, r26
    2532:	bb 0b       	sbc	r27, r27
    2534:	48 85       	ldd	r20, Y+8	; 0x08
    2536:	59 85       	ldd	r21, Y+9	; 0x09
    2538:	6a 85       	ldd	r22, Y+10	; 0x0a
    253a:	7b 85       	ldd	r23, Y+11	; 0x0b
    253c:	48 17       	cp	r20, r24
    253e:	59 07       	cpc	r21, r25
    2540:	6a 07       	cpc	r22, r26
    2542:	7b 07       	cpc	r23, r27
    2544:	24 f4       	brge	.+8      	; 0x254e <_ZN6Clocks6isDoneEv+0x44>
    2546:	ce 01       	movw	r24, r28
    2548:	82 df       	rcall	.-252    	; 0x244e <_ZN6Clocks5resetEv>
    254a:	81 e0       	ldi	r24, 0x01	; 1
    254c:	01 c0       	rjmp	.+2      	; 0x2550 <_ZN6Clocks6isDoneEv+0x46>
    254e:	80 e0       	ldi	r24, 0x00	; 0
    2550:	df 91       	pop	r29
    2552:	cf 91       	pop	r28
    2554:	08 95       	ret

00002556 <_GLOBAL__sub_I__ZN6ClocksC2Ev>:

#include "../timer/SimpleTimer1.hpp"
#include "../uart/uart_2.hpp"
#include "../uart/uart_3.hpp"

static SimpleTimer1 ClockTimer;
    2556:	88 ef       	ldi	r24, 0xF8	; 248
    2558:	97 e0       	ldi	r25, 0x07	; 7
    255a:	ce c0       	rjmp	.+412    	; 0x26f8 <_ZN12SimpleTimer1C1Ev>
    255c:	08 95       	ret

0000255e <_Z5resetv>:
    255e:	10 92 fd 07 	sts	0x07FD, r1	; 0x8007fd <_ZL5count>
    2562:	10 92 fe 07 	sts	0x07FE, r1	; 0x8007fe <_ZL5count+0x1>
    2566:	10 92 ff 07 	sts	0x07FF, r1	; 0x8007ff <_ZL5count+0x2>
    256a:	10 92 00 08 	sts	0x0800, r1	; 0x800800 <_ZL5count+0x3>
    256e:	07 d1       	rcall	.+526    	; 0x277e <_Z36timer0_disableTimerOverflowInterruptv>
    2570:	80 e0       	ldi	r24, 0x00	; 0
    2572:	d7 c0       	rjmp	.+430    	; 0x2722 <_Z21timer0_setClockSource12CLOCK_SOURCE>
    2574:	08 95       	ret

00002576 <__vector_23>:
    2576:	1f 92       	push	r1
    2578:	0f 92       	push	r0
    257a:	0f b6       	in	r0, 0x3f	; 63
    257c:	0f 92       	push	r0
    257e:	11 24       	eor	r1, r1
    2580:	0b b6       	in	r0, 0x3b	; 59
    2582:	0f 92       	push	r0
    2584:	2f 93       	push	r18
    2586:	3f 93       	push	r19
    2588:	4f 93       	push	r20
    258a:	5f 93       	push	r21
    258c:	6f 93       	push	r22
    258e:	7f 93       	push	r23
    2590:	8f 93       	push	r24
    2592:	9f 93       	push	r25
    2594:	af 93       	push	r26
    2596:	bf 93       	push	r27
    2598:	ef 93       	push	r30
    259a:	ff 93       	push	r31
    259c:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <_ZL5count>
    25a0:	90 91 fe 07 	lds	r25, 0x07FE	; 0x8007fe <_ZL5count+0x1>
    25a4:	a0 91 ff 07 	lds	r26, 0x07FF	; 0x8007ff <_ZL5count+0x2>
    25a8:	b0 91 00 08 	lds	r27, 0x0800	; 0x800800 <_ZL5count+0x3>
    25ac:	01 96       	adiw	r24, 0x01	; 1
    25ae:	a1 1d       	adc	r26, r1
    25b0:	b1 1d       	adc	r27, r1
    25b2:	80 93 fd 07 	sts	0x07FD, r24	; 0x8007fd <_ZL5count>
    25b6:	90 93 fe 07 	sts	0x07FE, r25	; 0x8007fe <_ZL5count+0x1>
    25ba:	a0 93 ff 07 	sts	0x07FF, r26	; 0x8007ff <_ZL5count+0x2>
    25be:	b0 93 00 08 	sts	0x0800, r27	; 0x800800 <_ZL5count+0x3>
    25c2:	40 91 fd 07 	lds	r20, 0x07FD	; 0x8007fd <_ZL5count>
    25c6:	50 91 fe 07 	lds	r21, 0x07FE	; 0x8007fe <_ZL5count+0x1>
    25ca:	60 91 ff 07 	lds	r22, 0x07FF	; 0x8007ff <_ZL5count+0x2>
    25ce:	70 91 00 08 	lds	r23, 0x0800	; 0x800800 <_ZL5count+0x3>
    25d2:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <_ZL9max_count>
    25d6:	90 91 fa 07 	lds	r25, 0x07FA	; 0x8007fa <_ZL9max_count+0x1>
    25da:	a0 91 fb 07 	lds	r26, 0x07FB	; 0x8007fb <_ZL9max_count+0x2>
    25de:	b0 91 fc 07 	lds	r27, 0x07FC	; 0x8007fc <_ZL9max_count+0x3>
    25e2:	84 17       	cp	r24, r20
    25e4:	95 07       	cpc	r25, r21
    25e6:	a6 07       	cpc	r26, r22
    25e8:	b7 07       	cpc	r27, r23
    25ea:	08 f4       	brcc	.+2      	; 0x25ee <__vector_23+0x78>
    25ec:	b8 df       	rcall	.-144    	; 0x255e <_Z5resetv>
    25ee:	ff 91       	pop	r31
    25f0:	ef 91       	pop	r30
    25f2:	bf 91       	pop	r27
    25f4:	af 91       	pop	r26
    25f6:	9f 91       	pop	r25
    25f8:	8f 91       	pop	r24
    25fa:	7f 91       	pop	r23
    25fc:	6f 91       	pop	r22
    25fe:	5f 91       	pop	r21
    2600:	4f 91       	pop	r20
    2602:	3f 91       	pop	r19
    2604:	2f 91       	pop	r18
    2606:	0f 90       	pop	r0
    2608:	0b be       	out	0x3b, r0	; 59
    260a:	0f 90       	pop	r0
    260c:	0f be       	out	0x3f, r0	; 63
    260e:	0f 90       	pop	r0
    2610:	1f 90       	pop	r1
    2612:	18 95       	reti

00002614 <__vector_20>:
    2614:	1f 92       	push	r1
    2616:	0f 92       	push	r0
    2618:	0f b6       	in	r0, 0x3f	; 63
    261a:	0f 92       	push	r0
    261c:	11 24       	eor	r1, r1
    261e:	4f 93       	push	r20
    2620:	5f 93       	push	r21
    2622:	6f 93       	push	r22
    2624:	7f 93       	push	r23
    2626:	8f 93       	push	r24
    2628:	9f 93       	push	r25
    262a:	af 93       	push	r26
    262c:	bf 93       	push	r27
    262e:	80 91 09 08 	lds	r24, 0x0809	; 0x800809 <_ZL5count>
    2632:	90 91 0a 08 	lds	r25, 0x080A	; 0x80080a <_ZL5count+0x1>
    2636:	a0 91 0b 08 	lds	r26, 0x080B	; 0x80080b <_ZL5count+0x2>
    263a:	b0 91 0c 08 	lds	r27, 0x080C	; 0x80080c <_ZL5count+0x3>
    263e:	01 96       	adiw	r24, 0x01	; 1
    2640:	a1 1d       	adc	r26, r1
    2642:	b1 1d       	adc	r27, r1
    2644:	80 93 09 08 	sts	0x0809, r24	; 0x800809 <_ZL5count>
    2648:	90 93 0a 08 	sts	0x080A, r25	; 0x80080a <_ZL5count+0x1>
    264c:	a0 93 0b 08 	sts	0x080B, r26	; 0x80080b <_ZL5count+0x2>
    2650:	b0 93 0c 08 	sts	0x080C, r27	; 0x80080c <_ZL5count+0x3>
    2654:	40 91 09 08 	lds	r20, 0x0809	; 0x800809 <_ZL5count>
    2658:	50 91 0a 08 	lds	r21, 0x080A	; 0x80080a <_ZL5count+0x1>
    265c:	60 91 0b 08 	lds	r22, 0x080B	; 0x80080b <_ZL5count+0x2>
    2660:	70 91 0c 08 	lds	r23, 0x080C	; 0x80080c <_ZL5count+0x3>
    2664:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <_ZL9max_count>
    2668:	90 91 02 08 	lds	r25, 0x0802	; 0x800802 <_ZL9max_count+0x1>
    266c:	a0 91 03 08 	lds	r26, 0x0803	; 0x800803 <_ZL9max_count+0x2>
    2670:	b0 91 04 08 	lds	r27, 0x0804	; 0x800804 <_ZL9max_count+0x3>
    2674:	84 17       	cp	r24, r20
    2676:	95 07       	cpc	r25, r21
    2678:	a6 07       	cpc	r26, r22
    267a:	b7 07       	cpc	r27, r23
    267c:	d8 f4       	brcc	.+54     	; 0x26b4 <__vector_20+0xa0>
    267e:	80 91 05 08 	lds	r24, 0x0805	; 0x800805 <_ZL11GlobalCount>
    2682:	90 91 06 08 	lds	r25, 0x0806	; 0x800806 <_ZL11GlobalCount+0x1>
    2686:	a0 91 07 08 	lds	r26, 0x0807	; 0x800807 <_ZL11GlobalCount+0x2>
    268a:	b0 91 08 08 	lds	r27, 0x0808	; 0x800808 <_ZL11GlobalCount+0x3>
    268e:	04 96       	adiw	r24, 0x04	; 4
    2690:	a1 1d       	adc	r26, r1
    2692:	b1 1d       	adc	r27, r1
    2694:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <_ZL11GlobalCount>
    2698:	90 93 06 08 	sts	0x0806, r25	; 0x800806 <_ZL11GlobalCount+0x1>
    269c:	a0 93 07 08 	sts	0x0807, r26	; 0x800807 <_ZL11GlobalCount+0x2>
    26a0:	b0 93 08 08 	sts	0x0808, r27	; 0x800808 <_ZL11GlobalCount+0x3>
    26a4:	10 92 09 08 	sts	0x0809, r1	; 0x800809 <_ZL5count>
    26a8:	10 92 0a 08 	sts	0x080A, r1	; 0x80080a <_ZL5count+0x1>
    26ac:	10 92 0b 08 	sts	0x080B, r1	; 0x80080b <_ZL5count+0x2>
    26b0:	10 92 0c 08 	sts	0x080C, r1	; 0x80080c <_ZL5count+0x3>
    26b4:	16 ba       	out	0x16, r1	; 22
    26b6:	bf 91       	pop	r27
    26b8:	af 91       	pop	r26
    26ba:	9f 91       	pop	r25
    26bc:	8f 91       	pop	r24
    26be:	7f 91       	pop	r23
    26c0:	6f 91       	pop	r22
    26c2:	5f 91       	pop	r21
    26c4:	4f 91       	pop	r20
    26c6:	0f 90       	pop	r0
    26c8:	0f be       	out	0x3f, r0	; 63
    26ca:	0f 90       	pop	r0
    26cc:	1f 90       	pop	r1
    26ce:	18 95       	reti

000026d0 <_ZN12SimpleTimer16millisEv>:
    26d0:	60 91 05 08 	lds	r22, 0x0805	; 0x800805 <_ZL11GlobalCount>
    26d4:	70 91 06 08 	lds	r23, 0x0806	; 0x800806 <_ZL11GlobalCount+0x1>
    26d8:	80 91 07 08 	lds	r24, 0x0807	; 0x800807 <_ZL11GlobalCount+0x2>
    26dc:	90 91 08 08 	lds	r25, 0x0808	; 0x800808 <_ZL11GlobalCount+0x3>
    26e0:	08 95       	ret

000026e2 <_ZN12SimpleTimer15startEv>:
    26e2:	ef e6       	ldi	r30, 0x6F	; 111
    26e4:	f0 e0       	ldi	r31, 0x00	; 0
    26e6:	80 81       	ld	r24, Z
    26e8:	81 60       	ori	r24, 0x01	; 1
    26ea:	80 83       	st	Z, r24
    26ec:	e1 e8       	ldi	r30, 0x81	; 129
    26ee:	f0 e0       	ldi	r31, 0x00	; 0
    26f0:	80 81       	ld	r24, Z
    26f2:	81 60       	ori	r24, 0x01	; 1
    26f4:	80 83       	st	Z, r24
    26f6:	08 95       	ret

000026f8 <_ZN12SimpleTimer1C1Ev>:
    26f8:	f4 cf       	rjmp	.-24     	; 0x26e2 <_ZN12SimpleTimer15startEv>
    26fa:	08 95       	ret

000026fc <_ZN12SimpleTimer112set_durationEm>:
    26fc:	a0 e8       	ldi	r26, 0x80	; 128
    26fe:	be e3       	ldi	r27, 0x3E	; 62
    2700:	9a 01       	movw	r18, r20
    2702:	ab 01       	movw	r20, r22
    2704:	65 d5       	rcall	.+2762   	; 0x31d0 <__muluhisi3>
    2706:	2f ef       	ldi	r18, 0xFF	; 255
    2708:	3f ef       	ldi	r19, 0xFF	; 255
    270a:	40 e0       	ldi	r20, 0x00	; 0
    270c:	50 e0       	ldi	r21, 0x00	; 0
    270e:	26 d5       	rcall	.+2636   	; 0x315c <__udivmodsi4>
    2710:	20 93 01 08 	sts	0x0801, r18	; 0x800801 <_ZL9max_count>
    2714:	30 93 02 08 	sts	0x0802, r19	; 0x800802 <_ZL9max_count+0x1>
    2718:	40 93 03 08 	sts	0x0803, r20	; 0x800803 <_ZL9max_count+0x2>
    271c:	50 93 04 08 	sts	0x0804, r21	; 0x800804 <_ZL9max_count+0x3>
    2720:	08 95       	ret

00002722 <_Z21timer0_setClockSource12CLOCK_SOURCE>:
    2722:	e8 2f       	mov	r30, r24
    2724:	80 93 0d 08 	sts	0x080D, r24	; 0x80080d <_ZL2cs>
    2728:	85 b5       	in	r24, 0x25	; 37
    272a:	88 7f       	andi	r24, 0xF8	; 248
    272c:	85 bd       	out	0x25, r24	; 37
    272e:	8e 2f       	mov	r24, r30
    2730:	90 e0       	ldi	r25, 0x00	; 0
    2732:	88 30       	cpi	r24, 0x08	; 8
    2734:	91 05       	cpc	r25, r1
    2736:	10 f5       	brcc	.+68     	; 0x277c <_Z21timer0_setClockSource12CLOCK_SOURCE+0x5a>
    2738:	fc 01       	movw	r30, r24
    273a:	e8 56       	subi	r30, 0x68	; 104
    273c:	ff 4f       	sbci	r31, 0xFF	; 255
    273e:	30 c5       	rjmp	.+2656   	; 0x31a0 <__tablejump2__>
    2740:	85 b5       	in	r24, 0x25	; 37
    2742:	85 bd       	out	0x25, r24	; 37
    2744:	08 95       	ret
    2746:	85 b5       	in	r24, 0x25	; 37
    2748:	81 60       	ori	r24, 0x01	; 1
    274a:	85 bd       	out	0x25, r24	; 37
    274c:	08 95       	ret
    274e:	85 b5       	in	r24, 0x25	; 37
    2750:	82 60       	ori	r24, 0x02	; 2
    2752:	85 bd       	out	0x25, r24	; 37
    2754:	08 95       	ret
    2756:	85 b5       	in	r24, 0x25	; 37
    2758:	83 60       	ori	r24, 0x03	; 3
    275a:	85 bd       	out	0x25, r24	; 37
    275c:	08 95       	ret
    275e:	85 b5       	in	r24, 0x25	; 37
    2760:	84 60       	ori	r24, 0x04	; 4
    2762:	85 bd       	out	0x25, r24	; 37
    2764:	08 95       	ret
    2766:	85 b5       	in	r24, 0x25	; 37
    2768:	85 60       	ori	r24, 0x05	; 5
    276a:	85 bd       	out	0x25, r24	; 37
    276c:	08 95       	ret
    276e:	85 b5       	in	r24, 0x25	; 37
    2770:	86 60       	ori	r24, 0x06	; 6
    2772:	85 bd       	out	0x25, r24	; 37
    2774:	08 95       	ret
    2776:	85 b5       	in	r24, 0x25	; 37
    2778:	87 60       	ori	r24, 0x07	; 7
    277a:	85 bd       	out	0x25, r24	; 37
    277c:	08 95       	ret

0000277e <_Z36timer0_disableTimerOverflowInterruptv>:
    277e:	ee e6       	ldi	r30, 0x6E	; 110
    2780:	f0 e0       	ldi	r31, 0x00	; 0
    2782:	80 81       	ld	r24, Z
    2784:	8e 7f       	andi	r24, 0xFE	; 254
    2786:	80 83       	st	Z, r24
    2788:	08 95       	ret

0000278a <__vector_25>:
    278a:	1f 92       	push	r1
    278c:	0f 92       	push	r0
    278e:	0f b6       	in	r0, 0x3f	; 63
    2790:	0f 92       	push	r0
    2792:	11 24       	eor	r1, r1
    2794:	0b b6       	in	r0, 0x3b	; 59
    2796:	0f 92       	push	r0
    2798:	2f 93       	push	r18
    279a:	8f 93       	push	r24
    279c:	9f 93       	push	r25
    279e:	ef 93       	push	r30
    27a0:	ff 93       	push	r31
    27a2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    27a6:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    27aa:	8c 71       	andi	r24, 0x1C	; 28
    27ac:	e0 91 10 08 	lds	r30, 0x0810	; 0x800810 <_ZL12receive_head>
    27b0:	ef 5f       	subi	r30, 0xFF	; 255
    27b2:	ef 71       	andi	r30, 0x1F	; 31
    27b4:	90 91 0f 08 	lds	r25, 0x080F	; 0x80080f <_ZL12receive_tail>
    27b8:	e9 17       	cp	r30, r25
    27ba:	39 f0       	breq	.+14     	; 0x27ca <__vector_25+0x40>
    27bc:	e0 93 10 08 	sts	0x0810, r30	; 0x800810 <_ZL12receive_head>
    27c0:	f0 e0       	ldi	r31, 0x00	; 0
    27c2:	ef 5e       	subi	r30, 0xEF	; 239
    27c4:	f7 4f       	sbci	r31, 0xF7	; 247
    27c6:	20 83       	st	Z, r18
    27c8:	01 c0       	rjmp	.+2      	; 0x27cc <__vector_25+0x42>
    27ca:	82 e0       	ldi	r24, 0x02	; 2
    27cc:	90 91 0e 08 	lds	r25, 0x080E	; 0x80080e <_ZL18last_receive_error>
    27d0:	89 2b       	or	r24, r25
    27d2:	80 93 0e 08 	sts	0x080E, r24	; 0x80080e <_ZL18last_receive_error>
    27d6:	ff 91       	pop	r31
    27d8:	ef 91       	pop	r30
    27da:	9f 91       	pop	r25
    27dc:	8f 91       	pop	r24
    27de:	2f 91       	pop	r18
    27e0:	0f 90       	pop	r0
    27e2:	0b be       	out	0x3b, r0	; 59
    27e4:	0f 90       	pop	r0
    27e6:	0f be       	out	0x3f, r0	; 63
    27e8:	0f 90       	pop	r0
    27ea:	1f 90       	pop	r1
    27ec:	18 95       	reti

000027ee <__vector_26>:
    27ee:	1f 92       	push	r1
    27f0:	0f 92       	push	r0
    27f2:	0f b6       	in	r0, 0x3f	; 63
    27f4:	0f 92       	push	r0
    27f6:	11 24       	eor	r1, r1
    27f8:	0b b6       	in	r0, 0x3b	; 59
    27fa:	0f 92       	push	r0
    27fc:	8f 93       	push	r24
    27fe:	9f 93       	push	r25
    2800:	ef 93       	push	r30
    2802:	ff 93       	push	r31
    2804:	90 91 32 08 	lds	r25, 0x0832	; 0x800832 <_ZL13transmit_head>
    2808:	80 91 31 08 	lds	r24, 0x0831	; 0x800831 <_ZL13transmit_tail>
    280c:	98 17       	cp	r25, r24
    280e:	69 f0       	breq	.+26     	; 0x282a <__vector_26+0x3c>
    2810:	e0 91 31 08 	lds	r30, 0x0831	; 0x800831 <_ZL13transmit_tail>
    2814:	ef 5f       	subi	r30, 0xFF	; 255
    2816:	ef 71       	andi	r30, 0x1F	; 31
    2818:	e0 93 31 08 	sts	0x0831, r30	; 0x800831 <_ZL13transmit_tail>
    281c:	f0 e0       	ldi	r31, 0x00	; 0
    281e:	ed 5c       	subi	r30, 0xCD	; 205
    2820:	f7 4f       	sbci	r31, 0xF7	; 247
    2822:	80 81       	ld	r24, Z
    2824:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    2828:	05 c0       	rjmp	.+10     	; 0x2834 <__vector_26+0x46>
    282a:	e1 ec       	ldi	r30, 0xC1	; 193
    282c:	f0 e0       	ldi	r31, 0x00	; 0
    282e:	80 81       	ld	r24, Z
    2830:	8f 7d       	andi	r24, 0xDF	; 223
    2832:	80 83       	st	Z, r24
    2834:	ff 91       	pop	r31
    2836:	ef 91       	pop	r30
    2838:	9f 91       	pop	r25
    283a:	8f 91       	pop	r24
    283c:	0f 90       	pop	r0
    283e:	0b be       	out	0x3b, r0	; 59
    2840:	0f 90       	pop	r0
    2842:	0f be       	out	0x3f, r0	; 63
    2844:	0f 90       	pop	r0
    2846:	1f 90       	pop	r1
    2848:	18 95       	reti

0000284a <_Z16uart0_initializej>:
    284a:	10 92 32 08 	sts	0x0832, r1	; 0x800832 <_ZL13transmit_head>
    284e:	10 92 31 08 	sts	0x0831, r1	; 0x800831 <_ZL13transmit_tail>
    2852:	10 92 10 08 	sts	0x0810, r1	; 0x800810 <_ZL12receive_head>
    2856:	10 92 0f 08 	sts	0x080F, r1	; 0x80080f <_ZL12receive_tail>
    285a:	90 78       	andi	r25, 0x80	; 128
    285c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    2860:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    2864:	88 e9       	ldi	r24, 0x98	; 152
    2866:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    286a:	86 e0       	ldi	r24, 0x06	; 6
    286c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    2870:	08 95       	ret

00002872 <_Z15uart0_read_bytev>:
    2872:	90 91 10 08 	lds	r25, 0x0810	; 0x800810 <_ZL12receive_head>
    2876:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <_ZL12receive_tail>
    287a:	98 17       	cp	r25, r24
    287c:	a9 f0       	breq	.+42     	; 0x28a8 <_Z15uart0_read_bytev+0x36>
    287e:	80 91 0f 08 	lds	r24, 0x080F	; 0x80080f <_ZL12receive_tail>
    2882:	8f 5f       	subi	r24, 0xFF	; 255
    2884:	8f 71       	andi	r24, 0x1F	; 31
    2886:	e8 2f       	mov	r30, r24
    2888:	f0 e0       	ldi	r31, 0x00	; 0
    288a:	ef 5e       	subi	r30, 0xEF	; 239
    288c:	f7 4f       	sbci	r31, 0xF7	; 247
    288e:	20 81       	ld	r18, Z
    2890:	80 93 0f 08 	sts	0x080F, r24	; 0x80080f <_ZL12receive_tail>
    2894:	80 91 0e 08 	lds	r24, 0x080E	; 0x80080e <_ZL18last_receive_error>
    2898:	10 92 0e 08 	sts	0x080E, r1	; 0x80080e <_ZL18last_receive_error>
    289c:	90 e0       	ldi	r25, 0x00	; 0
    289e:	98 2f       	mov	r25, r24
    28a0:	88 27       	eor	r24, r24
    28a2:	82 0f       	add	r24, r18
    28a4:	91 1d       	adc	r25, r1
    28a6:	08 95       	ret
    28a8:	80 e0       	ldi	r24, 0x00	; 0
    28aa:	91 e0       	ldi	r25, 0x01	; 1
    28ac:	08 95       	ret

000028ae <_Z15uart0_send_byteh>:
    28ae:	20 91 32 08 	lds	r18, 0x0832	; 0x800832 <_ZL13transmit_head>
    28b2:	2f 5f       	subi	r18, 0xFF	; 255
    28b4:	2f 71       	andi	r18, 0x1F	; 31
    28b6:	90 91 31 08 	lds	r25, 0x0831	; 0x800831 <_ZL13transmit_tail>
    28ba:	29 17       	cp	r18, r25
    28bc:	e1 f3       	breq	.-8      	; 0x28b6 <_Z15uart0_send_byteh+0x8>
    28be:	e2 2f       	mov	r30, r18
    28c0:	f0 e0       	ldi	r31, 0x00	; 0
    28c2:	ed 5c       	subi	r30, 0xCD	; 205
    28c4:	f7 4f       	sbci	r31, 0xF7	; 247
    28c6:	80 83       	st	Z, r24
    28c8:	20 93 32 08 	sts	0x0832, r18	; 0x800832 <_ZL13transmit_head>
    28cc:	e1 ec       	ldi	r30, 0xC1	; 193
    28ce:	f0 e0       	ldi	r31, 0x00	; 0
    28d0:	80 81       	ld	r24, Z
    28d2:	80 62       	ori	r24, 0x20	; 32
    28d4:	80 83       	st	Z, r24
    28d6:	08 95       	ret

000028d8 <__vector_36>:
    28d8:	1f 92       	push	r1
    28da:	0f 92       	push	r0
    28dc:	0f b6       	in	r0, 0x3f	; 63
    28de:	0f 92       	push	r0
    28e0:	11 24       	eor	r1, r1
    28e2:	0b b6       	in	r0, 0x3b	; 59
    28e4:	0f 92       	push	r0
    28e6:	2f 93       	push	r18
    28e8:	8f 93       	push	r24
    28ea:	9f 93       	push	r25
    28ec:	ef 93       	push	r30
    28ee:	ff 93       	push	r31
    28f0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    28f4:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    28f8:	8c 71       	andi	r24, 0x1C	; 28
    28fa:	e0 91 55 08 	lds	r30, 0x0855	; 0x800855 <_ZL12receive_head>
    28fe:	ef 5f       	subi	r30, 0xFF	; 255
    2900:	90 91 54 08 	lds	r25, 0x0854	; 0x800854 <_ZL12receive_tail>
    2904:	e9 17       	cp	r30, r25
    2906:	39 f0       	breq	.+14     	; 0x2916 <__vector_36+0x3e>
    2908:	e0 93 55 08 	sts	0x0855, r30	; 0x800855 <_ZL12receive_head>
    290c:	f0 e0       	ldi	r31, 0x00	; 0
    290e:	ea 5a       	subi	r30, 0xAA	; 170
    2910:	f7 4f       	sbci	r31, 0xF7	; 247
    2912:	20 83       	st	Z, r18
    2914:	01 c0       	rjmp	.+2      	; 0x2918 <__vector_36+0x40>
    2916:	82 e0       	ldi	r24, 0x02	; 2
    2918:	90 91 53 08 	lds	r25, 0x0853	; 0x800853 <_ZL18last_receive_error>
    291c:	89 2b       	or	r24, r25
    291e:	80 93 53 08 	sts	0x0853, r24	; 0x800853 <_ZL18last_receive_error>
    2922:	ff 91       	pop	r31
    2924:	ef 91       	pop	r30
    2926:	9f 91       	pop	r25
    2928:	8f 91       	pop	r24
    292a:	2f 91       	pop	r18
    292c:	0f 90       	pop	r0
    292e:	0b be       	out	0x3b, r0	; 59
    2930:	0f 90       	pop	r0
    2932:	0f be       	out	0x3f, r0	; 63
    2934:	0f 90       	pop	r0
    2936:	1f 90       	pop	r1
    2938:	18 95       	reti

0000293a <__vector_37>:
    293a:	1f 92       	push	r1
    293c:	0f 92       	push	r0
    293e:	0f b6       	in	r0, 0x3f	; 63
    2940:	0f 92       	push	r0
    2942:	11 24       	eor	r1, r1
    2944:	0b b6       	in	r0, 0x3b	; 59
    2946:	0f 92       	push	r0
    2948:	8f 93       	push	r24
    294a:	9f 93       	push	r25
    294c:	ef 93       	push	r30
    294e:	ff 93       	push	r31
    2950:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <_ZL13transmit_head>
    2954:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <_ZL13transmit_tail>
    2958:	98 17       	cp	r25, r24
    295a:	61 f0       	breq	.+24     	; 0x2974 <__vector_37+0x3a>
    295c:	e0 91 56 09 	lds	r30, 0x0956	; 0x800956 <_ZL13transmit_tail>
    2960:	ef 5f       	subi	r30, 0xFF	; 255
    2962:	e0 93 56 09 	sts	0x0956, r30	; 0x800956 <_ZL13transmit_tail>
    2966:	f0 e0       	ldi	r31, 0x00	; 0
    2968:	e8 5a       	subi	r30, 0xA8	; 168
    296a:	f6 4f       	sbci	r31, 0xF6	; 246
    296c:	80 81       	ld	r24, Z
    296e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    2972:	05 c0       	rjmp	.+10     	; 0x297e <__vector_37+0x44>
    2974:	e9 ec       	ldi	r30, 0xC9	; 201
    2976:	f0 e0       	ldi	r31, 0x00	; 0
    2978:	80 81       	ld	r24, Z
    297a:	8f 7d       	andi	r24, 0xDF	; 223
    297c:	80 83       	st	Z, r24
    297e:	ff 91       	pop	r31
    2980:	ef 91       	pop	r30
    2982:	9f 91       	pop	r25
    2984:	8f 91       	pop	r24
    2986:	0f 90       	pop	r0
    2988:	0b be       	out	0x3b, r0	; 59
    298a:	0f 90       	pop	r0
    298c:	0f be       	out	0x3f, r0	; 63
    298e:	0f 90       	pop	r0
    2990:	1f 90       	pop	r1
    2992:	18 95       	reti

00002994 <_Z16uart1_initializej>:
    2994:	10 92 57 09 	sts	0x0957, r1	; 0x800957 <_ZL13transmit_head>
    2998:	10 92 56 09 	sts	0x0956, r1	; 0x800956 <_ZL13transmit_tail>
    299c:	10 92 55 08 	sts	0x0855, r1	; 0x800855 <_ZL12receive_head>
    29a0:	10 92 54 08 	sts	0x0854, r1	; 0x800854 <_ZL12receive_tail>
    29a4:	90 78       	andi	r25, 0x80	; 128
    29a6:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    29aa:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    29ae:	88 e9       	ldi	r24, 0x98	; 152
    29b0:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    29b4:	86 e0       	ldi	r24, 0x06	; 6
    29b6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>
    29ba:	08 95       	ret

000029bc <_Z15uart1_read_bytev>:
    29bc:	90 91 55 08 	lds	r25, 0x0855	; 0x800855 <_ZL12receive_head>
    29c0:	80 91 54 08 	lds	r24, 0x0854	; 0x800854 <_ZL12receive_tail>
    29c4:	98 17       	cp	r25, r24
    29c6:	a1 f0       	breq	.+40     	; 0x29f0 <_Z15uart1_read_bytev+0x34>
    29c8:	80 91 54 08 	lds	r24, 0x0854	; 0x800854 <_ZL12receive_tail>
    29cc:	8f 5f       	subi	r24, 0xFF	; 255
    29ce:	e8 2f       	mov	r30, r24
    29d0:	f0 e0       	ldi	r31, 0x00	; 0
    29d2:	ea 5a       	subi	r30, 0xAA	; 170
    29d4:	f7 4f       	sbci	r31, 0xF7	; 247
    29d6:	20 81       	ld	r18, Z
    29d8:	80 93 54 08 	sts	0x0854, r24	; 0x800854 <_ZL12receive_tail>
    29dc:	80 91 53 08 	lds	r24, 0x0853	; 0x800853 <_ZL18last_receive_error>
    29e0:	10 92 53 08 	sts	0x0853, r1	; 0x800853 <_ZL18last_receive_error>
    29e4:	90 e0       	ldi	r25, 0x00	; 0
    29e6:	98 2f       	mov	r25, r24
    29e8:	88 27       	eor	r24, r24
    29ea:	82 0f       	add	r24, r18
    29ec:	91 1d       	adc	r25, r1
    29ee:	08 95       	ret
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	91 e0       	ldi	r25, 0x01	; 1
    29f4:	08 95       	ret

000029f6 <_Z15uart1_send_byteh>:
    29f6:	20 91 57 09 	lds	r18, 0x0957	; 0x800957 <_ZL13transmit_head>
    29fa:	2f 5f       	subi	r18, 0xFF	; 255
    29fc:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <_ZL13transmit_tail>
    2a00:	29 17       	cp	r18, r25
    2a02:	e1 f3       	breq	.-8      	; 0x29fc <_Z15uart1_send_byteh+0x6>
    2a04:	e2 2f       	mov	r30, r18
    2a06:	f0 e0       	ldi	r31, 0x00	; 0
    2a08:	e8 5a       	subi	r30, 0xA8	; 168
    2a0a:	f6 4f       	sbci	r31, 0xF6	; 246
    2a0c:	80 83       	st	Z, r24
    2a0e:	20 93 57 09 	sts	0x0957, r18	; 0x800957 <_ZL13transmit_head>
    2a12:	e9 ec       	ldi	r30, 0xC9	; 201
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	80 81       	ld	r24, Z
    2a18:	80 62       	ori	r24, 0x20	; 32
    2a1a:	80 83       	st	Z, r24
    2a1c:	08 95       	ret

00002a1e <__vector_51>:
    2a1e:	1f 92       	push	r1
    2a20:	0f 92       	push	r0
    2a22:	0f b6       	in	r0, 0x3f	; 63
    2a24:	0f 92       	push	r0
    2a26:	11 24       	eor	r1, r1
    2a28:	0b b6       	in	r0, 0x3b	; 59
    2a2a:	0f 92       	push	r0
    2a2c:	2f 93       	push	r18
    2a2e:	8f 93       	push	r24
    2a30:	9f 93       	push	r25
    2a32:	ef 93       	push	r30
    2a34:	ff 93       	push	r31
    2a36:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7e00d0>
    2a3a:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
    2a3e:	8c 71       	andi	r24, 0x1C	; 28
    2a40:	e0 91 5a 0a 	lds	r30, 0x0A5A	; 0x800a5a <_ZL12receive_head>
    2a44:	ef 5f       	subi	r30, 0xFF	; 255
    2a46:	ef 71       	andi	r30, 0x1F	; 31
    2a48:	90 91 59 0a 	lds	r25, 0x0A59	; 0x800a59 <_ZL12receive_tail>
    2a4c:	e9 17       	cp	r30, r25
    2a4e:	39 f0       	breq	.+14     	; 0x2a5e <__vector_51+0x40>
    2a50:	e0 93 5a 0a 	sts	0x0A5A, r30	; 0x800a5a <_ZL12receive_head>
    2a54:	f0 e0       	ldi	r31, 0x00	; 0
    2a56:	e5 5a       	subi	r30, 0xA5	; 165
    2a58:	f5 4f       	sbci	r31, 0xF5	; 245
    2a5a:	20 83       	st	Z, r18
    2a5c:	01 c0       	rjmp	.+2      	; 0x2a60 <__vector_51+0x42>
    2a5e:	82 e0       	ldi	r24, 0x02	; 2
    2a60:	90 91 58 0a 	lds	r25, 0x0A58	; 0x800a58 <_ZL18last_receive_error>
    2a64:	89 2b       	or	r24, r25
    2a66:	80 93 58 0a 	sts	0x0A58, r24	; 0x800a58 <_ZL18last_receive_error>
    2a6a:	ff 91       	pop	r31
    2a6c:	ef 91       	pop	r30
    2a6e:	9f 91       	pop	r25
    2a70:	8f 91       	pop	r24
    2a72:	2f 91       	pop	r18
    2a74:	0f 90       	pop	r0
    2a76:	0b be       	out	0x3b, r0	; 59
    2a78:	0f 90       	pop	r0
    2a7a:	0f be       	out	0x3f, r0	; 63
    2a7c:	0f 90       	pop	r0
    2a7e:	1f 90       	pop	r1
    2a80:	18 95       	reti

00002a82 <__vector_52>:
    2a82:	1f 92       	push	r1
    2a84:	0f 92       	push	r0
    2a86:	0f b6       	in	r0, 0x3f	; 63
    2a88:	0f 92       	push	r0
    2a8a:	11 24       	eor	r1, r1
    2a8c:	0b b6       	in	r0, 0x3b	; 59
    2a8e:	0f 92       	push	r0
    2a90:	8f 93       	push	r24
    2a92:	9f 93       	push	r25
    2a94:	ef 93       	push	r30
    2a96:	ff 93       	push	r31
    2a98:	90 91 7c 0a 	lds	r25, 0x0A7C	; 0x800a7c <_ZL13transmit_head>
    2a9c:	80 91 7b 0a 	lds	r24, 0x0A7B	; 0x800a7b <_ZL13transmit_tail>
    2aa0:	98 17       	cp	r25, r24
    2aa2:	69 f0       	breq	.+26     	; 0x2abe <__vector_52+0x3c>
    2aa4:	e0 91 7b 0a 	lds	r30, 0x0A7B	; 0x800a7b <_ZL13transmit_tail>
    2aa8:	ef 5f       	subi	r30, 0xFF	; 255
    2aaa:	ef 71       	andi	r30, 0x1F	; 31
    2aac:	e0 93 7b 0a 	sts	0x0A7B, r30	; 0x800a7b <_ZL13transmit_tail>
    2ab0:	f0 e0       	ldi	r31, 0x00	; 0
    2ab2:	e3 58       	subi	r30, 0x83	; 131
    2ab4:	f5 4f       	sbci	r31, 0xF5	; 245
    2ab6:	80 81       	ld	r24, Z
    2ab8:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
    2abc:	05 c0       	rjmp	.+10     	; 0x2ac8 <__vector_52+0x46>
    2abe:	e1 ed       	ldi	r30, 0xD1	; 209
    2ac0:	f0 e0       	ldi	r31, 0x00	; 0
    2ac2:	80 81       	ld	r24, Z
    2ac4:	8f 7d       	andi	r24, 0xDF	; 223
    2ac6:	80 83       	st	Z, r24
    2ac8:	ff 91       	pop	r31
    2aca:	ef 91       	pop	r30
    2acc:	9f 91       	pop	r25
    2ace:	8f 91       	pop	r24
    2ad0:	0f 90       	pop	r0
    2ad2:	0b be       	out	0x3b, r0	; 59
    2ad4:	0f 90       	pop	r0
    2ad6:	0f be       	out	0x3f, r0	; 63
    2ad8:	0f 90       	pop	r0
    2ada:	1f 90       	pop	r1
    2adc:	18 95       	reti

00002ade <_Z16uart2_initializej>:
    2ade:	10 92 7c 0a 	sts	0x0A7C, r1	; 0x800a7c <_ZL13transmit_head>
    2ae2:	10 92 7b 0a 	sts	0x0A7B, r1	; 0x800a7b <_ZL13transmit_tail>
    2ae6:	10 92 5a 0a 	sts	0x0A5A, r1	; 0x800a5a <_ZL12receive_head>
    2aea:	10 92 59 0a 	sts	0x0A59, r1	; 0x800a59 <_ZL12receive_tail>
    2aee:	90 78       	andi	r25, 0x80	; 128
    2af0:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7e00d5>
    2af4:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7e00d4>
    2af8:	88 e9       	ldi	r24, 0x98	; 152
    2afa:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7e00d1>
    2afe:	86 e0       	ldi	r24, 0x06	; 6
    2b00:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7e00d2>
    2b04:	60 e0       	ldi	r22, 0x00	; 0
    2b06:	70 e0       	ldi	r23, 0x00	; 0
    2b08:	8f eb       	ldi	r24, 0xBF	; 191
    2b0a:	95 e1       	ldi	r25, 0x15	; 21
    2b0c:	6b d3       	rcall	.+1750   	; 0x31e4 <fdevopen>
    2b0e:	90 93 e6 0a 	sts	0x0AE6, r25	; 0x800ae6 <__iob+0x3>
    2b12:	80 93 e5 0a 	sts	0x0AE5, r24	; 0x800ae5 <__iob+0x2>
    2b16:	08 95       	ret

00002b18 <_Z15uart2_read_bytev>:
    2b18:	90 91 5a 0a 	lds	r25, 0x0A5A	; 0x800a5a <_ZL12receive_head>
    2b1c:	80 91 59 0a 	lds	r24, 0x0A59	; 0x800a59 <_ZL12receive_tail>
    2b20:	98 17       	cp	r25, r24
    2b22:	a9 f0       	breq	.+42     	; 0x2b4e <_Z15uart2_read_bytev+0x36>
    2b24:	80 91 59 0a 	lds	r24, 0x0A59	; 0x800a59 <_ZL12receive_tail>
    2b28:	8f 5f       	subi	r24, 0xFF	; 255
    2b2a:	8f 71       	andi	r24, 0x1F	; 31
    2b2c:	e8 2f       	mov	r30, r24
    2b2e:	f0 e0       	ldi	r31, 0x00	; 0
    2b30:	e5 5a       	subi	r30, 0xA5	; 165
    2b32:	f5 4f       	sbci	r31, 0xF5	; 245
    2b34:	20 81       	ld	r18, Z
    2b36:	80 93 59 0a 	sts	0x0A59, r24	; 0x800a59 <_ZL12receive_tail>
    2b3a:	80 91 58 0a 	lds	r24, 0x0A58	; 0x800a58 <_ZL18last_receive_error>
    2b3e:	10 92 58 0a 	sts	0x0A58, r1	; 0x800a58 <_ZL18last_receive_error>
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	98 2f       	mov	r25, r24
    2b46:	88 27       	eor	r24, r24
    2b48:	82 0f       	add	r24, r18
    2b4a:	91 1d       	adc	r25, r1
    2b4c:	08 95       	ret
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	91 e0       	ldi	r25, 0x01	; 1
    2b52:	08 95       	ret

00002b54 <_Z15uart2_send_byteh>:
    2b54:	20 91 7c 0a 	lds	r18, 0x0A7C	; 0x800a7c <_ZL13transmit_head>
    2b58:	2f 5f       	subi	r18, 0xFF	; 255
    2b5a:	2f 71       	andi	r18, 0x1F	; 31
    2b5c:	90 91 7b 0a 	lds	r25, 0x0A7B	; 0x800a7b <_ZL13transmit_tail>
    2b60:	29 17       	cp	r18, r25
    2b62:	e1 f3       	breq	.-8      	; 0x2b5c <_Z15uart2_send_byteh+0x8>
    2b64:	e2 2f       	mov	r30, r18
    2b66:	f0 e0       	ldi	r31, 0x00	; 0
    2b68:	e3 58       	subi	r30, 0x83	; 131
    2b6a:	f5 4f       	sbci	r31, 0xF5	; 245
    2b6c:	80 83       	st	Z, r24
    2b6e:	20 93 7c 0a 	sts	0x0A7C, r18	; 0x800a7c <_ZL13transmit_head>
    2b72:	e1 ed       	ldi	r30, 0xD1	; 209
    2b74:	f0 e0       	ldi	r31, 0x00	; 0
    2b76:	80 81       	ld	r24, Z
    2b78:	80 62       	ori	r24, 0x20	; 32
    2b7a:	80 83       	st	Z, r24
    2b7c:	08 95       	ret

00002b7e <uart_putchar>:
    2b7e:	8a 30       	cpi	r24, 0x0A	; 10
    2b80:	11 f0       	breq	.+4      	; 0x2b86 <uart_putchar+0x8>
    2b82:	e8 df       	rcall	.-48     	; 0x2b54 <_Z15uart2_send_byteh>
    2b84:	02 c0       	rjmp	.+4      	; 0x2b8a <uart_putchar+0xc>
    2b86:	8d e0       	ldi	r24, 0x0D	; 13
    2b88:	e5 df       	rcall	.-54     	; 0x2b54 <_Z15uart2_send_byteh>
    2b8a:	80 e0       	ldi	r24, 0x00	; 0
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	08 95       	ret

00002b90 <__vector_54>:
static volatile uint8_t last_receive_error;

/*------------------------ Interrupt Service Routines ------------------------*/

ISR (UART3_RECEIVE_INTERRUPT)
{
    2b90:	1f 92       	push	r1
    2b92:	0f 92       	push	r0
    2b94:	0f b6       	in	r0, 0x3f	; 63
    2b96:	0f 92       	push	r0
    2b98:	11 24       	eor	r1, r1
    2b9a:	0b b6       	in	r0, 0x3b	; 59
    2b9c:	0f 92       	push	r0
    2b9e:	2f 93       	push	r18
    2ba0:	8f 93       	push	r24
    2ba2:	9f 93       	push	r25
    2ba4:	ef 93       	push	r30
    2ba6:	ff 93       	push	r31
	uint8_t new_head, data, status, error;
	status = UART3_STATUS;
    2ba8:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__DATA_REGION_ORIGIN__+0x30>
	data = UART3_DATA;
    2bac:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__DATA_REGION_ORIGIN__+0x36>

	// detect frame error, data overrun, or parity error
	error = status & ((1 << FE3) | (1 << DOR3)| (1 << UPE3));

	new_head = (receive_head + 1) & UART3_BUFFER_MASK;
    2bb0:	e0 91 a0 0a 	lds	r30, 0x0AA0	; 0x800aa0 <_ZL12receive_head>
    2bb4:	ef 5f       	subi	r30, 0xFF	; 255
    2bb6:	ef 71       	andi	r30, 0x1F	; 31
	if (new_head == receive_tail)
    2bb8:	90 91 9f 0a 	lds	r25, 0x0A9F	; 0x800a9f <_ZL12receive_tail>
    2bbc:	e9 17       	cp	r30, r25
    2bbe:	41 f0       	breq	.+16     	; 0x2bd0 <__vector_54+0x40>
	uint8_t new_head, data, status, error;
	status = UART3_STATUS;
	data = UART3_DATA;

	// detect frame error, data overrun, or parity error
	error = status & ((1 << FE3) | (1 << DOR3)| (1 << UPE3));
    2bc0:	8c 71       	andi	r24, 0x1C	; 28
	new_head = (receive_head + 1) & UART3_BUFFER_MASK;
	if (new_head == receive_tail)
	error = UART3_BUFFER_OVERFLOW >> 8;
	else
	{
		receive_head = new_head;
    2bc2:	e0 93 a0 0a 	sts	0x0AA0, r30	; 0x800aa0 <_ZL12receive_head>
		receive_buffer[new_head] = data;
    2bc6:	f0 e0       	ldi	r31, 0x00	; 0
    2bc8:	ef 55       	subi	r30, 0x5F	; 95
    2bca:	f5 4f       	sbci	r31, 0xF5	; 245
    2bcc:	20 83       	st	Z, r18
    2bce:	01 c0       	rjmp	.+2      	; 0x2bd2 <__vector_54+0x42>
	// detect frame error, data overrun, or parity error
	error = status & ((1 << FE3) | (1 << DOR3)| (1 << UPE3));

	new_head = (receive_head + 1) & UART3_BUFFER_MASK;
	if (new_head == receive_tail)
	error = UART3_BUFFER_OVERFLOW >> 8;
    2bd0:	82 e0       	ldi	r24, 0x02	; 2
	else
	{
		receive_head = new_head;
		receive_buffer[new_head] = data;
	}
	if(receive_count < UART3_BUFFER_SIZE -1)
    2bd2:	90 91 9e 0a 	lds	r25, 0x0A9E	; 0x800a9e <_ZL13receive_count>
    2bd6:	9f 31       	cpi	r25, 0x1F	; 31
    2bd8:	28 f4       	brcc	.+10     	; 0x2be4 <__vector_54+0x54>
	receive_count++;
    2bda:	90 91 9e 0a 	lds	r25, 0x0A9E	; 0x800a9e <_ZL13receive_count>
    2bde:	9f 5f       	subi	r25, 0xFF	; 255
    2be0:	90 93 9e 0a 	sts	0x0A9E, r25	; 0x800a9e <_ZL13receive_count>
	last_receive_error |= error;
    2be4:	90 91 9d 0a 	lds	r25, 0x0A9D	; 0x800a9d <_ZL18last_receive_error>
    2be8:	89 2b       	or	r24, r25
    2bea:	80 93 9d 0a 	sts	0x0A9D, r24	; 0x800a9d <_ZL18last_receive_error>
}
    2bee:	ff 91       	pop	r31
    2bf0:	ef 91       	pop	r30
    2bf2:	9f 91       	pop	r25
    2bf4:	8f 91       	pop	r24
    2bf6:	2f 91       	pop	r18
    2bf8:	0f 90       	pop	r0
    2bfa:	0b be       	out	0x3b, r0	; 59
    2bfc:	0f 90       	pop	r0
    2bfe:	0f be       	out	0x3f, r0	; 63
    2c00:	0f 90       	pop	r0
    2c02:	1f 90       	pop	r1
    2c04:	18 95       	reti

00002c06 <__vector_55>:

ISR (UART3_TRANSMIT_INTERRUPT)
{
    2c06:	1f 92       	push	r1
    2c08:	0f 92       	push	r0
    2c0a:	0f b6       	in	r0, 0x3f	; 63
    2c0c:	0f 92       	push	r0
    2c0e:	11 24       	eor	r1, r1
    2c10:	0b b6       	in	r0, 0x3b	; 59
    2c12:	0f 92       	push	r0
    2c14:	8f 93       	push	r24
    2c16:	9f 93       	push	r25
    2c18:	ef 93       	push	r30
    2c1a:	ff 93       	push	r31
	uint8_t new_tail;
	if (transmit_head != transmit_tail)
    2c1c:	90 91 c2 0a 	lds	r25, 0x0AC2	; 0x800ac2 <_ZL13transmit_head>
    2c20:	80 91 c1 0a 	lds	r24, 0x0AC1	; 0x800ac1 <_ZL13transmit_tail>
    2c24:	98 17       	cp	r25, r24
    2c26:	69 f0       	breq	.+26     	; 0x2c42 <__vector_55+0x3c>
	{
		new_tail = (transmit_tail + 1) & UART3_BUFFER_MASK;
    2c28:	e0 91 c1 0a 	lds	r30, 0x0AC1	; 0x800ac1 <_ZL13transmit_tail>
    2c2c:	ef 5f       	subi	r30, 0xFF	; 255
    2c2e:	ef 71       	andi	r30, 0x1F	; 31
		transmit_tail = new_tail;
    2c30:	e0 93 c1 0a 	sts	0x0AC1, r30	; 0x800ac1 <_ZL13transmit_tail>
		UART3_DATA = transmit_buffer[new_tail]; // transmit
    2c34:	f0 e0       	ldi	r31, 0x00	; 0
    2c36:	ed 53       	subi	r30, 0x3D	; 61
    2c38:	f5 4f       	sbci	r31, 0xF5	; 245
    2c3a:	80 81       	ld	r24, Z
    2c3c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__DATA_REGION_ORIGIN__+0x36>
    2c40:	05 c0       	rjmp	.+10     	; 0x2c4c <__vector_55+0x46>
	}
	else
	UART3_CONTROL_B &= ~(1 << UDRIE3); // buffer empty so end transmission
    2c42:	e1 e3       	ldi	r30, 0x31	; 49
    2c44:	f1 e0       	ldi	r31, 0x01	; 1
    2c46:	80 81       	ld	r24, Z
    2c48:	8f 7d       	andi	r24, 0xDF	; 223
    2c4a:	80 83       	st	Z, r24
}
    2c4c:	ff 91       	pop	r31
    2c4e:	ef 91       	pop	r30
    2c50:	9f 91       	pop	r25
    2c52:	8f 91       	pop	r24
    2c54:	0f 90       	pop	r0
    2c56:	0b be       	out	0x3b, r0	; 59
    2c58:	0f 90       	pop	r0
    2c5a:	0f be       	out	0x3f, r0	; 63
    2c5c:	0f 90       	pop	r0
    2c5e:	1f 90       	pop	r1
    2c60:	18 95       	reti

00002c62 <_Z16uart3_initializej>:

/*------------------------------ Initialization ------------------------------*/

void uart3_initialize (uint16_t baudrate)
{
	transmit_head = 0;
    2c62:	10 92 c2 0a 	sts	0x0AC2, r1	; 0x800ac2 <_ZL13transmit_head>
	transmit_tail = 0;
    2c66:	10 92 c1 0a 	sts	0x0AC1, r1	; 0x800ac1 <_ZL13transmit_tail>
	receive_head = 0;
    2c6a:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <_ZL12receive_head>
	receive_tail = 0;
    2c6e:	10 92 9f 0a 	sts	0x0A9F, r1	; 0x800a9f <_ZL12receive_tail>
	receive_count = 0;
    2c72:	10 92 9e 0a 	sts	0x0A9E, r1	; 0x800a9e <_ZL13receive_count>


	UBRR3H = (uint8_t)((baudrate >> 8) & 0x80) ;
    2c76:	90 78       	andi	r25, 0x80	; 128
    2c78:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__DATA_REGION_ORIGIN__+0x35>
	UBRR3L = (uint8_t)(baudrate & 0x00FF);
    2c7c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__DATA_REGION_ORIGIN__+0x34>

	// set enable bits
	UART3_CONTROL_B = (1 << RXCIE3) | (1 << RXEN3) | (1 << TXEN3);
    2c80:	88 e9       	ldi	r24, 0x98	; 152
    2c82:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__DATA_REGION_ORIGIN__+0x31>

	// set frame format (asynchronous, 8 bits of data, no parity bit, 1 stop bit)
	UART3_CONTROL_C = (1 << UCSZ31) | (1 << UCSZ30);
    2c86:	86 e0       	ldi	r24, 0x06	; 6
    2c88:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__DATA_REGION_ORIGIN__+0x32>
    2c8c:	08 95       	ret

00002c8e <_Z21uart3_Buffer_Rx_Clearv>:
}

/*-------------------- Functions for Reading from Buffer ---------------------*/
void uart3_Buffer_Rx_Clear()
{
	receive_tail = 0;
    2c8e:	10 92 9f 0a 	sts	0x0A9F, r1	; 0x800a9f <_ZL12receive_tail>
	receive_head = 0;
    2c92:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <_ZL12receive_head>
	receive_count = 0;
    2c96:	10 92 9e 0a 	sts	0x0A9E, r1	; 0x800a9e <_ZL13receive_count>
    2c9a:	08 95       	ret

00002c9c <_Z22uart3_ReceiveAvailablev>:
}
uint8_t uart3_ReceiveAvailable()
{
	return receive_count;
    2c9c:	80 91 9e 0a 	lds	r24, 0x0A9E	; 0x800a9e <_ZL13receive_count>
}
    2ca0:	08 95       	ret

00002ca2 <_Z15uart3_read_bytev>:
uint16_t uart3_read_byte ()
{
	uint8_t new_tail;
	uint8_t data;
	uint8_t error;
	if (receive_head == receive_tail)
    2ca2:	90 91 a0 0a 	lds	r25, 0x0AA0	; 0x800aa0 <_ZL12receive_head>
    2ca6:	80 91 9f 0a 	lds	r24, 0x0A9F	; 0x800a9f <_ZL12receive_tail>
    2caa:	98 17       	cp	r25, r24
    2cac:	f1 f0       	breq	.+60     	; 0x2cea <_Z15uart3_read_bytev+0x48>
	return UART3_NO_DATA;
	new_tail = (receive_tail + 1) & UART3_BUFFER_MASK;
    2cae:	80 91 9f 0a 	lds	r24, 0x0A9F	; 0x800a9f <_ZL12receive_tail>
    2cb2:	8f 5f       	subi	r24, 0xFF	; 255
    2cb4:	8f 71       	andi	r24, 0x1F	; 31
	data = receive_buffer[new_tail];
    2cb6:	e8 2f       	mov	r30, r24
    2cb8:	f0 e0       	ldi	r31, 0x00	; 0
    2cba:	ef 55       	subi	r30, 0x5F	; 95
    2cbc:	f5 4f       	sbci	r31, 0xF5	; 245
    2cbe:	20 81       	ld	r18, Z
	//  printf("tail: %d\n",new_tail);
	//  for(int i = 0; i < UART3_BUFFER_SIZE -1; i++)
	//    printf("Data%d: %d\n",i,receive_buffer[i]);
	receive_tail = new_tail;
    2cc0:	80 93 9f 0a 	sts	0x0A9F, r24	; 0x800a9f <_ZL12receive_tail>
	if(receive_count !=0)
    2cc4:	80 91 9e 0a 	lds	r24, 0x0A9E	; 0x800a9e <_ZL13receive_count>
    2cc8:	88 23       	and	r24, r24
    2cca:	29 f0       	breq	.+10     	; 0x2cd6 <_Z15uart3_read_bytev+0x34>
	receive_count--;
    2ccc:	80 91 9e 0a 	lds	r24, 0x0A9E	; 0x800a9e <_ZL13receive_count>
    2cd0:	81 50       	subi	r24, 0x01	; 1
    2cd2:	80 93 9e 0a 	sts	0x0A9E, r24	; 0x800a9e <_ZL13receive_count>
	error = last_receive_error;
    2cd6:	80 91 9d 0a 	lds	r24, 0x0A9D	; 0x800a9d <_ZL18last_receive_error>
	last_receive_error = 0;
    2cda:	10 92 9d 0a 	sts	0x0A9D, r1	; 0x800a9d <_ZL18last_receive_error>
	return (error << 8) + data;
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	98 2f       	mov	r25, r24
    2ce2:	88 27       	eor	r24, r24
    2ce4:	82 0f       	add	r24, r18
    2ce6:	91 1d       	adc	r25, r1
    2ce8:	08 95       	ret
{
	uint8_t new_tail;
	uint8_t data;
	uint8_t error;
	if (receive_head == receive_tail)
	return UART3_NO_DATA;
    2cea:	80 e0       	ldi	r24, 0x00	; 0
    2cec:	91 e0       	ldi	r25, 0x01	; 1
	if(receive_count !=0)
	receive_count--;
	error = last_receive_error;
	last_receive_error = 0;
	return (error << 8) + data;
}
    2cee:	08 95       	ret

00002cf0 <_Z15uart3_send_byteh>:
/*--------------------- Functions for Writing to Buffer ----------------------*/

void uart3_send_byte (uint8_t data)
{
	uint8_t new_head;
	new_head  = (transmit_head + 1) & UART3_BUFFER_MASK;
    2cf0:	20 91 c2 0a 	lds	r18, 0x0AC2	; 0x800ac2 <_ZL13transmit_head>
    2cf4:	2f 5f       	subi	r18, 0xFF	; 255
    2cf6:	2f 71       	andi	r18, 0x1F	; 31
	while (new_head == transmit_tail) {} // wait for free space in buffer
    2cf8:	90 91 c1 0a 	lds	r25, 0x0AC1	; 0x800ac1 <_ZL13transmit_tail>
    2cfc:	29 17       	cp	r18, r25
    2cfe:	e1 f3       	breq	.-8      	; 0x2cf8 <_Z15uart3_send_byteh+0x8>
	transmit_buffer[new_head] = data;
    2d00:	e2 2f       	mov	r30, r18
    2d02:	f0 e0       	ldi	r31, 0x00	; 0
    2d04:	ed 53       	subi	r30, 0x3D	; 61
    2d06:	f5 4f       	sbci	r31, 0xF5	; 245
    2d08:	80 83       	st	Z, r24
	transmit_head = new_head;
    2d0a:	20 93 c2 0a 	sts	0x0AC2, r18	; 0x800ac2 <_ZL13transmit_head>
	UART3_CONTROL_B |= (1 << UDRIE3); // enable data register interrupt
    2d0e:	e1 e3       	ldi	r30, 0x31	; 49
    2d10:	f1 e0       	ldi	r31, 0x01	; 1
    2d12:	80 81       	ld	r24, Z
    2d14:	80 62       	ori	r24, 0x20	; 32
    2d16:	80 83       	st	Z, r24
    2d18:	08 95       	ret

00002d1a <__subsf3>:
    2d1a:	50 58       	subi	r21, 0x80	; 128

00002d1c <__addsf3>:
    2d1c:	bb 27       	eor	r27, r27
    2d1e:	aa 27       	eor	r26, r26
    2d20:	0e d0       	rcall	.+28     	; 0x2d3e <__addsf3x>
    2d22:	70 c1       	rjmp	.+736    	; 0x3004 <__fp_round>
    2d24:	61 d1       	rcall	.+706    	; 0x2fe8 <__fp_pscA>
    2d26:	30 f0       	brcs	.+12     	; 0x2d34 <__addsf3+0x18>
    2d28:	66 d1       	rcall	.+716    	; 0x2ff6 <__fp_pscB>
    2d2a:	20 f0       	brcs	.+8      	; 0x2d34 <__addsf3+0x18>
    2d2c:	31 f4       	brne	.+12     	; 0x2d3a <__addsf3+0x1e>
    2d2e:	9f 3f       	cpi	r25, 0xFF	; 255
    2d30:	11 f4       	brne	.+4      	; 0x2d36 <__addsf3+0x1a>
    2d32:	1e f4       	brtc	.+6      	; 0x2d3a <__addsf3+0x1e>
    2d34:	56 c1       	rjmp	.+684    	; 0x2fe2 <__fp_nan>
    2d36:	0e f4       	brtc	.+2      	; 0x2d3a <__addsf3+0x1e>
    2d38:	e0 95       	com	r30
    2d3a:	e7 fb       	bst	r30, 7
    2d3c:	4c c1       	rjmp	.+664    	; 0x2fd6 <__fp_inf>

00002d3e <__addsf3x>:
    2d3e:	e9 2f       	mov	r30, r25
    2d40:	72 d1       	rcall	.+740    	; 0x3026 <__fp_split3>
    2d42:	80 f3       	brcs	.-32     	; 0x2d24 <__addsf3+0x8>
    2d44:	ba 17       	cp	r27, r26
    2d46:	62 07       	cpc	r22, r18
    2d48:	73 07       	cpc	r23, r19
    2d4a:	84 07       	cpc	r24, r20
    2d4c:	95 07       	cpc	r25, r21
    2d4e:	18 f0       	brcs	.+6      	; 0x2d56 <__addsf3x+0x18>
    2d50:	71 f4       	brne	.+28     	; 0x2d6e <__addsf3x+0x30>
    2d52:	9e f5       	brtc	.+102    	; 0x2dba <__addsf3x+0x7c>
    2d54:	8a c1       	rjmp	.+788    	; 0x306a <__fp_zero>
    2d56:	0e f4       	brtc	.+2      	; 0x2d5a <__addsf3x+0x1c>
    2d58:	e0 95       	com	r30
    2d5a:	0b 2e       	mov	r0, r27
    2d5c:	ba 2f       	mov	r27, r26
    2d5e:	a0 2d       	mov	r26, r0
    2d60:	0b 01       	movw	r0, r22
    2d62:	b9 01       	movw	r22, r18
    2d64:	90 01       	movw	r18, r0
    2d66:	0c 01       	movw	r0, r24
    2d68:	ca 01       	movw	r24, r20
    2d6a:	a0 01       	movw	r20, r0
    2d6c:	11 24       	eor	r1, r1
    2d6e:	ff 27       	eor	r31, r31
    2d70:	59 1b       	sub	r21, r25
    2d72:	99 f0       	breq	.+38     	; 0x2d9a <__addsf3x+0x5c>
    2d74:	59 3f       	cpi	r21, 0xF9	; 249
    2d76:	50 f4       	brcc	.+20     	; 0x2d8c <__addsf3x+0x4e>
    2d78:	50 3e       	cpi	r21, 0xE0	; 224
    2d7a:	68 f1       	brcs	.+90     	; 0x2dd6 <__addsf3x+0x98>
    2d7c:	1a 16       	cp	r1, r26
    2d7e:	f0 40       	sbci	r31, 0x00	; 0
    2d80:	a2 2f       	mov	r26, r18
    2d82:	23 2f       	mov	r18, r19
    2d84:	34 2f       	mov	r19, r20
    2d86:	44 27       	eor	r20, r20
    2d88:	58 5f       	subi	r21, 0xF8	; 248
    2d8a:	f3 cf       	rjmp	.-26     	; 0x2d72 <__addsf3x+0x34>
    2d8c:	46 95       	lsr	r20
    2d8e:	37 95       	ror	r19
    2d90:	27 95       	ror	r18
    2d92:	a7 95       	ror	r26
    2d94:	f0 40       	sbci	r31, 0x00	; 0
    2d96:	53 95       	inc	r21
    2d98:	c9 f7       	brne	.-14     	; 0x2d8c <__addsf3x+0x4e>
    2d9a:	7e f4       	brtc	.+30     	; 0x2dba <__addsf3x+0x7c>
    2d9c:	1f 16       	cp	r1, r31
    2d9e:	ba 0b       	sbc	r27, r26
    2da0:	62 0b       	sbc	r22, r18
    2da2:	73 0b       	sbc	r23, r19
    2da4:	84 0b       	sbc	r24, r20
    2da6:	ba f0       	brmi	.+46     	; 0x2dd6 <__addsf3x+0x98>
    2da8:	91 50       	subi	r25, 0x01	; 1
    2daa:	a1 f0       	breq	.+40     	; 0x2dd4 <__addsf3x+0x96>
    2dac:	ff 0f       	add	r31, r31
    2dae:	bb 1f       	adc	r27, r27
    2db0:	66 1f       	adc	r22, r22
    2db2:	77 1f       	adc	r23, r23
    2db4:	88 1f       	adc	r24, r24
    2db6:	c2 f7       	brpl	.-16     	; 0x2da8 <__addsf3x+0x6a>
    2db8:	0e c0       	rjmp	.+28     	; 0x2dd6 <__addsf3x+0x98>
    2dba:	ba 0f       	add	r27, r26
    2dbc:	62 1f       	adc	r22, r18
    2dbe:	73 1f       	adc	r23, r19
    2dc0:	84 1f       	adc	r24, r20
    2dc2:	48 f4       	brcc	.+18     	; 0x2dd6 <__addsf3x+0x98>
    2dc4:	87 95       	ror	r24
    2dc6:	77 95       	ror	r23
    2dc8:	67 95       	ror	r22
    2dca:	b7 95       	ror	r27
    2dcc:	f7 95       	ror	r31
    2dce:	9e 3f       	cpi	r25, 0xFE	; 254
    2dd0:	08 f0       	brcs	.+2      	; 0x2dd4 <__addsf3x+0x96>
    2dd2:	b3 cf       	rjmp	.-154    	; 0x2d3a <__addsf3+0x1e>
    2dd4:	93 95       	inc	r25
    2dd6:	88 0f       	add	r24, r24
    2dd8:	08 f0       	brcs	.+2      	; 0x2ddc <__addsf3x+0x9e>
    2dda:	99 27       	eor	r25, r25
    2ddc:	ee 0f       	add	r30, r30
    2dde:	97 95       	ror	r25
    2de0:	87 95       	ror	r24
    2de2:	08 95       	ret

00002de4 <__cmpsf2>:
    2de4:	d4 d0       	rcall	.+424    	; 0x2f8e <__fp_cmp>
    2de6:	08 f4       	brcc	.+2      	; 0x2dea <__cmpsf2+0x6>
    2de8:	81 e0       	ldi	r24, 0x01	; 1
    2dea:	08 95       	ret

00002dec <__divsf3>:
    2dec:	0c d0       	rcall	.+24     	; 0x2e06 <__divsf3x>
    2dee:	0a c1       	rjmp	.+532    	; 0x3004 <__fp_round>
    2df0:	02 d1       	rcall	.+516    	; 0x2ff6 <__fp_pscB>
    2df2:	40 f0       	brcs	.+16     	; 0x2e04 <__divsf3+0x18>
    2df4:	f9 d0       	rcall	.+498    	; 0x2fe8 <__fp_pscA>
    2df6:	30 f0       	brcs	.+12     	; 0x2e04 <__divsf3+0x18>
    2df8:	21 f4       	brne	.+8      	; 0x2e02 <__divsf3+0x16>
    2dfa:	5f 3f       	cpi	r21, 0xFF	; 255
    2dfc:	19 f0       	breq	.+6      	; 0x2e04 <__divsf3+0x18>
    2dfe:	eb c0       	rjmp	.+470    	; 0x2fd6 <__fp_inf>
    2e00:	51 11       	cpse	r21, r1
    2e02:	34 c1       	rjmp	.+616    	; 0x306c <__fp_szero>
    2e04:	ee c0       	rjmp	.+476    	; 0x2fe2 <__fp_nan>

00002e06 <__divsf3x>:
    2e06:	0f d1       	rcall	.+542    	; 0x3026 <__fp_split3>
    2e08:	98 f3       	brcs	.-26     	; 0x2df0 <__divsf3+0x4>

00002e0a <__divsf3_pse>:
    2e0a:	99 23       	and	r25, r25
    2e0c:	c9 f3       	breq	.-14     	; 0x2e00 <__divsf3+0x14>
    2e0e:	55 23       	and	r21, r21
    2e10:	b1 f3       	breq	.-20     	; 0x2dfe <__divsf3+0x12>
    2e12:	95 1b       	sub	r25, r21
    2e14:	55 0b       	sbc	r21, r21
    2e16:	bb 27       	eor	r27, r27
    2e18:	aa 27       	eor	r26, r26
    2e1a:	62 17       	cp	r22, r18
    2e1c:	73 07       	cpc	r23, r19
    2e1e:	84 07       	cpc	r24, r20
    2e20:	38 f0       	brcs	.+14     	; 0x2e30 <__divsf3_pse+0x26>
    2e22:	9f 5f       	subi	r25, 0xFF	; 255
    2e24:	5f 4f       	sbci	r21, 0xFF	; 255
    2e26:	22 0f       	add	r18, r18
    2e28:	33 1f       	adc	r19, r19
    2e2a:	44 1f       	adc	r20, r20
    2e2c:	aa 1f       	adc	r26, r26
    2e2e:	a9 f3       	breq	.-22     	; 0x2e1a <__divsf3_pse+0x10>
    2e30:	33 d0       	rcall	.+102    	; 0x2e98 <__divsf3_pse+0x8e>
    2e32:	0e 2e       	mov	r0, r30
    2e34:	3a f0       	brmi	.+14     	; 0x2e44 <__divsf3_pse+0x3a>
    2e36:	e0 e8       	ldi	r30, 0x80	; 128
    2e38:	30 d0       	rcall	.+96     	; 0x2e9a <__divsf3_pse+0x90>
    2e3a:	91 50       	subi	r25, 0x01	; 1
    2e3c:	50 40       	sbci	r21, 0x00	; 0
    2e3e:	e6 95       	lsr	r30
    2e40:	00 1c       	adc	r0, r0
    2e42:	ca f7       	brpl	.-14     	; 0x2e36 <__divsf3_pse+0x2c>
    2e44:	29 d0       	rcall	.+82     	; 0x2e98 <__divsf3_pse+0x8e>
    2e46:	fe 2f       	mov	r31, r30
    2e48:	27 d0       	rcall	.+78     	; 0x2e98 <__divsf3_pse+0x8e>
    2e4a:	66 0f       	add	r22, r22
    2e4c:	77 1f       	adc	r23, r23
    2e4e:	88 1f       	adc	r24, r24
    2e50:	bb 1f       	adc	r27, r27
    2e52:	26 17       	cp	r18, r22
    2e54:	37 07       	cpc	r19, r23
    2e56:	48 07       	cpc	r20, r24
    2e58:	ab 07       	cpc	r26, r27
    2e5a:	b0 e8       	ldi	r27, 0x80	; 128
    2e5c:	09 f0       	breq	.+2      	; 0x2e60 <__divsf3_pse+0x56>
    2e5e:	bb 0b       	sbc	r27, r27
    2e60:	80 2d       	mov	r24, r0
    2e62:	bf 01       	movw	r22, r30
    2e64:	ff 27       	eor	r31, r31
    2e66:	93 58       	subi	r25, 0x83	; 131
    2e68:	5f 4f       	sbci	r21, 0xFF	; 255
    2e6a:	2a f0       	brmi	.+10     	; 0x2e76 <__divsf3_pse+0x6c>
    2e6c:	9e 3f       	cpi	r25, 0xFE	; 254
    2e6e:	51 05       	cpc	r21, r1
    2e70:	68 f0       	brcs	.+26     	; 0x2e8c <__divsf3_pse+0x82>
    2e72:	b1 c0       	rjmp	.+354    	; 0x2fd6 <__fp_inf>
    2e74:	fb c0       	rjmp	.+502    	; 0x306c <__fp_szero>
    2e76:	5f 3f       	cpi	r21, 0xFF	; 255
    2e78:	ec f3       	brlt	.-6      	; 0x2e74 <__divsf3_pse+0x6a>
    2e7a:	98 3e       	cpi	r25, 0xE8	; 232
    2e7c:	dc f3       	brlt	.-10     	; 0x2e74 <__divsf3_pse+0x6a>
    2e7e:	86 95       	lsr	r24
    2e80:	77 95       	ror	r23
    2e82:	67 95       	ror	r22
    2e84:	b7 95       	ror	r27
    2e86:	f7 95       	ror	r31
    2e88:	9f 5f       	subi	r25, 0xFF	; 255
    2e8a:	c9 f7       	brne	.-14     	; 0x2e7e <__divsf3_pse+0x74>
    2e8c:	88 0f       	add	r24, r24
    2e8e:	91 1d       	adc	r25, r1
    2e90:	96 95       	lsr	r25
    2e92:	87 95       	ror	r24
    2e94:	97 f9       	bld	r25, 7
    2e96:	08 95       	ret
    2e98:	e1 e0       	ldi	r30, 0x01	; 1
    2e9a:	66 0f       	add	r22, r22
    2e9c:	77 1f       	adc	r23, r23
    2e9e:	88 1f       	adc	r24, r24
    2ea0:	bb 1f       	adc	r27, r27
    2ea2:	62 17       	cp	r22, r18
    2ea4:	73 07       	cpc	r23, r19
    2ea6:	84 07       	cpc	r24, r20
    2ea8:	ba 07       	cpc	r27, r26
    2eaa:	20 f0       	brcs	.+8      	; 0x2eb4 <__divsf3_pse+0xaa>
    2eac:	62 1b       	sub	r22, r18
    2eae:	73 0b       	sbc	r23, r19
    2eb0:	84 0b       	sbc	r24, r20
    2eb2:	ba 0b       	sbc	r27, r26
    2eb4:	ee 1f       	adc	r30, r30
    2eb6:	88 f7       	brcc	.-30     	; 0x2e9a <__divsf3_pse+0x90>
    2eb8:	e0 95       	com	r30
    2eba:	08 95       	ret

00002ebc <__fixunssfsi>:
    2ebc:	bc d0       	rcall	.+376    	; 0x3036 <__fp_splitA>
    2ebe:	88 f0       	brcs	.+34     	; 0x2ee2 <__fixunssfsi+0x26>
    2ec0:	9f 57       	subi	r25, 0x7F	; 127
    2ec2:	90 f0       	brcs	.+36     	; 0x2ee8 <__fixunssfsi+0x2c>
    2ec4:	b9 2f       	mov	r27, r25
    2ec6:	99 27       	eor	r25, r25
    2ec8:	b7 51       	subi	r27, 0x17	; 23
    2eca:	a0 f0       	brcs	.+40     	; 0x2ef4 <__fixunssfsi+0x38>
    2ecc:	d1 f0       	breq	.+52     	; 0x2f02 <__fixunssfsi+0x46>
    2ece:	66 0f       	add	r22, r22
    2ed0:	77 1f       	adc	r23, r23
    2ed2:	88 1f       	adc	r24, r24
    2ed4:	99 1f       	adc	r25, r25
    2ed6:	1a f0       	brmi	.+6      	; 0x2ede <__fixunssfsi+0x22>
    2ed8:	ba 95       	dec	r27
    2eda:	c9 f7       	brne	.-14     	; 0x2ece <__fixunssfsi+0x12>
    2edc:	12 c0       	rjmp	.+36     	; 0x2f02 <__fixunssfsi+0x46>
    2ede:	b1 30       	cpi	r27, 0x01	; 1
    2ee0:	81 f0       	breq	.+32     	; 0x2f02 <__fixunssfsi+0x46>
    2ee2:	c3 d0       	rcall	.+390    	; 0x306a <__fp_zero>
    2ee4:	b1 e0       	ldi	r27, 0x01	; 1
    2ee6:	08 95       	ret
    2ee8:	c0 c0       	rjmp	.+384    	; 0x306a <__fp_zero>
    2eea:	67 2f       	mov	r22, r23
    2eec:	78 2f       	mov	r23, r24
    2eee:	88 27       	eor	r24, r24
    2ef0:	b8 5f       	subi	r27, 0xF8	; 248
    2ef2:	39 f0       	breq	.+14     	; 0x2f02 <__fixunssfsi+0x46>
    2ef4:	b9 3f       	cpi	r27, 0xF9	; 249
    2ef6:	cc f3       	brlt	.-14     	; 0x2eea <__fixunssfsi+0x2e>
    2ef8:	86 95       	lsr	r24
    2efa:	77 95       	ror	r23
    2efc:	67 95       	ror	r22
    2efe:	b3 95       	inc	r27
    2f00:	d9 f7       	brne	.-10     	; 0x2ef8 <__fixunssfsi+0x3c>
    2f02:	3e f4       	brtc	.+14     	; 0x2f12 <__fixunssfsi+0x56>
    2f04:	90 95       	com	r25
    2f06:	80 95       	com	r24
    2f08:	70 95       	com	r23
    2f0a:	61 95       	neg	r22
    2f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f0e:	8f 4f       	sbci	r24, 0xFF	; 255
    2f10:	9f 4f       	sbci	r25, 0xFF	; 255
    2f12:	08 95       	ret

00002f14 <__floatunsisf>:
    2f14:	e8 94       	clt
    2f16:	09 c0       	rjmp	.+18     	; 0x2f2a <__floatsisf+0x12>

00002f18 <__floatsisf>:
    2f18:	97 fb       	bst	r25, 7
    2f1a:	3e f4       	brtc	.+14     	; 0x2f2a <__floatsisf+0x12>
    2f1c:	90 95       	com	r25
    2f1e:	80 95       	com	r24
    2f20:	70 95       	com	r23
    2f22:	61 95       	neg	r22
    2f24:	7f 4f       	sbci	r23, 0xFF	; 255
    2f26:	8f 4f       	sbci	r24, 0xFF	; 255
    2f28:	9f 4f       	sbci	r25, 0xFF	; 255
    2f2a:	99 23       	and	r25, r25
    2f2c:	a9 f0       	breq	.+42     	; 0x2f58 <__floatsisf+0x40>
    2f2e:	f9 2f       	mov	r31, r25
    2f30:	96 e9       	ldi	r25, 0x96	; 150
    2f32:	bb 27       	eor	r27, r27
    2f34:	93 95       	inc	r25
    2f36:	f6 95       	lsr	r31
    2f38:	87 95       	ror	r24
    2f3a:	77 95       	ror	r23
    2f3c:	67 95       	ror	r22
    2f3e:	b7 95       	ror	r27
    2f40:	f1 11       	cpse	r31, r1
    2f42:	f8 cf       	rjmp	.-16     	; 0x2f34 <__floatsisf+0x1c>
    2f44:	fa f4       	brpl	.+62     	; 0x2f84 <__floatsisf+0x6c>
    2f46:	bb 0f       	add	r27, r27
    2f48:	11 f4       	brne	.+4      	; 0x2f4e <__floatsisf+0x36>
    2f4a:	60 ff       	sbrs	r22, 0
    2f4c:	1b c0       	rjmp	.+54     	; 0x2f84 <__floatsisf+0x6c>
    2f4e:	6f 5f       	subi	r22, 0xFF	; 255
    2f50:	7f 4f       	sbci	r23, 0xFF	; 255
    2f52:	8f 4f       	sbci	r24, 0xFF	; 255
    2f54:	9f 4f       	sbci	r25, 0xFF	; 255
    2f56:	16 c0       	rjmp	.+44     	; 0x2f84 <__floatsisf+0x6c>
    2f58:	88 23       	and	r24, r24
    2f5a:	11 f0       	breq	.+4      	; 0x2f60 <__floatsisf+0x48>
    2f5c:	96 e9       	ldi	r25, 0x96	; 150
    2f5e:	11 c0       	rjmp	.+34     	; 0x2f82 <__floatsisf+0x6a>
    2f60:	77 23       	and	r23, r23
    2f62:	21 f0       	breq	.+8      	; 0x2f6c <__floatsisf+0x54>
    2f64:	9e e8       	ldi	r25, 0x8E	; 142
    2f66:	87 2f       	mov	r24, r23
    2f68:	76 2f       	mov	r23, r22
    2f6a:	05 c0       	rjmp	.+10     	; 0x2f76 <__floatsisf+0x5e>
    2f6c:	66 23       	and	r22, r22
    2f6e:	71 f0       	breq	.+28     	; 0x2f8c <__floatsisf+0x74>
    2f70:	96 e8       	ldi	r25, 0x86	; 134
    2f72:	86 2f       	mov	r24, r22
    2f74:	70 e0       	ldi	r23, 0x00	; 0
    2f76:	60 e0       	ldi	r22, 0x00	; 0
    2f78:	2a f0       	brmi	.+10     	; 0x2f84 <__floatsisf+0x6c>
    2f7a:	9a 95       	dec	r25
    2f7c:	66 0f       	add	r22, r22
    2f7e:	77 1f       	adc	r23, r23
    2f80:	88 1f       	adc	r24, r24
    2f82:	da f7       	brpl	.-10     	; 0x2f7a <__floatsisf+0x62>
    2f84:	88 0f       	add	r24, r24
    2f86:	96 95       	lsr	r25
    2f88:	87 95       	ror	r24
    2f8a:	97 f9       	bld	r25, 7
    2f8c:	08 95       	ret

00002f8e <__fp_cmp>:
    2f8e:	99 0f       	add	r25, r25
    2f90:	00 08       	sbc	r0, r0
    2f92:	55 0f       	add	r21, r21
    2f94:	aa 0b       	sbc	r26, r26
    2f96:	e0 e8       	ldi	r30, 0x80	; 128
    2f98:	fe ef       	ldi	r31, 0xFE	; 254
    2f9a:	16 16       	cp	r1, r22
    2f9c:	17 06       	cpc	r1, r23
    2f9e:	e8 07       	cpc	r30, r24
    2fa0:	f9 07       	cpc	r31, r25
    2fa2:	c0 f0       	brcs	.+48     	; 0x2fd4 <__fp_cmp+0x46>
    2fa4:	12 16       	cp	r1, r18
    2fa6:	13 06       	cpc	r1, r19
    2fa8:	e4 07       	cpc	r30, r20
    2faa:	f5 07       	cpc	r31, r21
    2fac:	98 f0       	brcs	.+38     	; 0x2fd4 <__fp_cmp+0x46>
    2fae:	62 1b       	sub	r22, r18
    2fb0:	73 0b       	sbc	r23, r19
    2fb2:	84 0b       	sbc	r24, r20
    2fb4:	95 0b       	sbc	r25, r21
    2fb6:	39 f4       	brne	.+14     	; 0x2fc6 <__fp_cmp+0x38>
    2fb8:	0a 26       	eor	r0, r26
    2fba:	61 f0       	breq	.+24     	; 0x2fd4 <__fp_cmp+0x46>
    2fbc:	23 2b       	or	r18, r19
    2fbe:	24 2b       	or	r18, r20
    2fc0:	25 2b       	or	r18, r21
    2fc2:	21 f4       	brne	.+8      	; 0x2fcc <__fp_cmp+0x3e>
    2fc4:	08 95       	ret
    2fc6:	0a 26       	eor	r0, r26
    2fc8:	09 f4       	brne	.+2      	; 0x2fcc <__fp_cmp+0x3e>
    2fca:	a1 40       	sbci	r26, 0x01	; 1
    2fcc:	a6 95       	lsr	r26
    2fce:	8f ef       	ldi	r24, 0xFF	; 255
    2fd0:	81 1d       	adc	r24, r1
    2fd2:	81 1d       	adc	r24, r1
    2fd4:	08 95       	ret

00002fd6 <__fp_inf>:
    2fd6:	97 f9       	bld	r25, 7
    2fd8:	9f 67       	ori	r25, 0x7F	; 127
    2fda:	80 e8       	ldi	r24, 0x80	; 128
    2fdc:	70 e0       	ldi	r23, 0x00	; 0
    2fde:	60 e0       	ldi	r22, 0x00	; 0
    2fe0:	08 95       	ret

00002fe2 <__fp_nan>:
    2fe2:	9f ef       	ldi	r25, 0xFF	; 255
    2fe4:	80 ec       	ldi	r24, 0xC0	; 192
    2fe6:	08 95       	ret

00002fe8 <__fp_pscA>:
    2fe8:	00 24       	eor	r0, r0
    2fea:	0a 94       	dec	r0
    2fec:	16 16       	cp	r1, r22
    2fee:	17 06       	cpc	r1, r23
    2ff0:	18 06       	cpc	r1, r24
    2ff2:	09 06       	cpc	r0, r25
    2ff4:	08 95       	ret

00002ff6 <__fp_pscB>:
    2ff6:	00 24       	eor	r0, r0
    2ff8:	0a 94       	dec	r0
    2ffa:	12 16       	cp	r1, r18
    2ffc:	13 06       	cpc	r1, r19
    2ffe:	14 06       	cpc	r1, r20
    3000:	05 06       	cpc	r0, r21
    3002:	08 95       	ret

00003004 <__fp_round>:
    3004:	09 2e       	mov	r0, r25
    3006:	03 94       	inc	r0
    3008:	00 0c       	add	r0, r0
    300a:	11 f4       	brne	.+4      	; 0x3010 <__fp_round+0xc>
    300c:	88 23       	and	r24, r24
    300e:	52 f0       	brmi	.+20     	; 0x3024 <__fp_round+0x20>
    3010:	bb 0f       	add	r27, r27
    3012:	40 f4       	brcc	.+16     	; 0x3024 <__fp_round+0x20>
    3014:	bf 2b       	or	r27, r31
    3016:	11 f4       	brne	.+4      	; 0x301c <__fp_round+0x18>
    3018:	60 ff       	sbrs	r22, 0
    301a:	04 c0       	rjmp	.+8      	; 0x3024 <__fp_round+0x20>
    301c:	6f 5f       	subi	r22, 0xFF	; 255
    301e:	7f 4f       	sbci	r23, 0xFF	; 255
    3020:	8f 4f       	sbci	r24, 0xFF	; 255
    3022:	9f 4f       	sbci	r25, 0xFF	; 255
    3024:	08 95       	ret

00003026 <__fp_split3>:
    3026:	57 fd       	sbrc	r21, 7
    3028:	90 58       	subi	r25, 0x80	; 128
    302a:	44 0f       	add	r20, r20
    302c:	55 1f       	adc	r21, r21
    302e:	59 f0       	breq	.+22     	; 0x3046 <__fp_splitA+0x10>
    3030:	5f 3f       	cpi	r21, 0xFF	; 255
    3032:	71 f0       	breq	.+28     	; 0x3050 <__fp_splitA+0x1a>
    3034:	47 95       	ror	r20

00003036 <__fp_splitA>:
    3036:	88 0f       	add	r24, r24
    3038:	97 fb       	bst	r25, 7
    303a:	99 1f       	adc	r25, r25
    303c:	61 f0       	breq	.+24     	; 0x3056 <__fp_splitA+0x20>
    303e:	9f 3f       	cpi	r25, 0xFF	; 255
    3040:	79 f0       	breq	.+30     	; 0x3060 <__fp_splitA+0x2a>
    3042:	87 95       	ror	r24
    3044:	08 95       	ret
    3046:	12 16       	cp	r1, r18
    3048:	13 06       	cpc	r1, r19
    304a:	14 06       	cpc	r1, r20
    304c:	55 1f       	adc	r21, r21
    304e:	f2 cf       	rjmp	.-28     	; 0x3034 <__fp_split3+0xe>
    3050:	46 95       	lsr	r20
    3052:	f1 df       	rcall	.-30     	; 0x3036 <__fp_splitA>
    3054:	08 c0       	rjmp	.+16     	; 0x3066 <__fp_splitA+0x30>
    3056:	16 16       	cp	r1, r22
    3058:	17 06       	cpc	r1, r23
    305a:	18 06       	cpc	r1, r24
    305c:	99 1f       	adc	r25, r25
    305e:	f1 cf       	rjmp	.-30     	; 0x3042 <__fp_splitA+0xc>
    3060:	86 95       	lsr	r24
    3062:	71 05       	cpc	r23, r1
    3064:	61 05       	cpc	r22, r1
    3066:	08 94       	sec
    3068:	08 95       	ret

0000306a <__fp_zero>:
    306a:	e8 94       	clt

0000306c <__fp_szero>:
    306c:	bb 27       	eor	r27, r27
    306e:	66 27       	eor	r22, r22
    3070:	77 27       	eor	r23, r23
    3072:	cb 01       	movw	r24, r22
    3074:	97 f9       	bld	r25, 7
    3076:	08 95       	ret

00003078 <__mulsf3>:
    3078:	0b d0       	rcall	.+22     	; 0x3090 <__mulsf3x>
    307a:	c4 cf       	rjmp	.-120    	; 0x3004 <__fp_round>
    307c:	b5 df       	rcall	.-150    	; 0x2fe8 <__fp_pscA>
    307e:	28 f0       	brcs	.+10     	; 0x308a <__mulsf3+0x12>
    3080:	ba df       	rcall	.-140    	; 0x2ff6 <__fp_pscB>
    3082:	18 f0       	brcs	.+6      	; 0x308a <__mulsf3+0x12>
    3084:	95 23       	and	r25, r21
    3086:	09 f0       	breq	.+2      	; 0x308a <__mulsf3+0x12>
    3088:	a6 cf       	rjmp	.-180    	; 0x2fd6 <__fp_inf>
    308a:	ab cf       	rjmp	.-170    	; 0x2fe2 <__fp_nan>
    308c:	11 24       	eor	r1, r1
    308e:	ee cf       	rjmp	.-36     	; 0x306c <__fp_szero>

00003090 <__mulsf3x>:
    3090:	ca df       	rcall	.-108    	; 0x3026 <__fp_split3>
    3092:	a0 f3       	brcs	.-24     	; 0x307c <__mulsf3+0x4>

00003094 <__mulsf3_pse>:
    3094:	95 9f       	mul	r25, r21
    3096:	d1 f3       	breq	.-12     	; 0x308c <__mulsf3+0x14>
    3098:	95 0f       	add	r25, r21
    309a:	50 e0       	ldi	r21, 0x00	; 0
    309c:	55 1f       	adc	r21, r21
    309e:	62 9f       	mul	r22, r18
    30a0:	f0 01       	movw	r30, r0
    30a2:	72 9f       	mul	r23, r18
    30a4:	bb 27       	eor	r27, r27
    30a6:	f0 0d       	add	r31, r0
    30a8:	b1 1d       	adc	r27, r1
    30aa:	63 9f       	mul	r22, r19
    30ac:	aa 27       	eor	r26, r26
    30ae:	f0 0d       	add	r31, r0
    30b0:	b1 1d       	adc	r27, r1
    30b2:	aa 1f       	adc	r26, r26
    30b4:	64 9f       	mul	r22, r20
    30b6:	66 27       	eor	r22, r22
    30b8:	b0 0d       	add	r27, r0
    30ba:	a1 1d       	adc	r26, r1
    30bc:	66 1f       	adc	r22, r22
    30be:	82 9f       	mul	r24, r18
    30c0:	22 27       	eor	r18, r18
    30c2:	b0 0d       	add	r27, r0
    30c4:	a1 1d       	adc	r26, r1
    30c6:	62 1f       	adc	r22, r18
    30c8:	73 9f       	mul	r23, r19
    30ca:	b0 0d       	add	r27, r0
    30cc:	a1 1d       	adc	r26, r1
    30ce:	62 1f       	adc	r22, r18
    30d0:	83 9f       	mul	r24, r19
    30d2:	a0 0d       	add	r26, r0
    30d4:	61 1d       	adc	r22, r1
    30d6:	22 1f       	adc	r18, r18
    30d8:	74 9f       	mul	r23, r20
    30da:	33 27       	eor	r19, r19
    30dc:	a0 0d       	add	r26, r0
    30de:	61 1d       	adc	r22, r1
    30e0:	23 1f       	adc	r18, r19
    30e2:	84 9f       	mul	r24, r20
    30e4:	60 0d       	add	r22, r0
    30e6:	21 1d       	adc	r18, r1
    30e8:	82 2f       	mov	r24, r18
    30ea:	76 2f       	mov	r23, r22
    30ec:	6a 2f       	mov	r22, r26
    30ee:	11 24       	eor	r1, r1
    30f0:	9f 57       	subi	r25, 0x7F	; 127
    30f2:	50 40       	sbci	r21, 0x00	; 0
    30f4:	8a f0       	brmi	.+34     	; 0x3118 <__mulsf3_pse+0x84>
    30f6:	e1 f0       	breq	.+56     	; 0x3130 <__mulsf3_pse+0x9c>
    30f8:	88 23       	and	r24, r24
    30fa:	4a f0       	brmi	.+18     	; 0x310e <__mulsf3_pse+0x7a>
    30fc:	ee 0f       	add	r30, r30
    30fe:	ff 1f       	adc	r31, r31
    3100:	bb 1f       	adc	r27, r27
    3102:	66 1f       	adc	r22, r22
    3104:	77 1f       	adc	r23, r23
    3106:	88 1f       	adc	r24, r24
    3108:	91 50       	subi	r25, 0x01	; 1
    310a:	50 40       	sbci	r21, 0x00	; 0
    310c:	a9 f7       	brne	.-22     	; 0x30f8 <__mulsf3_pse+0x64>
    310e:	9e 3f       	cpi	r25, 0xFE	; 254
    3110:	51 05       	cpc	r21, r1
    3112:	70 f0       	brcs	.+28     	; 0x3130 <__mulsf3_pse+0x9c>
    3114:	60 cf       	rjmp	.-320    	; 0x2fd6 <__fp_inf>
    3116:	aa cf       	rjmp	.-172    	; 0x306c <__fp_szero>
    3118:	5f 3f       	cpi	r21, 0xFF	; 255
    311a:	ec f3       	brlt	.-6      	; 0x3116 <__mulsf3_pse+0x82>
    311c:	98 3e       	cpi	r25, 0xE8	; 232
    311e:	dc f3       	brlt	.-10     	; 0x3116 <__mulsf3_pse+0x82>
    3120:	86 95       	lsr	r24
    3122:	77 95       	ror	r23
    3124:	67 95       	ror	r22
    3126:	b7 95       	ror	r27
    3128:	f7 95       	ror	r31
    312a:	e7 95       	ror	r30
    312c:	9f 5f       	subi	r25, 0xFF	; 255
    312e:	c1 f7       	brne	.-16     	; 0x3120 <__mulsf3_pse+0x8c>
    3130:	fe 2b       	or	r31, r30
    3132:	88 0f       	add	r24, r24
    3134:	91 1d       	adc	r25, r1
    3136:	96 95       	lsr	r25
    3138:	87 95       	ror	r24
    313a:	97 f9       	bld	r25, 7
    313c:	08 95       	ret

0000313e <__mulsi3>:
    313e:	db 01       	movw	r26, r22
    3140:	8f 93       	push	r24
    3142:	9f 93       	push	r25
    3144:	45 d0       	rcall	.+138    	; 0x31d0 <__muluhisi3>
    3146:	bf 91       	pop	r27
    3148:	af 91       	pop	r26
    314a:	a2 9f       	mul	r26, r18
    314c:	80 0d       	add	r24, r0
    314e:	91 1d       	adc	r25, r1
    3150:	a3 9f       	mul	r26, r19
    3152:	90 0d       	add	r25, r0
    3154:	b2 9f       	mul	r27, r18
    3156:	90 0d       	add	r25, r0
    3158:	11 24       	eor	r1, r1
    315a:	08 95       	ret

0000315c <__udivmodsi4>:
    315c:	a1 e2       	ldi	r26, 0x21	; 33
    315e:	1a 2e       	mov	r1, r26
    3160:	aa 1b       	sub	r26, r26
    3162:	bb 1b       	sub	r27, r27
    3164:	fd 01       	movw	r30, r26
    3166:	0d c0       	rjmp	.+26     	; 0x3182 <__udivmodsi4_ep>

00003168 <__udivmodsi4_loop>:
    3168:	aa 1f       	adc	r26, r26
    316a:	bb 1f       	adc	r27, r27
    316c:	ee 1f       	adc	r30, r30
    316e:	ff 1f       	adc	r31, r31
    3170:	a2 17       	cp	r26, r18
    3172:	b3 07       	cpc	r27, r19
    3174:	e4 07       	cpc	r30, r20
    3176:	f5 07       	cpc	r31, r21
    3178:	20 f0       	brcs	.+8      	; 0x3182 <__udivmodsi4_ep>
    317a:	a2 1b       	sub	r26, r18
    317c:	b3 0b       	sbc	r27, r19
    317e:	e4 0b       	sbc	r30, r20
    3180:	f5 0b       	sbc	r31, r21

00003182 <__udivmodsi4_ep>:
    3182:	66 1f       	adc	r22, r22
    3184:	77 1f       	adc	r23, r23
    3186:	88 1f       	adc	r24, r24
    3188:	99 1f       	adc	r25, r25
    318a:	1a 94       	dec	r1
    318c:	69 f7       	brne	.-38     	; 0x3168 <__udivmodsi4_loop>
    318e:	60 95       	com	r22
    3190:	70 95       	com	r23
    3192:	80 95       	com	r24
    3194:	90 95       	com	r25
    3196:	9b 01       	movw	r18, r22
    3198:	ac 01       	movw	r20, r24
    319a:	bd 01       	movw	r22, r26
    319c:	cf 01       	movw	r24, r30
    319e:	08 95       	ret

000031a0 <__tablejump2__>:
    31a0:	ee 0f       	add	r30, r30
    31a2:	ff 1f       	adc	r31, r31
    31a4:	00 24       	eor	r0, r0
    31a6:	00 1c       	adc	r0, r0
    31a8:	0b be       	out	0x3b, r0	; 59
    31aa:	07 90       	elpm	r0, Z+
    31ac:	f6 91       	elpm	r31, Z
    31ae:	e0 2d       	mov	r30, r0
    31b0:	09 94       	ijmp

000031b2 <__umulhisi3>:
    31b2:	a2 9f       	mul	r26, r18
    31b4:	b0 01       	movw	r22, r0
    31b6:	b3 9f       	mul	r27, r19
    31b8:	c0 01       	movw	r24, r0
    31ba:	a3 9f       	mul	r26, r19
    31bc:	70 0d       	add	r23, r0
    31be:	81 1d       	adc	r24, r1
    31c0:	11 24       	eor	r1, r1
    31c2:	91 1d       	adc	r25, r1
    31c4:	b2 9f       	mul	r27, r18
    31c6:	70 0d       	add	r23, r0
    31c8:	81 1d       	adc	r24, r1
    31ca:	11 24       	eor	r1, r1
    31cc:	91 1d       	adc	r25, r1
    31ce:	08 95       	ret

000031d0 <__muluhisi3>:
    31d0:	f0 df       	rcall	.-32     	; 0x31b2 <__umulhisi3>
    31d2:	a5 9f       	mul	r26, r21
    31d4:	90 0d       	add	r25, r0
    31d6:	b4 9f       	mul	r27, r20
    31d8:	90 0d       	add	r25, r0
    31da:	a4 9f       	mul	r26, r20
    31dc:	80 0d       	add	r24, r0
    31de:	91 1d       	adc	r25, r1
    31e0:	11 24       	eor	r1, r1
    31e2:	08 95       	ret

000031e4 <fdevopen>:
    31e4:	0f 93       	push	r16
    31e6:	1f 93       	push	r17
    31e8:	cf 93       	push	r28
    31ea:	df 93       	push	r29
    31ec:	00 97       	sbiw	r24, 0x00	; 0
    31ee:	31 f4       	brne	.+12     	; 0x31fc <fdevopen+0x18>
    31f0:	61 15       	cp	r22, r1
    31f2:	71 05       	cpc	r23, r1
    31f4:	19 f4       	brne	.+6      	; 0x31fc <fdevopen+0x18>
    31f6:	80 e0       	ldi	r24, 0x00	; 0
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	39 c0       	rjmp	.+114    	; 0x326e <fdevopen+0x8a>
    31fc:	8b 01       	movw	r16, r22
    31fe:	ec 01       	movw	r28, r24
    3200:	6e e0       	ldi	r22, 0x0E	; 14
    3202:	70 e0       	ldi	r23, 0x00	; 0
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	a5 d2       	rcall	.+1354   	; 0x3754 <calloc>
    320a:	fc 01       	movw	r30, r24
    320c:	89 2b       	or	r24, r25
    320e:	99 f3       	breq	.-26     	; 0x31f6 <fdevopen+0x12>
    3210:	80 e8       	ldi	r24, 0x80	; 128
    3212:	83 83       	std	Z+3, r24	; 0x03
    3214:	01 15       	cp	r16, r1
    3216:	11 05       	cpc	r17, r1
    3218:	71 f0       	breq	.+28     	; 0x3236 <fdevopen+0x52>
    321a:	13 87       	std	Z+11, r17	; 0x0b
    321c:	02 87       	std	Z+10, r16	; 0x0a
    321e:	81 e8       	ldi	r24, 0x81	; 129
    3220:	83 83       	std	Z+3, r24	; 0x03
    3222:	80 91 e3 0a 	lds	r24, 0x0AE3	; 0x800ae3 <__iob>
    3226:	90 91 e4 0a 	lds	r25, 0x0AE4	; 0x800ae4 <__iob+0x1>
    322a:	89 2b       	or	r24, r25
    322c:	21 f4       	brne	.+8      	; 0x3236 <fdevopen+0x52>
    322e:	f0 93 e4 0a 	sts	0x0AE4, r31	; 0x800ae4 <__iob+0x1>
    3232:	e0 93 e3 0a 	sts	0x0AE3, r30	; 0x800ae3 <__iob>
    3236:	20 97       	sbiw	r28, 0x00	; 0
    3238:	c9 f0       	breq	.+50     	; 0x326c <fdevopen+0x88>
    323a:	d1 87       	std	Z+9, r29	; 0x09
    323c:	c0 87       	std	Z+8, r28	; 0x08
    323e:	83 81       	ldd	r24, Z+3	; 0x03
    3240:	82 60       	ori	r24, 0x02	; 2
    3242:	83 83       	std	Z+3, r24	; 0x03
    3244:	80 91 e5 0a 	lds	r24, 0x0AE5	; 0x800ae5 <__iob+0x2>
    3248:	90 91 e6 0a 	lds	r25, 0x0AE6	; 0x800ae6 <__iob+0x3>
    324c:	89 2b       	or	r24, r25
    324e:	71 f4       	brne	.+28     	; 0x326c <fdevopen+0x88>
    3250:	f0 93 e6 0a 	sts	0x0AE6, r31	; 0x800ae6 <__iob+0x3>
    3254:	e0 93 e5 0a 	sts	0x0AE5, r30	; 0x800ae5 <__iob+0x2>
    3258:	80 91 e7 0a 	lds	r24, 0x0AE7	; 0x800ae7 <__iob+0x4>
    325c:	90 91 e8 0a 	lds	r25, 0x0AE8	; 0x800ae8 <__iob+0x5>
    3260:	89 2b       	or	r24, r25
    3262:	21 f4       	brne	.+8      	; 0x326c <fdevopen+0x88>
    3264:	f0 93 e8 0a 	sts	0x0AE8, r31	; 0x800ae8 <__iob+0x5>
    3268:	e0 93 e7 0a 	sts	0x0AE7, r30	; 0x800ae7 <__iob+0x4>
    326c:	cf 01       	movw	r24, r30
    326e:	df 91       	pop	r29
    3270:	cf 91       	pop	r28
    3272:	1f 91       	pop	r17
    3274:	0f 91       	pop	r16
    3276:	08 95       	ret

00003278 <printf>:
    3278:	cf 93       	push	r28
    327a:	df 93       	push	r29
    327c:	cd b7       	in	r28, 0x3d	; 61
    327e:	de b7       	in	r29, 0x3e	; 62
    3280:	ae 01       	movw	r20, r28
    3282:	4b 5f       	subi	r20, 0xFB	; 251
    3284:	5f 4f       	sbci	r21, 0xFF	; 255
    3286:	fa 01       	movw	r30, r20
    3288:	61 91       	ld	r22, Z+
    328a:	71 91       	ld	r23, Z+
    328c:	af 01       	movw	r20, r30
    328e:	80 91 e5 0a 	lds	r24, 0x0AE5	; 0x800ae5 <__iob+0x2>
    3292:	90 91 e6 0a 	lds	r25, 0x0AE6	; 0x800ae6 <__iob+0x3>
    3296:	61 d0       	rcall	.+194    	; 0x335a <vfprintf>
    3298:	df 91       	pop	r29
    329a:	cf 91       	pop	r28
    329c:	08 95       	ret

0000329e <puts>:
    329e:	0f 93       	push	r16
    32a0:	1f 93       	push	r17
    32a2:	cf 93       	push	r28
    32a4:	df 93       	push	r29
    32a6:	e0 91 e5 0a 	lds	r30, 0x0AE5	; 0x800ae5 <__iob+0x2>
    32aa:	f0 91 e6 0a 	lds	r31, 0x0AE6	; 0x800ae6 <__iob+0x3>
    32ae:	23 81       	ldd	r18, Z+3	; 0x03
    32b0:	21 ff       	sbrs	r18, 1
    32b2:	1b c0       	rjmp	.+54     	; 0x32ea <puts+0x4c>
    32b4:	8c 01       	movw	r16, r24
    32b6:	d0 e0       	ldi	r29, 0x00	; 0
    32b8:	c0 e0       	ldi	r28, 0x00	; 0
    32ba:	f8 01       	movw	r30, r16
    32bc:	81 91       	ld	r24, Z+
    32be:	8f 01       	movw	r16, r30
    32c0:	60 91 e5 0a 	lds	r22, 0x0AE5	; 0x800ae5 <__iob+0x2>
    32c4:	70 91 e6 0a 	lds	r23, 0x0AE6	; 0x800ae6 <__iob+0x3>
    32c8:	db 01       	movw	r26, r22
    32ca:	18 96       	adiw	r26, 0x08	; 8
    32cc:	ed 91       	ld	r30, X+
    32ce:	fc 91       	ld	r31, X
    32d0:	19 97       	sbiw	r26, 0x09	; 9
    32d2:	88 23       	and	r24, r24
    32d4:	31 f0       	breq	.+12     	; 0x32e2 <puts+0x44>
    32d6:	09 95       	icall
    32d8:	89 2b       	or	r24, r25
    32da:	79 f3       	breq	.-34     	; 0x32ba <puts+0x1c>
    32dc:	df ef       	ldi	r29, 0xFF	; 255
    32de:	cf ef       	ldi	r28, 0xFF	; 255
    32e0:	ec cf       	rjmp	.-40     	; 0x32ba <puts+0x1c>
    32e2:	8a e0       	ldi	r24, 0x0A	; 10
    32e4:	09 95       	icall
    32e6:	89 2b       	or	r24, r25
    32e8:	19 f0       	breq	.+6      	; 0x32f0 <puts+0x52>
    32ea:	8f ef       	ldi	r24, 0xFF	; 255
    32ec:	9f ef       	ldi	r25, 0xFF	; 255
    32ee:	02 c0       	rjmp	.+4      	; 0x32f4 <puts+0x56>
    32f0:	8d 2f       	mov	r24, r29
    32f2:	9c 2f       	mov	r25, r28
    32f4:	df 91       	pop	r29
    32f6:	cf 91       	pop	r28
    32f8:	1f 91       	pop	r17
    32fa:	0f 91       	pop	r16
    32fc:	08 95       	ret

000032fe <sprintf>:
    32fe:	0f 93       	push	r16
    3300:	1f 93       	push	r17
    3302:	cf 93       	push	r28
    3304:	df 93       	push	r29
    3306:	cd b7       	in	r28, 0x3d	; 61
    3308:	de b7       	in	r29, 0x3e	; 62
    330a:	2e 97       	sbiw	r28, 0x0e	; 14
    330c:	0f b6       	in	r0, 0x3f	; 63
    330e:	f8 94       	cli
    3310:	de bf       	out	0x3e, r29	; 62
    3312:	0f be       	out	0x3f, r0	; 63
    3314:	cd bf       	out	0x3d, r28	; 61
    3316:	0d 89       	ldd	r16, Y+21	; 0x15
    3318:	1e 89       	ldd	r17, Y+22	; 0x16
    331a:	86 e0       	ldi	r24, 0x06	; 6
    331c:	8c 83       	std	Y+4, r24	; 0x04
    331e:	1a 83       	std	Y+2, r17	; 0x02
    3320:	09 83       	std	Y+1, r16	; 0x01
    3322:	8f ef       	ldi	r24, 0xFF	; 255
    3324:	9f e7       	ldi	r25, 0x7F	; 127
    3326:	9e 83       	std	Y+6, r25	; 0x06
    3328:	8d 83       	std	Y+5, r24	; 0x05
    332a:	ae 01       	movw	r20, r28
    332c:	47 5e       	subi	r20, 0xE7	; 231
    332e:	5f 4f       	sbci	r21, 0xFF	; 255
    3330:	6f 89       	ldd	r22, Y+23	; 0x17
    3332:	78 8d       	ldd	r23, Y+24	; 0x18
    3334:	ce 01       	movw	r24, r28
    3336:	01 96       	adiw	r24, 0x01	; 1
    3338:	10 d0       	rcall	.+32     	; 0x335a <vfprintf>
    333a:	ef 81       	ldd	r30, Y+7	; 0x07
    333c:	f8 85       	ldd	r31, Y+8	; 0x08
    333e:	e0 0f       	add	r30, r16
    3340:	f1 1f       	adc	r31, r17
    3342:	10 82       	st	Z, r1
    3344:	2e 96       	adiw	r28, 0x0e	; 14
    3346:	0f b6       	in	r0, 0x3f	; 63
    3348:	f8 94       	cli
    334a:	de bf       	out	0x3e, r29	; 62
    334c:	0f be       	out	0x3f, r0	; 63
    334e:	cd bf       	out	0x3d, r28	; 61
    3350:	df 91       	pop	r29
    3352:	cf 91       	pop	r28
    3354:	1f 91       	pop	r17
    3356:	0f 91       	pop	r16
    3358:	08 95       	ret

0000335a <vfprintf>:
    335a:	2f 92       	push	r2
    335c:	3f 92       	push	r3
    335e:	4f 92       	push	r4
    3360:	5f 92       	push	r5
    3362:	6f 92       	push	r6
    3364:	7f 92       	push	r7
    3366:	8f 92       	push	r8
    3368:	9f 92       	push	r9
    336a:	af 92       	push	r10
    336c:	bf 92       	push	r11
    336e:	cf 92       	push	r12
    3370:	df 92       	push	r13
    3372:	ef 92       	push	r14
    3374:	ff 92       	push	r15
    3376:	0f 93       	push	r16
    3378:	1f 93       	push	r17
    337a:	cf 93       	push	r28
    337c:	df 93       	push	r29
    337e:	cd b7       	in	r28, 0x3d	; 61
    3380:	de b7       	in	r29, 0x3e	; 62
    3382:	2b 97       	sbiw	r28, 0x0b	; 11
    3384:	0f b6       	in	r0, 0x3f	; 63
    3386:	f8 94       	cli
    3388:	de bf       	out	0x3e, r29	; 62
    338a:	0f be       	out	0x3f, r0	; 63
    338c:	cd bf       	out	0x3d, r28	; 61
    338e:	6c 01       	movw	r12, r24
    3390:	7b 01       	movw	r14, r22
    3392:	8a 01       	movw	r16, r20
    3394:	fc 01       	movw	r30, r24
    3396:	17 82       	std	Z+7, r1	; 0x07
    3398:	16 82       	std	Z+6, r1	; 0x06
    339a:	83 81       	ldd	r24, Z+3	; 0x03
    339c:	81 ff       	sbrs	r24, 1
    339e:	bf c1       	rjmp	.+894    	; 0x371e <vfprintf+0x3c4>
    33a0:	ce 01       	movw	r24, r28
    33a2:	01 96       	adiw	r24, 0x01	; 1
    33a4:	3c 01       	movw	r6, r24
    33a6:	f6 01       	movw	r30, r12
    33a8:	93 81       	ldd	r25, Z+3	; 0x03
    33aa:	f7 01       	movw	r30, r14
    33ac:	93 fd       	sbrc	r25, 3
    33ae:	85 91       	lpm	r24, Z+
    33b0:	93 ff       	sbrs	r25, 3
    33b2:	81 91       	ld	r24, Z+
    33b4:	7f 01       	movw	r14, r30
    33b6:	88 23       	and	r24, r24
    33b8:	09 f4       	brne	.+2      	; 0x33bc <vfprintf+0x62>
    33ba:	ad c1       	rjmp	.+858    	; 0x3716 <vfprintf+0x3bc>
    33bc:	85 32       	cpi	r24, 0x25	; 37
    33be:	39 f4       	brne	.+14     	; 0x33ce <vfprintf+0x74>
    33c0:	93 fd       	sbrc	r25, 3
    33c2:	85 91       	lpm	r24, Z+
    33c4:	93 ff       	sbrs	r25, 3
    33c6:	81 91       	ld	r24, Z+
    33c8:	7f 01       	movw	r14, r30
    33ca:	85 32       	cpi	r24, 0x25	; 37
    33cc:	21 f4       	brne	.+8      	; 0x33d6 <vfprintf+0x7c>
    33ce:	b6 01       	movw	r22, r12
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	18 d3       	rcall	.+1584   	; 0x3a04 <fputc>
    33d4:	e8 cf       	rjmp	.-48     	; 0x33a6 <vfprintf+0x4c>
    33d6:	91 2c       	mov	r9, r1
    33d8:	21 2c       	mov	r2, r1
    33da:	31 2c       	mov	r3, r1
    33dc:	ff e1       	ldi	r31, 0x1F	; 31
    33de:	f3 15       	cp	r31, r3
    33e0:	d8 f0       	brcs	.+54     	; 0x3418 <vfprintf+0xbe>
    33e2:	8b 32       	cpi	r24, 0x2B	; 43
    33e4:	79 f0       	breq	.+30     	; 0x3404 <vfprintf+0xaa>
    33e6:	38 f4       	brcc	.+14     	; 0x33f6 <vfprintf+0x9c>
    33e8:	80 32       	cpi	r24, 0x20	; 32
    33ea:	79 f0       	breq	.+30     	; 0x340a <vfprintf+0xb0>
    33ec:	83 32       	cpi	r24, 0x23	; 35
    33ee:	a1 f4       	brne	.+40     	; 0x3418 <vfprintf+0xbe>
    33f0:	23 2d       	mov	r18, r3
    33f2:	20 61       	ori	r18, 0x10	; 16
    33f4:	1d c0       	rjmp	.+58     	; 0x3430 <vfprintf+0xd6>
    33f6:	8d 32       	cpi	r24, 0x2D	; 45
    33f8:	61 f0       	breq	.+24     	; 0x3412 <vfprintf+0xb8>
    33fa:	80 33       	cpi	r24, 0x30	; 48
    33fc:	69 f4       	brne	.+26     	; 0x3418 <vfprintf+0xbe>
    33fe:	23 2d       	mov	r18, r3
    3400:	21 60       	ori	r18, 0x01	; 1
    3402:	16 c0       	rjmp	.+44     	; 0x3430 <vfprintf+0xd6>
    3404:	83 2d       	mov	r24, r3
    3406:	82 60       	ori	r24, 0x02	; 2
    3408:	38 2e       	mov	r3, r24
    340a:	e3 2d       	mov	r30, r3
    340c:	e4 60       	ori	r30, 0x04	; 4
    340e:	3e 2e       	mov	r3, r30
    3410:	2a c0       	rjmp	.+84     	; 0x3466 <vfprintf+0x10c>
    3412:	f3 2d       	mov	r31, r3
    3414:	f8 60       	ori	r31, 0x08	; 8
    3416:	1d c0       	rjmp	.+58     	; 0x3452 <vfprintf+0xf8>
    3418:	37 fc       	sbrc	r3, 7
    341a:	2d c0       	rjmp	.+90     	; 0x3476 <vfprintf+0x11c>
    341c:	20 ed       	ldi	r18, 0xD0	; 208
    341e:	28 0f       	add	r18, r24
    3420:	2a 30       	cpi	r18, 0x0A	; 10
    3422:	40 f0       	brcs	.+16     	; 0x3434 <vfprintf+0xda>
    3424:	8e 32       	cpi	r24, 0x2E	; 46
    3426:	b9 f4       	brne	.+46     	; 0x3456 <vfprintf+0xfc>
    3428:	36 fc       	sbrc	r3, 6
    342a:	75 c1       	rjmp	.+746    	; 0x3716 <vfprintf+0x3bc>
    342c:	23 2d       	mov	r18, r3
    342e:	20 64       	ori	r18, 0x40	; 64
    3430:	32 2e       	mov	r3, r18
    3432:	19 c0       	rjmp	.+50     	; 0x3466 <vfprintf+0x10c>
    3434:	36 fe       	sbrs	r3, 6
    3436:	06 c0       	rjmp	.+12     	; 0x3444 <vfprintf+0xea>
    3438:	8a e0       	ldi	r24, 0x0A	; 10
    343a:	98 9e       	mul	r9, r24
    343c:	20 0d       	add	r18, r0
    343e:	11 24       	eor	r1, r1
    3440:	92 2e       	mov	r9, r18
    3442:	11 c0       	rjmp	.+34     	; 0x3466 <vfprintf+0x10c>
    3444:	ea e0       	ldi	r30, 0x0A	; 10
    3446:	2e 9e       	mul	r2, r30
    3448:	20 0d       	add	r18, r0
    344a:	11 24       	eor	r1, r1
    344c:	22 2e       	mov	r2, r18
    344e:	f3 2d       	mov	r31, r3
    3450:	f0 62       	ori	r31, 0x20	; 32
    3452:	3f 2e       	mov	r3, r31
    3454:	08 c0       	rjmp	.+16     	; 0x3466 <vfprintf+0x10c>
    3456:	8c 36       	cpi	r24, 0x6C	; 108
    3458:	21 f4       	brne	.+8      	; 0x3462 <vfprintf+0x108>
    345a:	83 2d       	mov	r24, r3
    345c:	80 68       	ori	r24, 0x80	; 128
    345e:	38 2e       	mov	r3, r24
    3460:	02 c0       	rjmp	.+4      	; 0x3466 <vfprintf+0x10c>
    3462:	88 36       	cpi	r24, 0x68	; 104
    3464:	41 f4       	brne	.+16     	; 0x3476 <vfprintf+0x11c>
    3466:	f7 01       	movw	r30, r14
    3468:	93 fd       	sbrc	r25, 3
    346a:	85 91       	lpm	r24, Z+
    346c:	93 ff       	sbrs	r25, 3
    346e:	81 91       	ld	r24, Z+
    3470:	7f 01       	movw	r14, r30
    3472:	81 11       	cpse	r24, r1
    3474:	b3 cf       	rjmp	.-154    	; 0x33dc <vfprintf+0x82>
    3476:	98 2f       	mov	r25, r24
    3478:	9f 7d       	andi	r25, 0xDF	; 223
    347a:	95 54       	subi	r25, 0x45	; 69
    347c:	93 30       	cpi	r25, 0x03	; 3
    347e:	28 f4       	brcc	.+10     	; 0x348a <vfprintf+0x130>
    3480:	0c 5f       	subi	r16, 0xFC	; 252
    3482:	1f 4f       	sbci	r17, 0xFF	; 255
    3484:	9f e3       	ldi	r25, 0x3F	; 63
    3486:	99 83       	std	Y+1, r25	; 0x01
    3488:	0d c0       	rjmp	.+26     	; 0x34a4 <vfprintf+0x14a>
    348a:	83 36       	cpi	r24, 0x63	; 99
    348c:	31 f0       	breq	.+12     	; 0x349a <vfprintf+0x140>
    348e:	83 37       	cpi	r24, 0x73	; 115
    3490:	71 f0       	breq	.+28     	; 0x34ae <vfprintf+0x154>
    3492:	83 35       	cpi	r24, 0x53	; 83
    3494:	09 f0       	breq	.+2      	; 0x3498 <vfprintf+0x13e>
    3496:	55 c0       	rjmp	.+170    	; 0x3542 <vfprintf+0x1e8>
    3498:	20 c0       	rjmp	.+64     	; 0x34da <vfprintf+0x180>
    349a:	f8 01       	movw	r30, r16
    349c:	80 81       	ld	r24, Z
    349e:	89 83       	std	Y+1, r24	; 0x01
    34a0:	0e 5f       	subi	r16, 0xFE	; 254
    34a2:	1f 4f       	sbci	r17, 0xFF	; 255
    34a4:	88 24       	eor	r8, r8
    34a6:	83 94       	inc	r8
    34a8:	91 2c       	mov	r9, r1
    34aa:	53 01       	movw	r10, r6
    34ac:	12 c0       	rjmp	.+36     	; 0x34d2 <vfprintf+0x178>
    34ae:	28 01       	movw	r4, r16
    34b0:	f2 e0       	ldi	r31, 0x02	; 2
    34b2:	4f 0e       	add	r4, r31
    34b4:	51 1c       	adc	r5, r1
    34b6:	f8 01       	movw	r30, r16
    34b8:	a0 80       	ld	r10, Z
    34ba:	b1 80       	ldd	r11, Z+1	; 0x01
    34bc:	36 fe       	sbrs	r3, 6
    34be:	03 c0       	rjmp	.+6      	; 0x34c6 <vfprintf+0x16c>
    34c0:	69 2d       	mov	r22, r9
    34c2:	70 e0       	ldi	r23, 0x00	; 0
    34c4:	02 c0       	rjmp	.+4      	; 0x34ca <vfprintf+0x170>
    34c6:	6f ef       	ldi	r22, 0xFF	; 255
    34c8:	7f ef       	ldi	r23, 0xFF	; 255
    34ca:	c5 01       	movw	r24, r10
    34cc:	90 d2       	rcall	.+1312   	; 0x39ee <strnlen>
    34ce:	4c 01       	movw	r8, r24
    34d0:	82 01       	movw	r16, r4
    34d2:	f3 2d       	mov	r31, r3
    34d4:	ff 77       	andi	r31, 0x7F	; 127
    34d6:	3f 2e       	mov	r3, r31
    34d8:	15 c0       	rjmp	.+42     	; 0x3504 <vfprintf+0x1aa>
    34da:	28 01       	movw	r4, r16
    34dc:	22 e0       	ldi	r18, 0x02	; 2
    34de:	42 0e       	add	r4, r18
    34e0:	51 1c       	adc	r5, r1
    34e2:	f8 01       	movw	r30, r16
    34e4:	a0 80       	ld	r10, Z
    34e6:	b1 80       	ldd	r11, Z+1	; 0x01
    34e8:	36 fe       	sbrs	r3, 6
    34ea:	03 c0       	rjmp	.+6      	; 0x34f2 <vfprintf+0x198>
    34ec:	69 2d       	mov	r22, r9
    34ee:	70 e0       	ldi	r23, 0x00	; 0
    34f0:	02 c0       	rjmp	.+4      	; 0x34f6 <vfprintf+0x19c>
    34f2:	6f ef       	ldi	r22, 0xFF	; 255
    34f4:	7f ef       	ldi	r23, 0xFF	; 255
    34f6:	c5 01       	movw	r24, r10
    34f8:	68 d2       	rcall	.+1232   	; 0x39ca <strnlen_P>
    34fa:	4c 01       	movw	r8, r24
    34fc:	f3 2d       	mov	r31, r3
    34fe:	f0 68       	ori	r31, 0x80	; 128
    3500:	3f 2e       	mov	r3, r31
    3502:	82 01       	movw	r16, r4
    3504:	33 fc       	sbrc	r3, 3
    3506:	19 c0       	rjmp	.+50     	; 0x353a <vfprintf+0x1e0>
    3508:	82 2d       	mov	r24, r2
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	88 16       	cp	r8, r24
    350e:	99 06       	cpc	r9, r25
    3510:	a0 f4       	brcc	.+40     	; 0x353a <vfprintf+0x1e0>
    3512:	b6 01       	movw	r22, r12
    3514:	80 e2       	ldi	r24, 0x20	; 32
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	75 d2       	rcall	.+1258   	; 0x3a04 <fputc>
    351a:	2a 94       	dec	r2
    351c:	f5 cf       	rjmp	.-22     	; 0x3508 <vfprintf+0x1ae>
    351e:	f5 01       	movw	r30, r10
    3520:	37 fc       	sbrc	r3, 7
    3522:	85 91       	lpm	r24, Z+
    3524:	37 fe       	sbrs	r3, 7
    3526:	81 91       	ld	r24, Z+
    3528:	5f 01       	movw	r10, r30
    352a:	b6 01       	movw	r22, r12
    352c:	90 e0       	ldi	r25, 0x00	; 0
    352e:	6a d2       	rcall	.+1236   	; 0x3a04 <fputc>
    3530:	21 10       	cpse	r2, r1
    3532:	2a 94       	dec	r2
    3534:	21 e0       	ldi	r18, 0x01	; 1
    3536:	82 1a       	sub	r8, r18
    3538:	91 08       	sbc	r9, r1
    353a:	81 14       	cp	r8, r1
    353c:	91 04       	cpc	r9, r1
    353e:	79 f7       	brne	.-34     	; 0x351e <vfprintf+0x1c4>
    3540:	e1 c0       	rjmp	.+450    	; 0x3704 <vfprintf+0x3aa>
    3542:	84 36       	cpi	r24, 0x64	; 100
    3544:	11 f0       	breq	.+4      	; 0x354a <vfprintf+0x1f0>
    3546:	89 36       	cpi	r24, 0x69	; 105
    3548:	39 f5       	brne	.+78     	; 0x3598 <vfprintf+0x23e>
    354a:	f8 01       	movw	r30, r16
    354c:	37 fe       	sbrs	r3, 7
    354e:	07 c0       	rjmp	.+14     	; 0x355e <vfprintf+0x204>
    3550:	60 81       	ld	r22, Z
    3552:	71 81       	ldd	r23, Z+1	; 0x01
    3554:	82 81       	ldd	r24, Z+2	; 0x02
    3556:	93 81       	ldd	r25, Z+3	; 0x03
    3558:	0c 5f       	subi	r16, 0xFC	; 252
    355a:	1f 4f       	sbci	r17, 0xFF	; 255
    355c:	08 c0       	rjmp	.+16     	; 0x356e <vfprintf+0x214>
    355e:	60 81       	ld	r22, Z
    3560:	71 81       	ldd	r23, Z+1	; 0x01
    3562:	07 2e       	mov	r0, r23
    3564:	00 0c       	add	r0, r0
    3566:	88 0b       	sbc	r24, r24
    3568:	99 0b       	sbc	r25, r25
    356a:	0e 5f       	subi	r16, 0xFE	; 254
    356c:	1f 4f       	sbci	r17, 0xFF	; 255
    356e:	f3 2d       	mov	r31, r3
    3570:	ff 76       	andi	r31, 0x6F	; 111
    3572:	3f 2e       	mov	r3, r31
    3574:	97 ff       	sbrs	r25, 7
    3576:	09 c0       	rjmp	.+18     	; 0x358a <vfprintf+0x230>
    3578:	90 95       	com	r25
    357a:	80 95       	com	r24
    357c:	70 95       	com	r23
    357e:	61 95       	neg	r22
    3580:	7f 4f       	sbci	r23, 0xFF	; 255
    3582:	8f 4f       	sbci	r24, 0xFF	; 255
    3584:	9f 4f       	sbci	r25, 0xFF	; 255
    3586:	f0 68       	ori	r31, 0x80	; 128
    3588:	3f 2e       	mov	r3, r31
    358a:	2a e0       	ldi	r18, 0x0A	; 10
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	a3 01       	movw	r20, r6
    3590:	75 d2       	rcall	.+1258   	; 0x3a7c <__ultoa_invert>
    3592:	88 2e       	mov	r8, r24
    3594:	86 18       	sub	r8, r6
    3596:	44 c0       	rjmp	.+136    	; 0x3620 <vfprintf+0x2c6>
    3598:	85 37       	cpi	r24, 0x75	; 117
    359a:	31 f4       	brne	.+12     	; 0x35a8 <vfprintf+0x24e>
    359c:	23 2d       	mov	r18, r3
    359e:	2f 7e       	andi	r18, 0xEF	; 239
    35a0:	b2 2e       	mov	r11, r18
    35a2:	2a e0       	ldi	r18, 0x0A	; 10
    35a4:	30 e0       	ldi	r19, 0x00	; 0
    35a6:	25 c0       	rjmp	.+74     	; 0x35f2 <vfprintf+0x298>
    35a8:	93 2d       	mov	r25, r3
    35aa:	99 7f       	andi	r25, 0xF9	; 249
    35ac:	b9 2e       	mov	r11, r25
    35ae:	8f 36       	cpi	r24, 0x6F	; 111
    35b0:	c1 f0       	breq	.+48     	; 0x35e2 <vfprintf+0x288>
    35b2:	18 f4       	brcc	.+6      	; 0x35ba <vfprintf+0x260>
    35b4:	88 35       	cpi	r24, 0x58	; 88
    35b6:	79 f0       	breq	.+30     	; 0x35d6 <vfprintf+0x27c>
    35b8:	ae c0       	rjmp	.+348    	; 0x3716 <vfprintf+0x3bc>
    35ba:	80 37       	cpi	r24, 0x70	; 112
    35bc:	19 f0       	breq	.+6      	; 0x35c4 <vfprintf+0x26a>
    35be:	88 37       	cpi	r24, 0x78	; 120
    35c0:	21 f0       	breq	.+8      	; 0x35ca <vfprintf+0x270>
    35c2:	a9 c0       	rjmp	.+338    	; 0x3716 <vfprintf+0x3bc>
    35c4:	e9 2f       	mov	r30, r25
    35c6:	e0 61       	ori	r30, 0x10	; 16
    35c8:	be 2e       	mov	r11, r30
    35ca:	b4 fe       	sbrs	r11, 4
    35cc:	0d c0       	rjmp	.+26     	; 0x35e8 <vfprintf+0x28e>
    35ce:	fb 2d       	mov	r31, r11
    35d0:	f4 60       	ori	r31, 0x04	; 4
    35d2:	bf 2e       	mov	r11, r31
    35d4:	09 c0       	rjmp	.+18     	; 0x35e8 <vfprintf+0x28e>
    35d6:	34 fe       	sbrs	r3, 4
    35d8:	0a c0       	rjmp	.+20     	; 0x35ee <vfprintf+0x294>
    35da:	29 2f       	mov	r18, r25
    35dc:	26 60       	ori	r18, 0x06	; 6
    35de:	b2 2e       	mov	r11, r18
    35e0:	06 c0       	rjmp	.+12     	; 0x35ee <vfprintf+0x294>
    35e2:	28 e0       	ldi	r18, 0x08	; 8
    35e4:	30 e0       	ldi	r19, 0x00	; 0
    35e6:	05 c0       	rjmp	.+10     	; 0x35f2 <vfprintf+0x298>
    35e8:	20 e1       	ldi	r18, 0x10	; 16
    35ea:	30 e0       	ldi	r19, 0x00	; 0
    35ec:	02 c0       	rjmp	.+4      	; 0x35f2 <vfprintf+0x298>
    35ee:	20 e1       	ldi	r18, 0x10	; 16
    35f0:	32 e0       	ldi	r19, 0x02	; 2
    35f2:	f8 01       	movw	r30, r16
    35f4:	b7 fe       	sbrs	r11, 7
    35f6:	07 c0       	rjmp	.+14     	; 0x3606 <vfprintf+0x2ac>
    35f8:	60 81       	ld	r22, Z
    35fa:	71 81       	ldd	r23, Z+1	; 0x01
    35fc:	82 81       	ldd	r24, Z+2	; 0x02
    35fe:	93 81       	ldd	r25, Z+3	; 0x03
    3600:	0c 5f       	subi	r16, 0xFC	; 252
    3602:	1f 4f       	sbci	r17, 0xFF	; 255
    3604:	06 c0       	rjmp	.+12     	; 0x3612 <vfprintf+0x2b8>
    3606:	60 81       	ld	r22, Z
    3608:	71 81       	ldd	r23, Z+1	; 0x01
    360a:	80 e0       	ldi	r24, 0x00	; 0
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	0e 5f       	subi	r16, 0xFE	; 254
    3610:	1f 4f       	sbci	r17, 0xFF	; 255
    3612:	a3 01       	movw	r20, r6
    3614:	33 d2       	rcall	.+1126   	; 0x3a7c <__ultoa_invert>
    3616:	88 2e       	mov	r8, r24
    3618:	86 18       	sub	r8, r6
    361a:	fb 2d       	mov	r31, r11
    361c:	ff 77       	andi	r31, 0x7F	; 127
    361e:	3f 2e       	mov	r3, r31
    3620:	36 fe       	sbrs	r3, 6
    3622:	0d c0       	rjmp	.+26     	; 0x363e <vfprintf+0x2e4>
    3624:	23 2d       	mov	r18, r3
    3626:	2e 7f       	andi	r18, 0xFE	; 254
    3628:	a2 2e       	mov	r10, r18
    362a:	89 14       	cp	r8, r9
    362c:	58 f4       	brcc	.+22     	; 0x3644 <vfprintf+0x2ea>
    362e:	34 fe       	sbrs	r3, 4
    3630:	0b c0       	rjmp	.+22     	; 0x3648 <vfprintf+0x2ee>
    3632:	32 fc       	sbrc	r3, 2
    3634:	09 c0       	rjmp	.+18     	; 0x3648 <vfprintf+0x2ee>
    3636:	83 2d       	mov	r24, r3
    3638:	8e 7e       	andi	r24, 0xEE	; 238
    363a:	a8 2e       	mov	r10, r24
    363c:	05 c0       	rjmp	.+10     	; 0x3648 <vfprintf+0x2ee>
    363e:	b8 2c       	mov	r11, r8
    3640:	a3 2c       	mov	r10, r3
    3642:	03 c0       	rjmp	.+6      	; 0x364a <vfprintf+0x2f0>
    3644:	b8 2c       	mov	r11, r8
    3646:	01 c0       	rjmp	.+2      	; 0x364a <vfprintf+0x2f0>
    3648:	b9 2c       	mov	r11, r9
    364a:	a4 fe       	sbrs	r10, 4
    364c:	0f c0       	rjmp	.+30     	; 0x366c <vfprintf+0x312>
    364e:	fe 01       	movw	r30, r28
    3650:	e8 0d       	add	r30, r8
    3652:	f1 1d       	adc	r31, r1
    3654:	80 81       	ld	r24, Z
    3656:	80 33       	cpi	r24, 0x30	; 48
    3658:	21 f4       	brne	.+8      	; 0x3662 <vfprintf+0x308>
    365a:	9a 2d       	mov	r25, r10
    365c:	99 7e       	andi	r25, 0xE9	; 233
    365e:	a9 2e       	mov	r10, r25
    3660:	09 c0       	rjmp	.+18     	; 0x3674 <vfprintf+0x31a>
    3662:	a2 fe       	sbrs	r10, 2
    3664:	06 c0       	rjmp	.+12     	; 0x3672 <vfprintf+0x318>
    3666:	b3 94       	inc	r11
    3668:	b3 94       	inc	r11
    366a:	04 c0       	rjmp	.+8      	; 0x3674 <vfprintf+0x31a>
    366c:	8a 2d       	mov	r24, r10
    366e:	86 78       	andi	r24, 0x86	; 134
    3670:	09 f0       	breq	.+2      	; 0x3674 <vfprintf+0x31a>
    3672:	b3 94       	inc	r11
    3674:	a3 fc       	sbrc	r10, 3
    3676:	10 c0       	rjmp	.+32     	; 0x3698 <vfprintf+0x33e>
    3678:	a0 fe       	sbrs	r10, 0
    367a:	06 c0       	rjmp	.+12     	; 0x3688 <vfprintf+0x32e>
    367c:	b2 14       	cp	r11, r2
    367e:	80 f4       	brcc	.+32     	; 0x36a0 <vfprintf+0x346>
    3680:	28 0c       	add	r2, r8
    3682:	92 2c       	mov	r9, r2
    3684:	9b 18       	sub	r9, r11
    3686:	0d c0       	rjmp	.+26     	; 0x36a2 <vfprintf+0x348>
    3688:	b2 14       	cp	r11, r2
    368a:	58 f4       	brcc	.+22     	; 0x36a2 <vfprintf+0x348>
    368c:	b6 01       	movw	r22, r12
    368e:	80 e2       	ldi	r24, 0x20	; 32
    3690:	90 e0       	ldi	r25, 0x00	; 0
    3692:	b8 d1       	rcall	.+880    	; 0x3a04 <fputc>
    3694:	b3 94       	inc	r11
    3696:	f8 cf       	rjmp	.-16     	; 0x3688 <vfprintf+0x32e>
    3698:	b2 14       	cp	r11, r2
    369a:	18 f4       	brcc	.+6      	; 0x36a2 <vfprintf+0x348>
    369c:	2b 18       	sub	r2, r11
    369e:	02 c0       	rjmp	.+4      	; 0x36a4 <vfprintf+0x34a>
    36a0:	98 2c       	mov	r9, r8
    36a2:	21 2c       	mov	r2, r1
    36a4:	a4 fe       	sbrs	r10, 4
    36a6:	0f c0       	rjmp	.+30     	; 0x36c6 <vfprintf+0x36c>
    36a8:	b6 01       	movw	r22, r12
    36aa:	80 e3       	ldi	r24, 0x30	; 48
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	aa d1       	rcall	.+852    	; 0x3a04 <fputc>
    36b0:	a2 fe       	sbrs	r10, 2
    36b2:	16 c0       	rjmp	.+44     	; 0x36e0 <vfprintf+0x386>
    36b4:	a1 fc       	sbrc	r10, 1
    36b6:	03 c0       	rjmp	.+6      	; 0x36be <vfprintf+0x364>
    36b8:	88 e7       	ldi	r24, 0x78	; 120
    36ba:	90 e0       	ldi	r25, 0x00	; 0
    36bc:	02 c0       	rjmp	.+4      	; 0x36c2 <vfprintf+0x368>
    36be:	88 e5       	ldi	r24, 0x58	; 88
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	b6 01       	movw	r22, r12
    36c4:	0c c0       	rjmp	.+24     	; 0x36de <vfprintf+0x384>
    36c6:	8a 2d       	mov	r24, r10
    36c8:	86 78       	andi	r24, 0x86	; 134
    36ca:	51 f0       	breq	.+20     	; 0x36e0 <vfprintf+0x386>
    36cc:	a1 fe       	sbrs	r10, 1
    36ce:	02 c0       	rjmp	.+4      	; 0x36d4 <vfprintf+0x37a>
    36d0:	8b e2       	ldi	r24, 0x2B	; 43
    36d2:	01 c0       	rjmp	.+2      	; 0x36d6 <vfprintf+0x37c>
    36d4:	80 e2       	ldi	r24, 0x20	; 32
    36d6:	a7 fc       	sbrc	r10, 7
    36d8:	8d e2       	ldi	r24, 0x2D	; 45
    36da:	b6 01       	movw	r22, r12
    36dc:	90 e0       	ldi	r25, 0x00	; 0
    36de:	92 d1       	rcall	.+804    	; 0x3a04 <fputc>
    36e0:	89 14       	cp	r8, r9
    36e2:	30 f4       	brcc	.+12     	; 0x36f0 <vfprintf+0x396>
    36e4:	b6 01       	movw	r22, r12
    36e6:	80 e3       	ldi	r24, 0x30	; 48
    36e8:	90 e0       	ldi	r25, 0x00	; 0
    36ea:	8c d1       	rcall	.+792    	; 0x3a04 <fputc>
    36ec:	9a 94       	dec	r9
    36ee:	f8 cf       	rjmp	.-16     	; 0x36e0 <vfprintf+0x386>
    36f0:	8a 94       	dec	r8
    36f2:	f3 01       	movw	r30, r6
    36f4:	e8 0d       	add	r30, r8
    36f6:	f1 1d       	adc	r31, r1
    36f8:	80 81       	ld	r24, Z
    36fa:	b6 01       	movw	r22, r12
    36fc:	90 e0       	ldi	r25, 0x00	; 0
    36fe:	82 d1       	rcall	.+772    	; 0x3a04 <fputc>
    3700:	81 10       	cpse	r8, r1
    3702:	f6 cf       	rjmp	.-20     	; 0x36f0 <vfprintf+0x396>
    3704:	22 20       	and	r2, r2
    3706:	09 f4       	brne	.+2      	; 0x370a <vfprintf+0x3b0>
    3708:	4e ce       	rjmp	.-868    	; 0x33a6 <vfprintf+0x4c>
    370a:	b6 01       	movw	r22, r12
    370c:	80 e2       	ldi	r24, 0x20	; 32
    370e:	90 e0       	ldi	r25, 0x00	; 0
    3710:	79 d1       	rcall	.+754    	; 0x3a04 <fputc>
    3712:	2a 94       	dec	r2
    3714:	f7 cf       	rjmp	.-18     	; 0x3704 <vfprintf+0x3aa>
    3716:	f6 01       	movw	r30, r12
    3718:	86 81       	ldd	r24, Z+6	; 0x06
    371a:	97 81       	ldd	r25, Z+7	; 0x07
    371c:	02 c0       	rjmp	.+4      	; 0x3722 <vfprintf+0x3c8>
    371e:	8f ef       	ldi	r24, 0xFF	; 255
    3720:	9f ef       	ldi	r25, 0xFF	; 255
    3722:	2b 96       	adiw	r28, 0x0b	; 11
    3724:	0f b6       	in	r0, 0x3f	; 63
    3726:	f8 94       	cli
    3728:	de bf       	out	0x3e, r29	; 62
    372a:	0f be       	out	0x3f, r0	; 63
    372c:	cd bf       	out	0x3d, r28	; 61
    372e:	df 91       	pop	r29
    3730:	cf 91       	pop	r28
    3732:	1f 91       	pop	r17
    3734:	0f 91       	pop	r16
    3736:	ff 90       	pop	r15
    3738:	ef 90       	pop	r14
    373a:	df 90       	pop	r13
    373c:	cf 90       	pop	r12
    373e:	bf 90       	pop	r11
    3740:	af 90       	pop	r10
    3742:	9f 90       	pop	r9
    3744:	8f 90       	pop	r8
    3746:	7f 90       	pop	r7
    3748:	6f 90       	pop	r6
    374a:	5f 90       	pop	r5
    374c:	4f 90       	pop	r4
    374e:	3f 90       	pop	r3
    3750:	2f 90       	pop	r2
    3752:	08 95       	ret

00003754 <calloc>:
    3754:	0f 93       	push	r16
    3756:	1f 93       	push	r17
    3758:	cf 93       	push	r28
    375a:	df 93       	push	r29
    375c:	86 9f       	mul	r24, r22
    375e:	80 01       	movw	r16, r0
    3760:	87 9f       	mul	r24, r23
    3762:	10 0d       	add	r17, r0
    3764:	96 9f       	mul	r25, r22
    3766:	10 0d       	add	r17, r0
    3768:	11 24       	eor	r1, r1
    376a:	c8 01       	movw	r24, r16
    376c:	0d d0       	rcall	.+26     	; 0x3788 <malloc>
    376e:	ec 01       	movw	r28, r24
    3770:	00 97       	sbiw	r24, 0x00	; 0
    3772:	21 f0       	breq	.+8      	; 0x377c <calloc+0x28>
    3774:	a8 01       	movw	r20, r16
    3776:	60 e0       	ldi	r22, 0x00	; 0
    3778:	70 e0       	ldi	r23, 0x00	; 0
    377a:	32 d1       	rcall	.+612    	; 0x39e0 <memset>
    377c:	ce 01       	movw	r24, r28
    377e:	df 91       	pop	r29
    3780:	cf 91       	pop	r28
    3782:	1f 91       	pop	r17
    3784:	0f 91       	pop	r16
    3786:	08 95       	ret

00003788 <malloc>:
    3788:	0f 93       	push	r16
    378a:	1f 93       	push	r17
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
    3790:	82 30       	cpi	r24, 0x02	; 2
    3792:	91 05       	cpc	r25, r1
    3794:	10 f4       	brcc	.+4      	; 0x379a <malloc+0x12>
    3796:	82 e0       	ldi	r24, 0x02	; 2
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	e0 91 eb 0a 	lds	r30, 0x0AEB	; 0x800aeb <__flp>
    379e:	f0 91 ec 0a 	lds	r31, 0x0AEC	; 0x800aec <__flp+0x1>
    37a2:	20 e0       	ldi	r18, 0x00	; 0
    37a4:	30 e0       	ldi	r19, 0x00	; 0
    37a6:	a0 e0       	ldi	r26, 0x00	; 0
    37a8:	b0 e0       	ldi	r27, 0x00	; 0
    37aa:	30 97       	sbiw	r30, 0x00	; 0
    37ac:	19 f1       	breq	.+70     	; 0x37f4 <malloc+0x6c>
    37ae:	40 81       	ld	r20, Z
    37b0:	51 81       	ldd	r21, Z+1	; 0x01
    37b2:	02 81       	ldd	r16, Z+2	; 0x02
    37b4:	13 81       	ldd	r17, Z+3	; 0x03
    37b6:	48 17       	cp	r20, r24
    37b8:	59 07       	cpc	r21, r25
    37ba:	c8 f0       	brcs	.+50     	; 0x37ee <malloc+0x66>
    37bc:	84 17       	cp	r24, r20
    37be:	95 07       	cpc	r25, r21
    37c0:	69 f4       	brne	.+26     	; 0x37dc <malloc+0x54>
    37c2:	10 97       	sbiw	r26, 0x00	; 0
    37c4:	31 f0       	breq	.+12     	; 0x37d2 <malloc+0x4a>
    37c6:	12 96       	adiw	r26, 0x02	; 2
    37c8:	0c 93       	st	X, r16
    37ca:	12 97       	sbiw	r26, 0x02	; 2
    37cc:	13 96       	adiw	r26, 0x03	; 3
    37ce:	1c 93       	st	X, r17
    37d0:	27 c0       	rjmp	.+78     	; 0x3820 <malloc+0x98>
    37d2:	00 93 eb 0a 	sts	0x0AEB, r16	; 0x800aeb <__flp>
    37d6:	10 93 ec 0a 	sts	0x0AEC, r17	; 0x800aec <__flp+0x1>
    37da:	22 c0       	rjmp	.+68     	; 0x3820 <malloc+0x98>
    37dc:	21 15       	cp	r18, r1
    37de:	31 05       	cpc	r19, r1
    37e0:	19 f0       	breq	.+6      	; 0x37e8 <malloc+0x60>
    37e2:	42 17       	cp	r20, r18
    37e4:	53 07       	cpc	r21, r19
    37e6:	18 f4       	brcc	.+6      	; 0x37ee <malloc+0x66>
    37e8:	9a 01       	movw	r18, r20
    37ea:	bd 01       	movw	r22, r26
    37ec:	ef 01       	movw	r28, r30
    37ee:	df 01       	movw	r26, r30
    37f0:	f8 01       	movw	r30, r16
    37f2:	db cf       	rjmp	.-74     	; 0x37aa <malloc+0x22>
    37f4:	21 15       	cp	r18, r1
    37f6:	31 05       	cpc	r19, r1
    37f8:	f9 f0       	breq	.+62     	; 0x3838 <malloc+0xb0>
    37fa:	28 1b       	sub	r18, r24
    37fc:	39 0b       	sbc	r19, r25
    37fe:	24 30       	cpi	r18, 0x04	; 4
    3800:	31 05       	cpc	r19, r1
    3802:	80 f4       	brcc	.+32     	; 0x3824 <malloc+0x9c>
    3804:	8a 81       	ldd	r24, Y+2	; 0x02
    3806:	9b 81       	ldd	r25, Y+3	; 0x03
    3808:	61 15       	cp	r22, r1
    380a:	71 05       	cpc	r23, r1
    380c:	21 f0       	breq	.+8      	; 0x3816 <malloc+0x8e>
    380e:	fb 01       	movw	r30, r22
    3810:	93 83       	std	Z+3, r25	; 0x03
    3812:	82 83       	std	Z+2, r24	; 0x02
    3814:	04 c0       	rjmp	.+8      	; 0x381e <malloc+0x96>
    3816:	90 93 ec 0a 	sts	0x0AEC, r25	; 0x800aec <__flp+0x1>
    381a:	80 93 eb 0a 	sts	0x0AEB, r24	; 0x800aeb <__flp>
    381e:	fe 01       	movw	r30, r28
    3820:	32 96       	adiw	r30, 0x02	; 2
    3822:	44 c0       	rjmp	.+136    	; 0x38ac <malloc+0x124>
    3824:	fe 01       	movw	r30, r28
    3826:	e2 0f       	add	r30, r18
    3828:	f3 1f       	adc	r31, r19
    382a:	81 93       	st	Z+, r24
    382c:	91 93       	st	Z+, r25
    382e:	22 50       	subi	r18, 0x02	; 2
    3830:	31 09       	sbc	r19, r1
    3832:	39 83       	std	Y+1, r19	; 0x01
    3834:	28 83       	st	Y, r18
    3836:	3a c0       	rjmp	.+116    	; 0x38ac <malloc+0x124>
    3838:	20 91 e9 0a 	lds	r18, 0x0AE9	; 0x800ae9 <__brkval>
    383c:	30 91 ea 0a 	lds	r19, 0x0AEA	; 0x800aea <__brkval+0x1>
    3840:	23 2b       	or	r18, r19
    3842:	41 f4       	brne	.+16     	; 0x3854 <malloc+0xcc>
    3844:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    3848:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    384c:	30 93 ea 0a 	sts	0x0AEA, r19	; 0x800aea <__brkval+0x1>
    3850:	20 93 e9 0a 	sts	0x0AE9, r18	; 0x800ae9 <__brkval>
    3854:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    3858:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    385c:	21 15       	cp	r18, r1
    385e:	31 05       	cpc	r19, r1
    3860:	41 f4       	brne	.+16     	; 0x3872 <malloc+0xea>
    3862:	2d b7       	in	r18, 0x3d	; 61
    3864:	3e b7       	in	r19, 0x3e	; 62
    3866:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    386a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    386e:	24 1b       	sub	r18, r20
    3870:	35 0b       	sbc	r19, r21
    3872:	e0 91 e9 0a 	lds	r30, 0x0AE9	; 0x800ae9 <__brkval>
    3876:	f0 91 ea 0a 	lds	r31, 0x0AEA	; 0x800aea <__brkval+0x1>
    387a:	e2 17       	cp	r30, r18
    387c:	f3 07       	cpc	r31, r19
    387e:	a0 f4       	brcc	.+40     	; 0x38a8 <malloc+0x120>
    3880:	2e 1b       	sub	r18, r30
    3882:	3f 0b       	sbc	r19, r31
    3884:	28 17       	cp	r18, r24
    3886:	39 07       	cpc	r19, r25
    3888:	78 f0       	brcs	.+30     	; 0x38a8 <malloc+0x120>
    388a:	ac 01       	movw	r20, r24
    388c:	4e 5f       	subi	r20, 0xFE	; 254
    388e:	5f 4f       	sbci	r21, 0xFF	; 255
    3890:	24 17       	cp	r18, r20
    3892:	35 07       	cpc	r19, r21
    3894:	48 f0       	brcs	.+18     	; 0x38a8 <malloc+0x120>
    3896:	4e 0f       	add	r20, r30
    3898:	5f 1f       	adc	r21, r31
    389a:	50 93 ea 0a 	sts	0x0AEA, r21	; 0x800aea <__brkval+0x1>
    389e:	40 93 e9 0a 	sts	0x0AE9, r20	; 0x800ae9 <__brkval>
    38a2:	81 93       	st	Z+, r24
    38a4:	91 93       	st	Z+, r25
    38a6:	02 c0       	rjmp	.+4      	; 0x38ac <malloc+0x124>
    38a8:	e0 e0       	ldi	r30, 0x00	; 0
    38aa:	f0 e0       	ldi	r31, 0x00	; 0
    38ac:	cf 01       	movw	r24, r30
    38ae:	df 91       	pop	r29
    38b0:	cf 91       	pop	r28
    38b2:	1f 91       	pop	r17
    38b4:	0f 91       	pop	r16
    38b6:	08 95       	ret

000038b8 <free>:
    38b8:	cf 93       	push	r28
    38ba:	df 93       	push	r29
    38bc:	00 97       	sbiw	r24, 0x00	; 0
    38be:	09 f4       	brne	.+2      	; 0x38c2 <free+0xa>
    38c0:	81 c0       	rjmp	.+258    	; 0x39c4 <free+0x10c>
    38c2:	fc 01       	movw	r30, r24
    38c4:	32 97       	sbiw	r30, 0x02	; 2
    38c6:	13 82       	std	Z+3, r1	; 0x03
    38c8:	12 82       	std	Z+2, r1	; 0x02
    38ca:	a0 91 eb 0a 	lds	r26, 0x0AEB	; 0x800aeb <__flp>
    38ce:	b0 91 ec 0a 	lds	r27, 0x0AEC	; 0x800aec <__flp+0x1>
    38d2:	10 97       	sbiw	r26, 0x00	; 0
    38d4:	81 f4       	brne	.+32     	; 0x38f6 <free+0x3e>
    38d6:	20 81       	ld	r18, Z
    38d8:	31 81       	ldd	r19, Z+1	; 0x01
    38da:	82 0f       	add	r24, r18
    38dc:	93 1f       	adc	r25, r19
    38de:	20 91 e9 0a 	lds	r18, 0x0AE9	; 0x800ae9 <__brkval>
    38e2:	30 91 ea 0a 	lds	r19, 0x0AEA	; 0x800aea <__brkval+0x1>
    38e6:	28 17       	cp	r18, r24
    38e8:	39 07       	cpc	r19, r25
    38ea:	51 f5       	brne	.+84     	; 0x3940 <free+0x88>
    38ec:	f0 93 ea 0a 	sts	0x0AEA, r31	; 0x800aea <__brkval+0x1>
    38f0:	e0 93 e9 0a 	sts	0x0AE9, r30	; 0x800ae9 <__brkval>
    38f4:	67 c0       	rjmp	.+206    	; 0x39c4 <free+0x10c>
    38f6:	ed 01       	movw	r28, r26
    38f8:	20 e0       	ldi	r18, 0x00	; 0
    38fa:	30 e0       	ldi	r19, 0x00	; 0
    38fc:	ce 17       	cp	r28, r30
    38fe:	df 07       	cpc	r29, r31
    3900:	40 f4       	brcc	.+16     	; 0x3912 <free+0x5a>
    3902:	4a 81       	ldd	r20, Y+2	; 0x02
    3904:	5b 81       	ldd	r21, Y+3	; 0x03
    3906:	9e 01       	movw	r18, r28
    3908:	41 15       	cp	r20, r1
    390a:	51 05       	cpc	r21, r1
    390c:	f1 f0       	breq	.+60     	; 0x394a <free+0x92>
    390e:	ea 01       	movw	r28, r20
    3910:	f5 cf       	rjmp	.-22     	; 0x38fc <free+0x44>
    3912:	d3 83       	std	Z+3, r29	; 0x03
    3914:	c2 83       	std	Z+2, r28	; 0x02
    3916:	40 81       	ld	r20, Z
    3918:	51 81       	ldd	r21, Z+1	; 0x01
    391a:	84 0f       	add	r24, r20
    391c:	95 1f       	adc	r25, r21
    391e:	c8 17       	cp	r28, r24
    3920:	d9 07       	cpc	r29, r25
    3922:	59 f4       	brne	.+22     	; 0x393a <free+0x82>
    3924:	88 81       	ld	r24, Y
    3926:	99 81       	ldd	r25, Y+1	; 0x01
    3928:	84 0f       	add	r24, r20
    392a:	95 1f       	adc	r25, r21
    392c:	02 96       	adiw	r24, 0x02	; 2
    392e:	91 83       	std	Z+1, r25	; 0x01
    3930:	80 83       	st	Z, r24
    3932:	8a 81       	ldd	r24, Y+2	; 0x02
    3934:	9b 81       	ldd	r25, Y+3	; 0x03
    3936:	93 83       	std	Z+3, r25	; 0x03
    3938:	82 83       	std	Z+2, r24	; 0x02
    393a:	21 15       	cp	r18, r1
    393c:	31 05       	cpc	r19, r1
    393e:	29 f4       	brne	.+10     	; 0x394a <free+0x92>
    3940:	f0 93 ec 0a 	sts	0x0AEC, r31	; 0x800aec <__flp+0x1>
    3944:	e0 93 eb 0a 	sts	0x0AEB, r30	; 0x800aeb <__flp>
    3948:	3d c0       	rjmp	.+122    	; 0x39c4 <free+0x10c>
    394a:	e9 01       	movw	r28, r18
    394c:	fb 83       	std	Y+3, r31	; 0x03
    394e:	ea 83       	std	Y+2, r30	; 0x02
    3950:	49 91       	ld	r20, Y+
    3952:	59 91       	ld	r21, Y+
    3954:	c4 0f       	add	r28, r20
    3956:	d5 1f       	adc	r29, r21
    3958:	ec 17       	cp	r30, r28
    395a:	fd 07       	cpc	r31, r29
    395c:	61 f4       	brne	.+24     	; 0x3976 <free+0xbe>
    395e:	80 81       	ld	r24, Z
    3960:	91 81       	ldd	r25, Z+1	; 0x01
    3962:	84 0f       	add	r24, r20
    3964:	95 1f       	adc	r25, r21
    3966:	02 96       	adiw	r24, 0x02	; 2
    3968:	e9 01       	movw	r28, r18
    396a:	99 83       	std	Y+1, r25	; 0x01
    396c:	88 83       	st	Y, r24
    396e:	82 81       	ldd	r24, Z+2	; 0x02
    3970:	93 81       	ldd	r25, Z+3	; 0x03
    3972:	9b 83       	std	Y+3, r25	; 0x03
    3974:	8a 83       	std	Y+2, r24	; 0x02
    3976:	e0 e0       	ldi	r30, 0x00	; 0
    3978:	f0 e0       	ldi	r31, 0x00	; 0
    397a:	12 96       	adiw	r26, 0x02	; 2
    397c:	8d 91       	ld	r24, X+
    397e:	9c 91       	ld	r25, X
    3980:	13 97       	sbiw	r26, 0x03	; 3
    3982:	00 97       	sbiw	r24, 0x00	; 0
    3984:	19 f0       	breq	.+6      	; 0x398c <free+0xd4>
    3986:	fd 01       	movw	r30, r26
    3988:	dc 01       	movw	r26, r24
    398a:	f7 cf       	rjmp	.-18     	; 0x397a <free+0xc2>
    398c:	8d 91       	ld	r24, X+
    398e:	9c 91       	ld	r25, X
    3990:	11 97       	sbiw	r26, 0x01	; 1
    3992:	9d 01       	movw	r18, r26
    3994:	2e 5f       	subi	r18, 0xFE	; 254
    3996:	3f 4f       	sbci	r19, 0xFF	; 255
    3998:	82 0f       	add	r24, r18
    399a:	93 1f       	adc	r25, r19
    399c:	20 91 e9 0a 	lds	r18, 0x0AE9	; 0x800ae9 <__brkval>
    39a0:	30 91 ea 0a 	lds	r19, 0x0AEA	; 0x800aea <__brkval+0x1>
    39a4:	28 17       	cp	r18, r24
    39a6:	39 07       	cpc	r19, r25
    39a8:	69 f4       	brne	.+26     	; 0x39c4 <free+0x10c>
    39aa:	30 97       	sbiw	r30, 0x00	; 0
    39ac:	29 f4       	brne	.+10     	; 0x39b8 <free+0x100>
    39ae:	10 92 ec 0a 	sts	0x0AEC, r1	; 0x800aec <__flp+0x1>
    39b2:	10 92 eb 0a 	sts	0x0AEB, r1	; 0x800aeb <__flp>
    39b6:	02 c0       	rjmp	.+4      	; 0x39bc <free+0x104>
    39b8:	13 82       	std	Z+3, r1	; 0x03
    39ba:	12 82       	std	Z+2, r1	; 0x02
    39bc:	b0 93 ea 0a 	sts	0x0AEA, r27	; 0x800aea <__brkval+0x1>
    39c0:	a0 93 e9 0a 	sts	0x0AE9, r26	; 0x800ae9 <__brkval>
    39c4:	df 91       	pop	r29
    39c6:	cf 91       	pop	r28
    39c8:	08 95       	ret

000039ca <strnlen_P>:
    39ca:	fc 01       	movw	r30, r24
    39cc:	05 90       	lpm	r0, Z+
    39ce:	61 50       	subi	r22, 0x01	; 1
    39d0:	70 40       	sbci	r23, 0x00	; 0
    39d2:	01 10       	cpse	r0, r1
    39d4:	d8 f7       	brcc	.-10     	; 0x39cc <strnlen_P+0x2>
    39d6:	80 95       	com	r24
    39d8:	90 95       	com	r25
    39da:	8e 0f       	add	r24, r30
    39dc:	9f 1f       	adc	r25, r31
    39de:	08 95       	ret

000039e0 <memset>:
    39e0:	dc 01       	movw	r26, r24
    39e2:	01 c0       	rjmp	.+2      	; 0x39e6 <memset+0x6>
    39e4:	6d 93       	st	X+, r22
    39e6:	41 50       	subi	r20, 0x01	; 1
    39e8:	50 40       	sbci	r21, 0x00	; 0
    39ea:	e0 f7       	brcc	.-8      	; 0x39e4 <memset+0x4>
    39ec:	08 95       	ret

000039ee <strnlen>:
    39ee:	fc 01       	movw	r30, r24
    39f0:	61 50       	subi	r22, 0x01	; 1
    39f2:	70 40       	sbci	r23, 0x00	; 0
    39f4:	01 90       	ld	r0, Z+
    39f6:	01 10       	cpse	r0, r1
    39f8:	d8 f7       	brcc	.-10     	; 0x39f0 <strnlen+0x2>
    39fa:	80 95       	com	r24
    39fc:	90 95       	com	r25
    39fe:	8e 0f       	add	r24, r30
    3a00:	9f 1f       	adc	r25, r31
    3a02:	08 95       	ret

00003a04 <fputc>:
    3a04:	0f 93       	push	r16
    3a06:	1f 93       	push	r17
    3a08:	cf 93       	push	r28
    3a0a:	df 93       	push	r29
    3a0c:	fb 01       	movw	r30, r22
    3a0e:	23 81       	ldd	r18, Z+3	; 0x03
    3a10:	21 fd       	sbrc	r18, 1
    3a12:	03 c0       	rjmp	.+6      	; 0x3a1a <fputc+0x16>
    3a14:	8f ef       	ldi	r24, 0xFF	; 255
    3a16:	9f ef       	ldi	r25, 0xFF	; 255
    3a18:	2c c0       	rjmp	.+88     	; 0x3a72 <fputc+0x6e>
    3a1a:	22 ff       	sbrs	r18, 2
    3a1c:	16 c0       	rjmp	.+44     	; 0x3a4a <fputc+0x46>
    3a1e:	46 81       	ldd	r20, Z+6	; 0x06
    3a20:	57 81       	ldd	r21, Z+7	; 0x07
    3a22:	24 81       	ldd	r18, Z+4	; 0x04
    3a24:	35 81       	ldd	r19, Z+5	; 0x05
    3a26:	42 17       	cp	r20, r18
    3a28:	53 07       	cpc	r21, r19
    3a2a:	44 f4       	brge	.+16     	; 0x3a3c <fputc+0x38>
    3a2c:	a0 81       	ld	r26, Z
    3a2e:	b1 81       	ldd	r27, Z+1	; 0x01
    3a30:	9d 01       	movw	r18, r26
    3a32:	2f 5f       	subi	r18, 0xFF	; 255
    3a34:	3f 4f       	sbci	r19, 0xFF	; 255
    3a36:	31 83       	std	Z+1, r19	; 0x01
    3a38:	20 83       	st	Z, r18
    3a3a:	8c 93       	st	X, r24
    3a3c:	26 81       	ldd	r18, Z+6	; 0x06
    3a3e:	37 81       	ldd	r19, Z+7	; 0x07
    3a40:	2f 5f       	subi	r18, 0xFF	; 255
    3a42:	3f 4f       	sbci	r19, 0xFF	; 255
    3a44:	37 83       	std	Z+7, r19	; 0x07
    3a46:	26 83       	std	Z+6, r18	; 0x06
    3a48:	14 c0       	rjmp	.+40     	; 0x3a72 <fputc+0x6e>
    3a4a:	8b 01       	movw	r16, r22
    3a4c:	ec 01       	movw	r28, r24
    3a4e:	fb 01       	movw	r30, r22
    3a50:	00 84       	ldd	r0, Z+8	; 0x08
    3a52:	f1 85       	ldd	r31, Z+9	; 0x09
    3a54:	e0 2d       	mov	r30, r0
    3a56:	09 95       	icall
    3a58:	89 2b       	or	r24, r25
    3a5a:	e1 f6       	brne	.-72     	; 0x3a14 <fputc+0x10>
    3a5c:	d8 01       	movw	r26, r16
    3a5e:	16 96       	adiw	r26, 0x06	; 6
    3a60:	8d 91       	ld	r24, X+
    3a62:	9c 91       	ld	r25, X
    3a64:	17 97       	sbiw	r26, 0x07	; 7
    3a66:	01 96       	adiw	r24, 0x01	; 1
    3a68:	17 96       	adiw	r26, 0x07	; 7
    3a6a:	9c 93       	st	X, r25
    3a6c:	8e 93       	st	-X, r24
    3a6e:	16 97       	sbiw	r26, 0x06	; 6
    3a70:	ce 01       	movw	r24, r28
    3a72:	df 91       	pop	r29
    3a74:	cf 91       	pop	r28
    3a76:	1f 91       	pop	r17
    3a78:	0f 91       	pop	r16
    3a7a:	08 95       	ret

00003a7c <__ultoa_invert>:
    3a7c:	fa 01       	movw	r30, r20
    3a7e:	aa 27       	eor	r26, r26
    3a80:	28 30       	cpi	r18, 0x08	; 8
    3a82:	51 f1       	breq	.+84     	; 0x3ad8 <__ultoa_invert+0x5c>
    3a84:	20 31       	cpi	r18, 0x10	; 16
    3a86:	81 f1       	breq	.+96     	; 0x3ae8 <__ultoa_invert+0x6c>
    3a88:	e8 94       	clt
    3a8a:	6f 93       	push	r22
    3a8c:	6e 7f       	andi	r22, 0xFE	; 254
    3a8e:	6e 5f       	subi	r22, 0xFE	; 254
    3a90:	7f 4f       	sbci	r23, 0xFF	; 255
    3a92:	8f 4f       	sbci	r24, 0xFF	; 255
    3a94:	9f 4f       	sbci	r25, 0xFF	; 255
    3a96:	af 4f       	sbci	r26, 0xFF	; 255
    3a98:	b1 e0       	ldi	r27, 0x01	; 1
    3a9a:	3e d0       	rcall	.+124    	; 0x3b18 <__ultoa_invert+0x9c>
    3a9c:	b4 e0       	ldi	r27, 0x04	; 4
    3a9e:	3c d0       	rcall	.+120    	; 0x3b18 <__ultoa_invert+0x9c>
    3aa0:	67 0f       	add	r22, r23
    3aa2:	78 1f       	adc	r23, r24
    3aa4:	89 1f       	adc	r24, r25
    3aa6:	9a 1f       	adc	r25, r26
    3aa8:	a1 1d       	adc	r26, r1
    3aaa:	68 0f       	add	r22, r24
    3aac:	79 1f       	adc	r23, r25
    3aae:	8a 1f       	adc	r24, r26
    3ab0:	91 1d       	adc	r25, r1
    3ab2:	a1 1d       	adc	r26, r1
    3ab4:	6a 0f       	add	r22, r26
    3ab6:	71 1d       	adc	r23, r1
    3ab8:	81 1d       	adc	r24, r1
    3aba:	91 1d       	adc	r25, r1
    3abc:	a1 1d       	adc	r26, r1
    3abe:	20 d0       	rcall	.+64     	; 0x3b00 <__ultoa_invert+0x84>
    3ac0:	09 f4       	brne	.+2      	; 0x3ac4 <__ultoa_invert+0x48>
    3ac2:	68 94       	set
    3ac4:	3f 91       	pop	r19
    3ac6:	2a e0       	ldi	r18, 0x0A	; 10
    3ac8:	26 9f       	mul	r18, r22
    3aca:	11 24       	eor	r1, r1
    3acc:	30 19       	sub	r19, r0
    3ace:	30 5d       	subi	r19, 0xD0	; 208
    3ad0:	31 93       	st	Z+, r19
    3ad2:	de f6       	brtc	.-74     	; 0x3a8a <__ultoa_invert+0xe>
    3ad4:	cf 01       	movw	r24, r30
    3ad6:	08 95       	ret
    3ad8:	46 2f       	mov	r20, r22
    3ada:	47 70       	andi	r20, 0x07	; 7
    3adc:	40 5d       	subi	r20, 0xD0	; 208
    3ade:	41 93       	st	Z+, r20
    3ae0:	b3 e0       	ldi	r27, 0x03	; 3
    3ae2:	0f d0       	rcall	.+30     	; 0x3b02 <__ultoa_invert+0x86>
    3ae4:	c9 f7       	brne	.-14     	; 0x3ad8 <__ultoa_invert+0x5c>
    3ae6:	f6 cf       	rjmp	.-20     	; 0x3ad4 <__ultoa_invert+0x58>
    3ae8:	46 2f       	mov	r20, r22
    3aea:	4f 70       	andi	r20, 0x0F	; 15
    3aec:	40 5d       	subi	r20, 0xD0	; 208
    3aee:	4a 33       	cpi	r20, 0x3A	; 58
    3af0:	18 f0       	brcs	.+6      	; 0x3af8 <__ultoa_invert+0x7c>
    3af2:	49 5d       	subi	r20, 0xD9	; 217
    3af4:	31 fd       	sbrc	r19, 1
    3af6:	40 52       	subi	r20, 0x20	; 32
    3af8:	41 93       	st	Z+, r20
    3afa:	02 d0       	rcall	.+4      	; 0x3b00 <__ultoa_invert+0x84>
    3afc:	a9 f7       	brne	.-22     	; 0x3ae8 <__ultoa_invert+0x6c>
    3afe:	ea cf       	rjmp	.-44     	; 0x3ad4 <__ultoa_invert+0x58>
    3b00:	b4 e0       	ldi	r27, 0x04	; 4
    3b02:	a6 95       	lsr	r26
    3b04:	97 95       	ror	r25
    3b06:	87 95       	ror	r24
    3b08:	77 95       	ror	r23
    3b0a:	67 95       	ror	r22
    3b0c:	ba 95       	dec	r27
    3b0e:	c9 f7       	brne	.-14     	; 0x3b02 <__ultoa_invert+0x86>
    3b10:	00 97       	sbiw	r24, 0x00	; 0
    3b12:	61 05       	cpc	r22, r1
    3b14:	71 05       	cpc	r23, r1
    3b16:	08 95       	ret
    3b18:	9b 01       	movw	r18, r22
    3b1a:	ac 01       	movw	r20, r24
    3b1c:	0a 2e       	mov	r0, r26
    3b1e:	06 94       	lsr	r0
    3b20:	57 95       	ror	r21
    3b22:	47 95       	ror	r20
    3b24:	37 95       	ror	r19
    3b26:	27 95       	ror	r18
    3b28:	ba 95       	dec	r27
    3b2a:	c9 f7       	brne	.-14     	; 0x3b1e <__ultoa_invert+0xa2>
    3b2c:	62 0f       	add	r22, r18
    3b2e:	73 1f       	adc	r23, r19
    3b30:	84 1f       	adc	r24, r20
    3b32:	95 1f       	adc	r25, r21
    3b34:	a0 1d       	adc	r26, r0
    3b36:	08 95       	ret

00003b38 <_exit>:
    3b38:	f8 94       	cli

00003b3a <__stop_program>:
    3b3a:	ff cf       	rjmp	.-2      	; 0x3b3a <__stop_program>
