
ControlBoxDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  00003254  000032e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003254  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000006f3  008002cc  008002cc  000033b4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000033b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003410  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000009f0  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000115d0  00000000  00000000  00003e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000047db  00000000  00000000  00015410  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005027  00000000  00000000  00019beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001b30  00000000  00000000  0001ec14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003e54  00000000  00000000  00020744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000890e  00000000  00000000  00024598  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009c8  00000000  00000000  0002cea6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a3 c0       	rjmp	.+326    	; 0x148 <__ctors_end>
       2:	00 00       	nop
       4:	cb c0       	rjmp	.+406    	; 0x19c <__bad_interrupt>
       6:	00 00       	nop
       8:	c9 c0       	rjmp	.+402    	; 0x19c <__bad_interrupt>
       a:	00 00       	nop
       c:	c7 c0       	rjmp	.+398    	; 0x19c <__bad_interrupt>
       e:	00 00       	nop
      10:	c5 c0       	rjmp	.+394    	; 0x19c <__bad_interrupt>
      12:	00 00       	nop
      14:	c3 c0       	rjmp	.+390    	; 0x19c <__bad_interrupt>
      16:	00 00       	nop
      18:	c1 c0       	rjmp	.+386    	; 0x19c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	bf c0       	rjmp	.+382    	; 0x19c <__bad_interrupt>
      1e:	00 00       	nop
      20:	bd c0       	rjmp	.+378    	; 0x19c <__bad_interrupt>
      22:	00 00       	nop
      24:	bb c0       	rjmp	.+374    	; 0x19c <__bad_interrupt>
      26:	00 00       	nop
      28:	b9 c0       	rjmp	.+370    	; 0x19c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b7 c0       	rjmp	.+366    	; 0x19c <__bad_interrupt>
      2e:	00 00       	nop
      30:	b5 c0       	rjmp	.+362    	; 0x19c <__bad_interrupt>
      32:	00 00       	nop
      34:	b3 c0       	rjmp	.+358    	; 0x19c <__bad_interrupt>
      36:	00 00       	nop
      38:	b1 c0       	rjmp	.+354    	; 0x19c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	af c0       	rjmp	.+350    	; 0x19c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ad c0       	rjmp	.+346    	; 0x19c <__bad_interrupt>
      42:	00 00       	nop
      44:	ab c0       	rjmp	.+342    	; 0x19c <__bad_interrupt>
      46:	00 00       	nop
      48:	a9 c0       	rjmp	.+338    	; 0x19c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a7 c0       	rjmp	.+334    	; 0x19c <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 7c 0f 	jmp	0x1ef8	; 0x1ef8 <__vector_20>
      54:	a3 c0       	rjmp	.+326    	; 0x19c <__bad_interrupt>
      56:	00 00       	nop
      58:	a1 c0       	rjmp	.+322    	; 0x19c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 2d 0f 	jmp	0x1e5a	; 0x1e5a <__vector_23>
      60:	9d c0       	rjmp	.+314    	; 0x19c <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 37 10 	jmp	0x206e	; 0x206e <__vector_25>
      68:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <__vector_26>
      6c:	97 c0       	rjmp	.+302    	; 0x19c <__bad_interrupt>
      6e:	00 00       	nop
      70:	95 c0       	rjmp	.+298    	; 0x19c <__bad_interrupt>
      72:	00 00       	nop
      74:	93 c0       	rjmp	.+294    	; 0x19c <__bad_interrupt>
      76:	00 00       	nop
      78:	91 c0       	rjmp	.+290    	; 0x19c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8f c0       	rjmp	.+286    	; 0x19c <__bad_interrupt>
      7e:	00 00       	nop
      80:	8d c0       	rjmp	.+282    	; 0x19c <__bad_interrupt>
      82:	00 00       	nop
      84:	8b c0       	rjmp	.+278    	; 0x19c <__bad_interrupt>
      86:	00 00       	nop
      88:	89 c0       	rjmp	.+274    	; 0x19c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	87 c0       	rjmp	.+270    	; 0x19c <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 ab 10 	jmp	0x2156	; 0x2156 <__vector_36>
      94:	0c 94 dc 10 	jmp	0x21b8	; 0x21b8 <__vector_37>
      98:	81 c0       	rjmp	.+258    	; 0x19c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	7f c0       	rjmp	.+254    	; 0x19c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	7d c0       	rjmp	.+250    	; 0x19c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	7b c0       	rjmp	.+246    	; 0x19c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	79 c0       	rjmp	.+242    	; 0x19c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	77 c0       	rjmp	.+238    	; 0x19c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	75 c0       	rjmp	.+234    	; 0x19c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	73 c0       	rjmp	.+230    	; 0x19c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	71 c0       	rjmp	.+226    	; 0x19c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	6f c0       	rjmp	.+222    	; 0x19c <__bad_interrupt>
      be:	00 00       	nop
      c0:	6d c0       	rjmp	.+218    	; 0x19c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	6b c0       	rjmp	.+214    	; 0x19c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	69 c0       	rjmp	.+210    	; 0x19c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 3a 11 	jmp	0x2274	; 0x2274 <__vector_51>
      d0:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__vector_52>
      d4:	63 c0       	rjmp	.+198    	; 0x19c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 d5 11 	jmp	0x23aa	; 0x23aa <__vector_54>
      dc:	0c 94 07 12 	jmp	0x240e	; 0x240e <__vector_55>
      e0:	5d c0       	rjmp	.+186    	; 0x19c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	cc 02       	muls	r28, r28
      e6:	ab 02       	muls	r26, r27
      e8:	ae 02       	muls	r26, r30
      ea:	b1 02       	muls	r27, r17
      ec:	b4 02       	muls	r27, r20
      ee:	b7 02       	muls	r27, r23
      f0:	ba 02       	muls	r27, r26
      f2:	bd 02       	muls	r27, r29
      f4:	c0 02       	muls	r28, r16
      f6:	c3 02       	muls	r28, r19
      f8:	c6 02       	muls	r28, r22
      fa:	f9 02       	muls	r31, r25
      fc:	d8 02       	muls	r29, r24
      fe:	db 02       	muls	r29, r27
     100:	de 02       	muls	r29, r30
     102:	e1 02       	muls	r30, r17
     104:	e4 02       	muls	r30, r20
     106:	e7 02       	muls	r30, r23
     108:	ea 02       	muls	r30, r26
     10a:	ed 02       	muls	r30, r29
     10c:	f0 02       	muls	r31, r16
     10e:	f3 02       	muls	r31, r19
     110:	1d 08       	sbc	r1, r13
     112:	22 08       	sbc	r2, r2
     114:	25 08       	sbc	r2, r5
     116:	29 08       	sbc	r2, r9
     118:	2c 08       	sbc	r2, r12
     11a:	40 08       	sbc	r4, r0
     11c:	37 08       	sbc	r3, r7
     11e:	3a 08       	sbc	r3, r10
     120:	ab 08       	sbc	r10, r11
     122:	b0 08       	sbc	r11, r0
     124:	b3 08       	sbc	r11, r3
     126:	b7 08       	sbc	r11, r7
     128:	c6 08       	sbc	r12, r6
     12a:	ba 08       	sbc	r11, r10
     12c:	bd 08       	sbc	r11, r13
     12e:	c0 08       	sbc	r12, r0
     130:	12 10       	cpse	r1, r2
     132:	15 10       	cpse	r1, r5
     134:	19 10       	cpse	r1, r9
     136:	1d 10       	cpse	r1, r13
     138:	21 10       	cpse	r2, r1
     13a:	25 10       	cpse	r2, r5
     13c:	29 10       	cpse	r2, r9
     13e:	2d 10       	cpse	r2, r13

00000140 <__ctors_start>:
     140:	87 01       	movw	r16, r14
     142:	df 06       	cpc	r13, r31
     144:	91 0e       	add	r9, r17
     146:	1d 0f       	add	r17, r29

00000148 <__ctors_end>:
     148:	11 24       	eor	r1, r1
     14a:	1f be       	out	0x3f, r1	; 63
     14c:	cf ef       	ldi	r28, 0xFF	; 255
     14e:	d1 e2       	ldi	r29, 0x21	; 33
     150:	de bf       	out	0x3e, r29	; 62
     152:	cd bf       	out	0x3d, r28	; 61

00000154 <__do_copy_data>:
     154:	12 e0       	ldi	r17, 0x02	; 2
     156:	a0 e0       	ldi	r26, 0x00	; 0
     158:	b2 e0       	ldi	r27, 0x02	; 2
     15a:	e4 e5       	ldi	r30, 0x54	; 84
     15c:	f2 e3       	ldi	r31, 0x32	; 50
     15e:	00 e0       	ldi	r16, 0x00	; 0
     160:	0b bf       	out	0x3b, r16	; 59
     162:	02 c0       	rjmp	.+4      	; 0x168 <__do_copy_data+0x14>
     164:	07 90       	elpm	r0, Z+
     166:	0d 92       	st	X+, r0
     168:	ac 3c       	cpi	r26, 0xCC	; 204
     16a:	b1 07       	cpc	r27, r17
     16c:	d9 f7       	brne	.-10     	; 0x164 <__do_copy_data+0x10>

0000016e <__do_clear_bss>:
     16e:	29 e0       	ldi	r18, 0x09	; 9
     170:	ac ec       	ldi	r26, 0xCC	; 204
     172:	b2 e0       	ldi	r27, 0x02	; 2
     174:	01 c0       	rjmp	.+2      	; 0x178 <.do_clear_bss_start>

00000176 <.do_clear_bss_loop>:
     176:	1d 92       	st	X+, r1

00000178 <.do_clear_bss_start>:
     178:	af 3b       	cpi	r26, 0xBF	; 191
     17a:	b2 07       	cpc	r27, r18
     17c:	e1 f7       	brne	.-8      	; 0x176 <.do_clear_bss_loop>

0000017e <__do_global_ctors>:
     17e:	10 e0       	ldi	r17, 0x00	; 0
     180:	c4 ea       	ldi	r28, 0xA4	; 164
     182:	d0 e0       	ldi	r29, 0x00	; 0
     184:	04 c0       	rjmp	.+8      	; 0x18e <__do_global_ctors+0x10>
     186:	21 97       	sbiw	r28, 0x01	; 1
     188:	fe 01       	movw	r30, r28
     18a:	0e 94 8c 14 	call	0x2918	; 0x2918 <__tablejump2__>
     18e:	c0 3a       	cpi	r28, 0xA0	; 160
     190:	d1 07       	cpc	r29, r17
     192:	c9 f7       	brne	.-14     	; 0x186 <__do_global_ctors+0x8>
     194:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <main>
     198:	0c 94 28 19 	jmp	0x3250	; 0x3250 <_exit>

0000019c <__bad_interrupt>:
     19c:	31 cf       	rjmp	.-414    	; 0x0 <__vectors>

0000019e <_ZN14Communications10initializeEjP6Memory>:
}

long Communications::mapVal(long x, long in_min, long in_max, long out_min, long out_max)
{
	return  (x - in_min) * (out_max - out_min ) / (in_max - in_min) + out_min;
}
     19e:	fc 01       	movw	r30, r24
     1a0:	51 83       	std	Z+1, r21	; 0x01
     1a2:	40 83       	st	Z, r20
     1a4:	88 e0       	ldi	r24, 0x08	; 8
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	0e 94 09 11 	call	0x2212	; 0x2212 <_Z16uart1_initializej>
     1ac:	44 e6       	ldi	r20, 0x64	; 100
     1ae:	50 e0       	ldi	r21, 0x00	; 0
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	70 e0       	ldi	r23, 0x00	; 0
     1b4:	8c ef       	ldi	r24, 0xFC	; 252
     1b6:	92 e0       	ldi	r25, 0x02	; 2
     1b8:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <_ZN6Clocks11setIntervalEl>
     1bc:	4c e2       	ldi	r20, 0x2C	; 44
     1be:	51 e0       	ldi	r21, 0x01	; 1
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	70 e0       	ldi	r23, 0x00	; 0
     1c4:	80 ef       	ldi	r24, 0xF0	; 240
     1c6:	92 e0       	ldi	r25, 0x02	; 2
     1c8:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <_ZN6Clocks11setIntervalEl>
     1cc:	40 ed       	ldi	r20, 0xD0	; 208
     1ce:	57 e0       	ldi	r21, 0x07	; 7
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	70 e0       	ldi	r23, 0x00	; 0
     1d4:	84 ee       	ldi	r24, 0xE4	; 228
     1d6:	92 e0       	ldi	r25, 0x02	; 2
     1d8:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <_ZN6Clocks11setIntervalEl>
     1dc:	42 ef       	ldi	r20, 0xF2	; 242
     1de:	53 e0       	ldi	r21, 0x03	; 3
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	88 ed       	ldi	r24, 0xD8	; 216
     1e6:	92 e0       	ldi	r25, 0x02	; 2
     1e8:	0c 94 e4 0e 	jmp	0x1dc8	; 0x1dc8 <_ZN6Clocks11setIntervalEl>
     1ec:	08 95       	ret

000001ee <_ZN14Communications5parseEh>:
     1ee:	cf 92       	push	r12
     1f0:	df 92       	push	r13
     1f2:	ef 92       	push	r14
     1f4:	ff 92       	push	r15
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	00 d0       	rcall	.+0      	; 0x200 <_ZN14Communications5parseEh+0x12>
     200:	1f 92       	push	r1
     202:	cd b7       	in	r28, 0x3d	; 61
     204:	de b7       	in	r29, 0x3e	; 62
     206:	6c 01       	movw	r12, r24
     208:	7c 01       	movw	r14, r24
     20a:	8b e9       	ldi	r24, 0x9B	; 155
     20c:	e8 0e       	add	r14, r24
     20e:	f1 1c       	adc	r15, r1
     210:	c7 01       	movw	r24, r14
     212:	ec d0       	rcall	.+472    	; 0x3ec <_ZN18FastTransferParser4pushEh>
     214:	c7 01       	movw	r24, r14
     216:	4a d1       	rcall	.+660    	; 0x4ac <_ZNK18FastTransferParser14valid_messagesEv>
     218:	88 23       	and	r24, r24
     21a:	d1 f0       	breq	.+52     	; 0x250 <_ZN14Communications5parseEh+0x62>
     21c:	c7 01       	movw	r24, r14
     21e:	5d d1       	rcall	.+698    	; 0x4da <_ZNK18FastTransferParser12num_messagesEv>
     220:	08 2f       	mov	r16, r24
     222:	88 23       	and	r24, r24
     224:	91 f0       	breq	.+36     	; 0x24a <_ZN14Communications5parseEh+0x5c>
     226:	10 e0       	ldi	r17, 0x00	; 0
     228:	82 e0       	ldi	r24, 0x02	; 2
     22a:	c8 0e       	add	r12, r24
     22c:	d1 1c       	adc	r13, r1
     22e:	61 2f       	mov	r22, r17
     230:	c7 01       	movw	r24, r14
     232:	f5 d0       	rcall	.+490    	; 0x41e <_ZNK18FastTransferParser11get_messageEh>
     234:	69 83       	std	Y+1, r22	; 0x01
     236:	7a 83       	std	Y+2, r23	; 0x02
     238:	8b 83       	std	Y+3, r24	; 0x03
     23a:	be 01       	movw	r22, r28
     23c:	6f 5f       	subi	r22, 0xFF	; 255
     23e:	7f 4f       	sbci	r23, 0xFF	; 255
     240:	c6 01       	movw	r24, r12
     242:	83 d0       	rcall	.+262    	; 0x34a <_ZN12MessageQueue4pushERK7Message>
     244:	1f 5f       	subi	r17, 0xFF	; 255
     246:	01 13       	cpse	r16, r17
     248:	f2 cf       	rjmp	.-28     	; 0x22e <_ZN14Communications5parseEh+0x40>
     24a:	c7 01       	movw	r24, r14
     24c:	e5 d0       	rcall	.+458    	; 0x418 <_ZN18FastTransferParser5clearEv>
     24e:	06 c0       	rjmp	.+12     	; 0x25c <_ZN14Communications5parseEh+0x6e>
     250:	c7 01       	movw	r24, r14
     252:	da d0       	rcall	.+436    	; 0x408 <_ZNK18FastTransferParser7is_fullEv>
     254:	88 23       	and	r24, r24
     256:	11 f0       	breq	.+4      	; 0x25c <_ZN14Communications5parseEh+0x6e>
     258:	c7 01       	movw	r24, r14
     25a:	de d0       	rcall	.+444    	; 0x418 <_ZN18FastTransferParser5clearEv>
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
     262:	df 91       	pop	r29
     264:	cf 91       	pop	r28
     266:	1f 91       	pop	r17
     268:	0f 91       	pop	r16
     26a:	ff 90       	pop	r15
     26c:	ef 90       	pop	r14
     26e:	df 90       	pop	r13
     270:	cf 90       	pop	r12
     272:	08 95       	ret

00000274 <_ZN14Communications4readEv>:
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	ec 01       	movw	r28, r24
     27a:	0e 94 1d 11 	call	0x223a	; 0x223a <_Z15uart1_read_bytev>
     27e:	9c 01       	movw	r18, r24
     280:	22 27       	eor	r18, r18
     282:	23 2b       	or	r18, r19
     284:	49 f4       	brne	.+18     	; 0x298 <_ZN14Communications4readEv+0x24>
     286:	68 2f       	mov	r22, r24
     288:	ce 01       	movw	r24, r28
     28a:	b1 df       	rcall	.-158    	; 0x1ee <_ZN14Communications5parseEh>
     28c:	0e 94 1d 11 	call	0x223a	; 0x223a <_Z15uart1_read_bytev>
     290:	9c 01       	movw	r18, r24
     292:	22 27       	eor	r18, r18
     294:	23 2b       	or	r18, r19
     296:	b9 f3       	breq	.-18     	; 0x286 <_ZN14Communications4readEv+0x12>
     298:	df 91       	pop	r29
     29a:	cf 91       	pop	r28
     29c:	08 95       	ret

0000029e <_ZN14Communications7receiveEv>:
     29e:	df 92       	push	r13
     2a0:	ef 92       	push	r14
     2a2:	ff 92       	push	r15
     2a4:	0f 93       	push	r16
     2a6:	1f 93       	push	r17
     2a8:	cf 93       	push	r28
     2aa:	df 93       	push	r29
     2ac:	7c 01       	movw	r14, r24
     2ae:	e2 df       	rcall	.-60     	; 0x274 <_ZN14Communications4readEv>
     2b0:	82 e0       	ldi	r24, 0x02	; 2
     2b2:	e8 0e       	add	r14, r24
     2b4:	f1 1c       	adc	r15, r1
     2b6:	c7 01       	movw	r24, r14
     2b8:	93 d0       	rcall	.+294    	; 0x3e0 <_ZNK12MessageQueue5countEv>
     2ba:	88 23       	and	r24, r24
     2bc:	01 f1       	breq	.+64     	; 0x2fe <_ZN14Communications7receiveEv+0x60>
     2be:	c7 01       	movw	r24, r14
     2c0:	6f d0       	rcall	.+222    	; 0x3a0 <_ZN12MessageQueue3popEv>
     2c2:	16 2f       	mov	r17, r22
     2c4:	d7 2e       	mov	r13, r23
     2c6:	c8 2f       	mov	r28, r24
     2c8:	86 2f       	mov	r24, r22
     2ca:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <_ZN6Memory13valid_addressEh>
     2ce:	88 23       	and	r24, r24
     2d0:	91 f3       	breq	.-28     	; 0x2b6 <_ZN14Communications7receiveEv+0x18>
     2d2:	d0 e0       	ldi	r29, 0x00	; 0
     2d4:	dc 2f       	mov	r29, r28
     2d6:	cc 27       	eor	r28, r28
     2d8:	cd 0d       	add	r28, r13
     2da:	d1 1d       	adc	r29, r1
     2dc:	11 30       	cpi	r17, 0x01	; 1
     2de:	51 f4       	brne	.+20     	; 0x2f4 <_ZN14Communications7receiveEv+0x56>
     2e0:	20 97       	sbiw	r28, 0x00	; 0
     2e2:	41 f4       	brne	.+16     	; 0x2f4 <_ZN14Communications7receiveEv+0x56>
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     2ea:	60 e0       	ldi	r22, 0x00	; 0
     2ec:	70 e0       	ldi	r23, 0x00	; 0
     2ee:	81 5c       	subi	r24, 0xC1	; 193
     2f0:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <_ZN6Memory5writeEhj>
     2f4:	be 01       	movw	r22, r28
     2f6:	81 2f       	mov	r24, r17
     2f8:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <_ZN6Memory5writeEhj>
     2fc:	dc cf       	rjmp	.-72     	; 0x2b6 <_ZN14Communications7receiveEv+0x18>
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	1f 91       	pop	r17
     304:	0f 91       	pop	r16
     306:	ff 90       	pop	r15
     308:	ef 90       	pop	r14
     30a:	df 90       	pop	r13
     30c:	08 95       	ret

0000030e <_GLOBAL__sub_I_MACRO_RE_SEND_TIMER>:
#define when break;case
#define otherwise break;default

const UART_MODULE uart = UART_1;

Clocks MACRO_RE_SEND_TIMER, ROBOT_PING_TIMER;
     30e:	8c ef       	ldi	r24, 0xFC	; 252
     310:	92 e0       	ldi	r25, 0x02	; 2
     312:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <_ZN6ClocksC1Ev>
     316:	80 ef       	ldi	r24, 0xF0	; 240
     318:	92 e0       	ldi	r25, 0x02	; 2
     31a:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <_ZN6ClocksC1Ev>
Clocks ROBOT_CONNECTED_TIMEOUT, CONNECTED_TIME;
     31e:	84 ee       	ldi	r24, 0xE4	; 228
     320:	92 e0       	ldi	r25, 0x02	; 2
     322:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <_ZN6ClocksC1Ev>
     326:	88 ed       	ldi	r24, 0xD8	; 216
     328:	92 e0       	ldi	r25, 0x02	; 2
     32a:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <_ZN6ClocksC1Ev>
	return unread_messages.pop();
}


// Talking to the Robot
static Clocks TransmitPeriodTimer(100);
     32e:	44 e6       	ldi	r20, 0x64	; 100
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	60 e0       	ldi	r22, 0x00	; 0
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	8c ec       	ldi	r24, 0xCC	; 204
     338:	92 e0       	ldi	r25, 0x02	; 2
     33a:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <_ZN6ClocksC1El>
     33e:	08 95       	ret

00000340 <_ZN12MessageQueueC1Ev>:
}

bool MessageQueue::full () const
{
  return message_count >= SIZE;
}
     340:	fc 01       	movw	r30, r24
     342:	10 82       	st	Z, r1
     344:	11 82       	std	Z+1, r1	; 0x01
     346:	12 82       	std	Z+2, r1	; 0x02
     348:	08 95       	ret

0000034a <_ZN12MessageQueue4pushERK7Message>:
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	dc 01       	movw	r26, r24
     350:	11 96       	adiw	r26, 0x01	; 1
     352:	2c 91       	ld	r18, X
     354:	11 97       	sbiw	r26, 0x01	; 1
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	82 0f       	add	r24, r18
     35a:	11 96       	adiw	r26, 0x01	; 1
     35c:	8c 93       	st	X, r24
     35e:	11 97       	sbiw	r26, 0x01	; 1
     360:	30 e0       	ldi	r19, 0x00	; 0
     362:	2f 5f       	subi	r18, 0xFF	; 255
     364:	3f 4f       	sbci	r19, 0xFF	; 255
     366:	f9 01       	movw	r30, r18
     368:	ee 0f       	add	r30, r30
     36a:	ff 1f       	adc	r31, r31
     36c:	2e 0f       	add	r18, r30
     36e:	3f 1f       	adc	r19, r31
     370:	fd 01       	movw	r30, r26
     372:	e2 0f       	add	r30, r18
     374:	f3 1f       	adc	r31, r19
     376:	eb 01       	movw	r28, r22
     378:	28 81       	ld	r18, Y
     37a:	39 81       	ldd	r19, Y+1	; 0x01
     37c:	4a 81       	ldd	r20, Y+2	; 0x02
     37e:	20 83       	st	Z, r18
     380:	31 83       	std	Z+1, r19	; 0x01
     382:	42 83       	std	Z+2, r20	; 0x02
     384:	82 33       	cpi	r24, 0x32	; 50
     386:	18 f0       	brcs	.+6      	; 0x38e <_ZN12MessageQueue4pushERK7Message+0x44>
     388:	11 96       	adiw	r26, 0x01	; 1
     38a:	1c 92       	st	X, r1
     38c:	11 97       	sbiw	r26, 0x01	; 1
     38e:	12 96       	adiw	r26, 0x02	; 2
     390:	8c 91       	ld	r24, X
     392:	12 97       	sbiw	r26, 0x02	; 2
     394:	8f 5f       	subi	r24, 0xFF	; 255
     396:	12 96       	adiw	r26, 0x02	; 2
     398:	8c 93       	st	X, r24
     39a:	df 91       	pop	r29
     39c:	cf 91       	pop	r28
     39e:	08 95       	ret

000003a0 <_ZN12MessageQueue3popEv>:
     3a0:	dc 01       	movw	r26, r24
     3a2:	9c 91       	ld	r25, X
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	89 0f       	add	r24, r25
     3a8:	29 2f       	mov	r18, r25
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	82 33       	cpi	r24, 0x32	; 50
     3ae:	10 f4       	brcc	.+4      	; 0x3b4 <_ZN12MessageQueue3popEv+0x14>
     3b0:	8c 93       	st	X, r24
     3b2:	01 c0       	rjmp	.+2      	; 0x3b6 <_ZN12MessageQueue3popEv+0x16>
     3b4:	1c 92       	st	X, r1
     3b6:	12 96       	adiw	r26, 0x02	; 2
     3b8:	8c 91       	ld	r24, X
     3ba:	12 97       	sbiw	r26, 0x02	; 2
     3bc:	81 50       	subi	r24, 0x01	; 1
     3be:	12 96       	adiw	r26, 0x02	; 2
     3c0:	8c 93       	st	X, r24
     3c2:	12 97       	sbiw	r26, 0x02	; 2
     3c4:	2f 5f       	subi	r18, 0xFF	; 255
     3c6:	3f 4f       	sbci	r19, 0xFF	; 255
     3c8:	f9 01       	movw	r30, r18
     3ca:	ee 0f       	add	r30, r30
     3cc:	ff 1f       	adc	r31, r31
     3ce:	2e 0f       	add	r18, r30
     3d0:	3f 1f       	adc	r19, r31
     3d2:	fd 01       	movw	r30, r26
     3d4:	e2 0f       	add	r30, r18
     3d6:	f3 1f       	adc	r31, r19
     3d8:	60 81       	ld	r22, Z
     3da:	71 81       	ldd	r23, Z+1	; 0x01
     3dc:	82 81       	ldd	r24, Z+2	; 0x02
     3de:	08 95       	ret

000003e0 <_ZNK12MessageQueue5countEv>:

uint8_t MessageQueue::count () const
{
  return message_count;
     3e0:	fc 01       	movw	r30, r24
     3e2:	82 81       	ldd	r24, Z+2	; 0x02
     3e4:	08 95       	ret

000003e6 <_ZN18FastTransferParserC1Ev>:


uint8_t FastTransferParser::size () const
{
	return index;
}
     3e6:	fc 01       	movw	r30, r24
     3e8:	12 aa       	std	Z+50, r1	; 0x32
     3ea:	08 95       	ret

000003ec <_ZN18FastTransferParser4pushEh>:
     3ec:	fc 01       	movw	r30, r24
     3ee:	22 a9       	ldd	r18, Z+50	; 0x32
     3f0:	21 11       	cpse	r18, r1
     3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <_ZN18FastTransferParser4pushEh+0xc>
     3f4:	66 30       	cpi	r22, 0x06	; 6
     3f6:	39 f4       	brne	.+14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3f8:	31 e0       	ldi	r19, 0x01	; 1
     3fa:	32 0f       	add	r19, r18
     3fc:	fc 01       	movw	r30, r24
     3fe:	32 ab       	std	Z+50, r19	; 0x32
     400:	e2 0f       	add	r30, r18
     402:	f1 1d       	adc	r31, r1
     404:	60 83       	st	Z, r22
     406:	08 95       	ret

00000408 <_ZNK18FastTransferParser7is_fullEv>:
     408:	21 e0       	ldi	r18, 0x01	; 1
     40a:	fc 01       	movw	r30, r24
     40c:	82 a9       	ldd	r24, Z+50	; 0x32
     40e:	82 33       	cpi	r24, 0x32	; 50
     410:	08 f4       	brcc	.+2      	; 0x414 <_ZNK18FastTransferParser7is_fullEv+0xc>
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	82 2f       	mov	r24, r18
     416:	08 95       	ret

00000418 <_ZN18FastTransferParser5clearEv>:

void FastTransferParser::clear ()
{
	index = 0;
     418:	fc 01       	movw	r30, r24
     41a:	12 aa       	std	Z+50, r1	; 0x32
     41c:	08 95       	ret

0000041e <_ZNK18FastTransferParser11get_messageEh>:

Message FastTransferParser::get_message (uint8_t i) const
{
	uint8_t index = Message::DATA_INDEX + i * Message::LENGTH;
	Message msg;
	msg.address = buffer[index];
     41e:	26 2f       	mov	r18, r22
     420:	22 0f       	add	r18, r18
     422:	62 0f       	add	r22, r18
     424:	6b 5f       	subi	r22, 0xFB	; 251
	msg.first = buffer[index + 1];
     426:	fc 01       	movw	r30, r24
     428:	e6 0f       	add	r30, r22
     42a:	f1 1d       	adc	r31, r1
     42c:	71 81       	ldd	r23, Z+1	; 0x01
	msg.second = buffer[index + 2];
	return msg;
     42e:	60 81       	ld	r22, Z
}
     430:	82 81       	ldd	r24, Z+2	; 0x02
     432:	08 95       	ret

00000434 <_ZNK18FastTransferParser10verify_crcEv>:
		return 0;
	return buffer[Message::COUNT_INDEX] / Message::LENGTH;
}

bool FastTransferParser::verify_crc () const
{
     434:	ef 92       	push	r14
     436:	ff 92       	push	r15
     438:	0f 93       	push	r16
     43a:	1f 93       	push	r17
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	7c 01       	movw	r14, r24
}


uint8_t FastTransferParser::size () const
{
	return index;
     442:	fc 01       	movw	r30, r24
     444:	c2 a9       	ldd	r28, Z+50	; 0x32

bool FastTransferParser::verify_crc () const
{
	const uint8_t CRC_POLYNOMIAL = 0x8C;
	uint8_t crc = 0;
	for (int i = 5; i < size() - 1; ++i)
     446:	0c 2f       	mov	r16, r28
     448:	10 e0       	ldi	r17, 0x00	; 0
     44a:	01 50       	subi	r16, 0x01	; 1
     44c:	11 09       	sbc	r17, r1
     44e:	06 30       	cpi	r16, 0x06	; 6
     450:	11 05       	cpc	r17, r1
     452:	ec f0       	brlt	.+58     	; 0x48e <_ZNK18FastTransferParser10verify_crcEv+0x5a>
     454:	dc 01       	movw	r26, r24
     456:	15 96       	adiw	r26, 0x05	; 5
     458:	e8 01       	movw	r28, r16
     45a:	c8 0f       	add	r28, r24
     45c:	d9 1f       	adc	r29, r25
     45e:	90 e0       	ldi	r25, 0x00	; 0
		for (int j = 0; j < 8; ++j)
		{
			uint8_t sum = (crc ^ data) & 0x01;
			crc >>= 1;
			if (sum)
				crc ^= CRC_POLYNOMIAL;
     460:	ec e8       	ldi	r30, 0x8C	; 140
{
	const uint8_t CRC_POLYNOMIAL = 0x8C;
	uint8_t crc = 0;
	for (int i = 5; i < size() - 1; ++i)
	{
		uint8_t data = buffer[i];
     462:	6d 91       	ld	r22, X+
     464:	48 e0       	ldi	r20, 0x08	; 8
     466:	50 e0       	ldi	r21, 0x00	; 0
		for (int j = 0; j < 8; ++j)
		{
			uint8_t sum = (crc ^ data) & 0x01;
     468:	79 2f       	mov	r23, r25
     46a:	76 27       	eor	r23, r22
			crc >>= 1;
     46c:	29 2f       	mov	r18, r25
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	35 95       	asr	r19
     472:	27 95       	ror	r18
     474:	92 2f       	mov	r25, r18
			if (sum)
     476:	70 ff       	sbrs	r23, 0
     478:	02 c0       	rjmp	.+4      	; 0x47e <_ZNK18FastTransferParser10verify_crcEv+0x4a>
				crc ^= CRC_POLYNOMIAL;
     47a:	9e 2f       	mov	r25, r30
     47c:	92 27       	eor	r25, r18
			data >>= 1;
     47e:	66 95       	lsr	r22
     480:	41 50       	subi	r20, 0x01	; 1
     482:	51 09       	sbc	r21, r1
	const uint8_t CRC_POLYNOMIAL = 0x8C;
	uint8_t crc = 0;
	for (int i = 5; i < size() - 1; ++i)
	{
		uint8_t data = buffer[i];
		for (int j = 0; j < 8; ++j)
     484:	89 f7       	brne	.-30     	; 0x468 <_ZNK18FastTransferParser10verify_crcEv+0x34>

bool FastTransferParser::verify_crc () const
{
	const uint8_t CRC_POLYNOMIAL = 0x8C;
	uint8_t crc = 0;
	for (int i = 5; i < size() - 1; ++i)
     486:	ca 17       	cp	r28, r26
     488:	db 07       	cpc	r29, r27
     48a:	59 f7       	brne	.-42     	; 0x462 <_ZNK18FastTransferParser10verify_crcEv+0x2e>
     48c:	01 c0       	rjmp	.+2      	; 0x490 <_ZNK18FastTransferParser10verify_crcEv+0x5c>
}

bool FastTransferParser::verify_crc () const
{
	const uint8_t CRC_POLYNOMIAL = 0x8C;
	uint8_t crc = 0;
     48e:	90 e0       	ldi	r25, 0x00	; 0
			if (sum)
				crc ^= CRC_POLYNOMIAL;
			data >>= 1;
		}
	}
	return crc == buffer[size() - 1];
     490:	f7 01       	movw	r30, r14
     492:	e0 0f       	add	r30, r16
     494:	f1 1f       	adc	r31, r17
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	20 81       	ld	r18, Z
     49a:	29 13       	cpse	r18, r25
     49c:	80 e0       	ldi	r24, 0x00	; 0
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	0f 91       	pop	r16
     4a6:	ff 90       	pop	r15
     4a8:	ef 90       	pop	r14
     4aa:	08 95       	ret

000004ac <_ZNK18FastTransferParser14valid_messagesEv>:
}


uint8_t FastTransferParser::size () const
{
	return index;
     4ac:	fc 01       	movw	r30, r24
     4ae:	22 a9       	ldd	r18, Z+50	; 0x32

bool FastTransferParser::valid_messages () const
{

	// Verify that the size is at least the minimum
	if (size() < MINIMUM_SIZE)
     4b0:	26 30       	cpi	r18, 0x06	; 6
     4b2:	68 f0       	brcs	.+26     	; 0x4ce <_ZNK18FastTransferParser14valid_messagesEv+0x22>
		return false;

	// Verify that the receiver address matches argument
	if (buffer[2] != 0x01)
     4b4:	32 81       	ldd	r19, Z+2	; 0x02
     4b6:	31 30       	cpi	r19, 0x01	; 1
     4b8:	61 f4       	brne	.+24     	; 0x4d2 <_ZNK18FastTransferParser14valid_messagesEv+0x26>
		return false;

	// Verify that the overall size makes sense according to the packet size
	if (buffer[4] + MINIMUM_SIZE != size())
     4ba:	44 81       	ldd	r20, Z+4	; 0x04
     4bc:	50 e0       	ldi	r21, 0x00	; 0
     4be:	4a 5f       	subi	r20, 0xFA	; 250
     4c0:	5f 4f       	sbci	r21, 0xFF	; 255
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	42 17       	cp	r20, r18
     4c6:	53 07       	cpc	r21, r19
     4c8:	31 f4       	brne	.+12     	; 0x4d6 <_ZNK18FastTransferParser14valid_messagesEv+0x2a>
		return false;

	return verify_crc();
     4ca:	b4 cf       	rjmp	.-152    	; 0x434 <_ZNK18FastTransferParser10verify_crcEv>
     4cc:	08 95       	ret
bool FastTransferParser::valid_messages () const
{

	// Verify that the size is at least the minimum
	if (size() < MINIMUM_SIZE)
		return false;
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 95       	ret

	// Verify that the receiver address matches argument
	if (buffer[2] != 0x01)
		return false;
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret

	// Verify that the overall size makes sense according to the packet size
	if (buffer[4] + MINIMUM_SIZE != size())
		return false;
     4d6:	80 e0       	ldi	r24, 0x00	; 0

	return verify_crc();
}
     4d8:	08 95       	ret

000004da <_ZNK18FastTransferParser12num_messagesEv>:
	msg.second = buffer[index + 2];
	return msg;
}

uint8_t FastTransferParser::num_messages () const
{
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	ec 01       	movw	r28, r24
	if (!valid_messages())
     4e0:	e5 df       	rcall	.-54     	; 0x4ac <_ZNK18FastTransferParser14valid_messagesEv>
     4e2:	88 23       	and	r24, r24
     4e4:	39 f0       	breq	.+14     	; 0x4f4 <_ZNK18FastTransferParser12num_messagesEv+0x1a>
		return 0;
	return buffer[Message::COUNT_INDEX] / Message::LENGTH;
     4e6:	8c 81       	ldd	r24, Y+4	; 0x04
     4e8:	9b ea       	ldi	r25, 0xAB	; 171
     4ea:	89 9f       	mul	r24, r25
     4ec:	81 2d       	mov	r24, r1
     4ee:	11 24       	eor	r1, r1
     4f0:	86 95       	lsr	r24
     4f2:	01 c0       	rjmp	.+2      	; 0x4f6 <_ZNK18FastTransferParser12num_messagesEv+0x1c>
}

uint8_t FastTransferParser::num_messages () const
{
	if (!valid_messages())
		return 0;
     4f4:	80 e0       	ldi	r24, 0x00	; 0
	return buffer[Message::COUNT_INDEX] / Message::LENGTH;
}
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	08 95       	ret

000004fc <_ZN16ControlBoxEngine10initializeEv>:
#include "timer/Clock.hpp"
#include "digital_io/digital_pin.hpp"
#include "uart/uart_2.hpp"

void ControlBoxEngine::initialize ()
{
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	ec 01       	movw	r28, r24
	sei();
     502:	78 94       	sei
	uart2_initialize(UART2_BAUD_SELECT(115200UL, 16000000UL));  // For printf
     504:	88 e0       	ldi	r24, 0x08	; 8
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 9a 11 	call	0x2334	; 0x2334 <_Z16uart2_initializej>
	memory.initialize();
     50c:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <_ZN6Memory10initializeEv>
	
	outputs.initialize(&memory);
     510:	be 01       	movw	r22, r28
     512:	ce 01       	movw	r24, r28
     514:	85 52       	subi	r24, 0x25	; 37
     516:	9f 4f       	sbci	r25, 0xFF	; 255
     518:	82 d4       	rcall	.+2308   	; 0xe1e <_ZN13OutputHandler10initializeEP6Memory>
	communications.initialize(UART_1, &memory);
     51a:	ae 01       	movw	r20, r28
     51c:	61 e0       	ldi	r22, 0x01	; 1
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	ce 01       	movw	r24, r28
     522:	01 96       	adiw	r24, 0x01	; 1
     524:	3c de       	rcall	.-904    	; 0x19e <_ZN14Communications10initializeEjP6Memory>
}
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	08 95       	ret

0000052c <_ZN16ControlBoxEngine4loopEv>:
void ControlBoxEngine::loop ()
{
     52c:	ec 01       	movw	r28, r24
	outputs.startup();
     52e:	8c 01       	movw	r16, r24
     530:	05 52       	subi	r16, 0x25	; 37
     532:	1f 4f       	sbci	r17, 0xFF	; 255
     534:	c8 01       	movw	r24, r16
     536:	d7 d3       	rcall	.+1966   	; 0xce6 <_ZN13OutputHandler7startupEv>
	while (1)
	{
		//communications.check_connection();
		//communications.transmit();
		outputs.refresh();
		communications.receive();
     538:	21 96       	adiw	r28, 0x01	; 1

	while (1)
	{
		//communications.check_connection();
		//communications.transmit();
		outputs.refresh();
     53a:	c8 01       	movw	r24, r16
     53c:	f5 d2       	rcall	.+1514   	; 0xb28 <_ZN13OutputHandler7refreshEv>
		communications.receive();
     53e:	ce 01       	movw	r24, r28
     540:	ae de       	rcall	.-676    	; 0x29e <_ZN14Communications7receiveEv>
     542:	fb cf       	rjmp	.-10     	; 0x53a <_ZN16ControlBoxEngine4loopEv+0xe>

00000544 <_ZL12DDR_REGISTER4Port>:
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	8b 30       	cpi	r24, 0x0B	; 11
     548:	91 05       	cpc	r25, r1
     54a:	18 f5       	brcc	.+70     	; 0x592 <_ZL12DDR_REGISTER4Port+0x4e>
     54c:	fc 01       	movw	r30, r24
     54e:	ee 58       	subi	r30, 0x8E	; 142
     550:	ff 4f       	sbci	r31, 0xFF	; 255
     552:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__tablejump2__>
     556:	84 e2       	ldi	r24, 0x24	; 36
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	08 95       	ret
     55c:	87 e2       	ldi	r24, 0x27	; 39
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	08 95       	ret
     562:	8a e2       	ldi	r24, 0x2A	; 42
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	08 95       	ret
     568:	8d e2       	ldi	r24, 0x2D	; 45
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	08 95       	ret
     56e:	80 e3       	ldi	r24, 0x30	; 48
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	08 95       	ret
     574:	83 e3       	ldi	r24, 0x33	; 51
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	08 95       	ret
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	08 95       	ret
     580:	84 e0       	ldi	r24, 0x04	; 4
     582:	91 e0       	ldi	r25, 0x01	; 1
     584:	08 95       	ret
     586:	87 e0       	ldi	r24, 0x07	; 7
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	08 95       	ret
     58c:	8a e0       	ldi	r24, 0x0A	; 10
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	08 95       	ret
     592:	88 e0       	ldi	r24, 0x08	; 8
     594:	93 e0       	ldi	r25, 0x03	; 3
     596:	08 95       	ret
     598:	81 e2       	ldi	r24, 0x21	; 33
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	08 95       	ret

0000059e <_ZL13PORT_REGISTER4Port>:
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	8b 30       	cpi	r24, 0x0B	; 11
     5a2:	91 05       	cpc	r25, r1
     5a4:	18 f5       	brcc	.+70     	; 0x5ec <_ZL13PORT_REGISTER4Port+0x4e>
     5a6:	fc 01       	movw	r30, r24
     5a8:	e3 58       	subi	r30, 0x83	; 131
     5aa:	ff 4f       	sbci	r31, 0xFF	; 255
     5ac:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__tablejump2__>
     5b0:	85 e2       	ldi	r24, 0x25	; 37
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	08 95       	ret
     5b6:	88 e2       	ldi	r24, 0x28	; 40
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	08 95       	ret
     5bc:	8b e2       	ldi	r24, 0x2B	; 43
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	08 95       	ret
     5c2:	8e e2       	ldi	r24, 0x2E	; 46
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	08 95       	ret
     5c8:	81 e3       	ldi	r24, 0x31	; 49
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	08 95       	ret
     5ce:	84 e3       	ldi	r24, 0x34	; 52
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	08 95       	ret
     5d4:	82 e0       	ldi	r24, 0x02	; 2
     5d6:	91 e0       	ldi	r25, 0x01	; 1
     5d8:	08 95       	ret
     5da:	85 e0       	ldi	r24, 0x05	; 5
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	08 95       	ret
     5e0:	88 e0       	ldi	r24, 0x08	; 8
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	08 95       	ret
     5e6:	8b e0       	ldi	r24, 0x0B	; 11
     5e8:	91 e0       	ldi	r25, 0x01	; 1
     5ea:	08 95       	ret
     5ec:	88 e0       	ldi	r24, 0x08	; 8
     5ee:	93 e0       	ldi	r25, 0x03	; 3
     5f0:	08 95       	ret
     5f2:	82 e2       	ldi	r24, 0x22	; 34
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	08 95       	ret

000005f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>:
     5f8:	0f 93       	push	r16
     5fa:	1f 93       	push	r17
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
     600:	fc 01       	movw	r30, r24
     602:	c6 2f       	mov	r28, r22
     604:	d4 2f       	mov	r29, r20
     606:	60 83       	st	Z, r22
     608:	41 83       	std	Z+1, r20	; 0x01
     60a:	22 83       	std	Z+2, r18	; 0x02
     60c:	21 11       	cpse	r18, r1
     60e:	16 c0       	rjmp	.+44     	; 0x63c <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x44>
     610:	86 2f       	mov	r24, r22
     612:	98 df       	rcall	.-208    	; 0x544 <_ZL12DDR_REGISTER4Port>
     614:	fc 01       	movw	r30, r24
     616:	90 81       	ld	r25, Z
     618:	21 e0       	ldi	r18, 0x01	; 1
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	02 c0       	rjmp	.+4      	; 0x622 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x2a>
     61e:	22 0f       	add	r18, r18
     620:	33 1f       	adc	r19, r19
     622:	da 95       	dec	r29
     624:	e2 f7       	brpl	.-8      	; 0x61e <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x26>
     626:	d2 2f       	mov	r29, r18
     628:	d0 95       	com	r29
     62a:	9d 23       	and	r25, r29
     62c:	90 83       	st	Z, r25
     62e:	8c 2f       	mov	r24, r28
     630:	b6 df       	rcall	.-148    	; 0x59e <_ZL13PORT_REGISTER4Port>
     632:	fc 01       	movw	r30, r24
     634:	20 81       	ld	r18, Z
     636:	2d 23       	and	r18, r29
     638:	20 83       	st	Z, r18
     63a:	25 c0       	rjmp	.+74     	; 0x686 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x8e>
     63c:	22 30       	cpi	r18, 0x02	; 2
     63e:	b1 f4       	brne	.+44     	; 0x66c <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x74>
     640:	86 2f       	mov	r24, r22
     642:	80 df       	rcall	.-256    	; 0x544 <_ZL12DDR_REGISTER4Port>
     644:	fc 01       	movw	r30, r24
     646:	90 81       	ld	r25, Z
     648:	01 e0       	ldi	r16, 0x01	; 1
     64a:	10 e0       	ldi	r17, 0x00	; 0
     64c:	02 c0       	rjmp	.+4      	; 0x652 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x5a>
     64e:	00 0f       	add	r16, r16
     650:	11 1f       	adc	r17, r17
     652:	da 95       	dec	r29
     654:	e2 f7       	brpl	.-8      	; 0x64e <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x56>
     656:	80 2f       	mov	r24, r16
     658:	80 95       	com	r24
     65a:	98 23       	and	r25, r24
     65c:	90 83       	st	Z, r25
     65e:	8c 2f       	mov	r24, r28
     660:	9e df       	rcall	.-196    	; 0x59e <_ZL13PORT_REGISTER4Port>
     662:	fc 01       	movw	r30, r24
     664:	20 81       	ld	r18, Z
     666:	02 2b       	or	r16, r18
     668:	00 83       	st	Z, r16
     66a:	0d c0       	rjmp	.+26     	; 0x686 <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x8e>
     66c:	86 2f       	mov	r24, r22
     66e:	6a df       	rcall	.-300    	; 0x544 <_ZL12DDR_REGISTER4Port>
     670:	fc 01       	movw	r30, r24
     672:	40 81       	ld	r20, Z
     674:	21 e0       	ldi	r18, 0x01	; 1
     676:	30 e0       	ldi	r19, 0x00	; 0
     678:	02 c0       	rjmp	.+4      	; 0x67e <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x86>
     67a:	22 0f       	add	r18, r18
     67c:	33 1f       	adc	r19, r19
     67e:	da 95       	dec	r29
     680:	e2 f7       	brpl	.-8      	; 0x67a <_ZN10DigitalPin10initializeE4Port3Pin4Mode+0x82>
     682:	24 2b       	or	r18, r20
     684:	20 83       	st	Z, r18
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	1f 91       	pop	r17
     68c:	0f 91       	pop	r16
     68e:	08 95       	ret

00000690 <_ZN10DigitalPin5writeEb>:
     690:	cf 93       	push	r28
     692:	fc 01       	movw	r30, r24
     694:	c1 81       	ldd	r28, Z+1	; 0x01
     696:	80 81       	ld	r24, Z
     698:	66 23       	and	r22, r22
     69a:	69 f0       	breq	.+26     	; 0x6b6 <_ZN10DigitalPin5writeEb+0x26>
     69c:	80 df       	rcall	.-256    	; 0x59e <_ZL13PORT_REGISTER4Port>
     69e:	fc 01       	movw	r30, r24
     6a0:	40 81       	ld	r20, Z
     6a2:	21 e0       	ldi	r18, 0x01	; 1
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <_ZN10DigitalPin5writeEb+0x1c>
     6a8:	22 0f       	add	r18, r18
     6aa:	33 1f       	adc	r19, r19
     6ac:	ca 95       	dec	r28
     6ae:	e2 f7       	brpl	.-8      	; 0x6a8 <_ZN10DigitalPin5writeEb+0x18>
     6b0:	24 2b       	or	r18, r20
     6b2:	20 83       	st	Z, r18
     6b4:	0d c0       	rjmp	.+26     	; 0x6d0 <_ZN10DigitalPin5writeEb+0x40>
     6b6:	73 df       	rcall	.-282    	; 0x59e <_ZL13PORT_REGISTER4Port>
     6b8:	fc 01       	movw	r30, r24
     6ba:	90 81       	ld	r25, Z
     6bc:	21 e0       	ldi	r18, 0x01	; 1
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <_ZN10DigitalPin5writeEb+0x36>
     6c2:	22 0f       	add	r18, r18
     6c4:	33 1f       	adc	r19, r19
     6c6:	ca 95       	dec	r28
     6c8:	e2 f7       	brpl	.-8      	; 0x6c2 <_ZN10DigitalPin5writeEb+0x32>
     6ca:	20 95       	com	r18
     6cc:	29 23       	and	r18, r25
     6ce:	20 83       	st	Z, r18
     6d0:	cf 91       	pop	r28
     6d2:	08 95       	ret

000006d4 <_ZN8Expander11set_addressEh>:
#include "expander.hpp"

void Expander::set_address (uint8_t address)
{
  this->address = address;
     6d4:	fc 01       	movw	r30, r24
     6d6:	61 93       	st	Z+, r22
     6d8:	cf 01       	movw	r24, r30
  i2c.set_address(address);
     6da:	ec c3       	rjmp	.+2008   	; 0xeb4 <_ZN3I2C11set_addressEh>
     6dc:	08 95       	ret

000006de <_ZN8Expander14write_registerEhh>:
}

void Expander::write_register (uint8_t reg_addr, uint8_t value)
{
     6de:	ef 92       	push	r14
     6e0:	ff 92       	push	r15
     6e2:	0f 93       	push	r16
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	00 d0       	rcall	.+0      	; 0x6ec <_ZN8Expander14write_registerEhh+0xe>
     6ec:	cd b7       	in	r28, 0x3d	; 61
     6ee:	de b7       	in	r29, 0x3e	; 62
     6f0:	e6 2e       	mov	r14, r22
     6f2:	f4 2e       	mov	r15, r20
  i2c.set_address(address);
     6f4:	8c 01       	movw	r16, r24
     6f6:	0f 5f       	subi	r16, 0xFF	; 255
     6f8:	1f 4f       	sbci	r17, 0xFF	; 255
     6fa:	fc 01       	movw	r30, r24
     6fc:	60 81       	ld	r22, Z
     6fe:	c8 01       	movw	r24, r16
     700:	d9 d3       	rcall	.+1970   	; 0xeb4 <_ZN3I2C11set_addressEh>
  uint8_t msg [] = {reg_addr, value};
     702:	e9 82       	std	Y+1, r14	; 0x01
     704:	fa 82       	std	Y+2, r15	; 0x02
  i2c.write(msg, 2);
     706:	42 e0       	ldi	r20, 0x02	; 2
     708:	be 01       	movw	r22, r28
     70a:	6f 5f       	subi	r22, 0xFF	; 255
     70c:	7f 4f       	sbci	r23, 0xFF	; 255
     70e:	c8 01       	movw	r24, r16
     710:	55 d4       	rcall	.+2218   	; 0xfbc <_ZN3I2C5writeEPhh>
}
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	1f 91       	pop	r17
     71c:	0f 91       	pop	r16
     71e:	ff 90       	pop	r15
     720:	ef 90       	pop	r14
     722:	08 95       	ret

00000724 <_ZN8Expander13read_registerEh>:

uint8_t Expander::read_register (uint8_t reg_addr)
{
     724:	0f 93       	push	r16
     726:	1f 93       	push	r17
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	00 d0       	rcall	.+0      	; 0x72e <_ZN8Expander13read_registerEh+0xa>
     72e:	cd b7       	in	r28, 0x3d	; 61
     730:	de b7       	in	r29, 0x3e	; 62
     732:	6a 83       	std	Y+2, r22	; 0x02
  i2c.set_address(address);
     734:	8c 01       	movw	r16, r24
     736:	0f 5f       	subi	r16, 0xFF	; 255
     738:	1f 4f       	sbci	r17, 0xFF	; 255
     73a:	fc 01       	movw	r30, r24
     73c:	60 81       	ld	r22, Z
     73e:	c8 01       	movw	r24, r16
     740:	b9 d3       	rcall	.+1906   	; 0xeb4 <_ZN3I2C11set_addressEh>
  i2c.write(&reg_addr, 1);
     742:	41 e0       	ldi	r20, 0x01	; 1
     744:	be 01       	movw	r22, r28
     746:	6e 5f       	subi	r22, 0xFE	; 254
     748:	7f 4f       	sbci	r23, 0xFF	; 255
     74a:	c8 01       	movw	r24, r16
     74c:	37 d4       	rcall	.+2158   	; 0xfbc <_ZN3I2C5writeEPhh>
  uint8_t value;
  i2c.read(&value, 1);
     74e:	41 e0       	ldi	r20, 0x01	; 1
     750:	be 01       	movw	r22, r28
     752:	6f 5f       	subi	r22, 0xFF	; 255
     754:	7f 4f       	sbci	r23, 0xFF	; 255
     756:	c8 01       	movw	r24, r16
     758:	d1 d4       	rcall	.+2466   	; 0x10fc <_ZN3I2C4readEPhh>
  return value;
     75a:	89 81       	ldd	r24, Y+1	; 0x01
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	0f 91       	pop	r16
     768:	08 95       	ret

0000076a <_ZN11ExpanderPin5writeEb>:
  uint8_t reg_addr = (port == A) ? GPIOA : GPIOB;
  return expander->read_register(reg_addr) & (1 << pin);
}

void ExpanderPin::write (bool value)
{
     76a:	1f 93       	push	r17
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	ec 01       	movw	r28, r24
  uint8_t reg_addr = (port == A) ? GPIOA : GPIOB;
     772:	88 81       	ld	r24, Y
     774:	88 23       	and	r24, r24
     776:	11 f0       	breq	.+4      	; 0x77c <_ZN11ExpanderPin5writeEb+0x12>
     778:	13 e1       	ldi	r17, 0x13	; 19
     77a:	01 c0       	rjmp	.+2      	; 0x77e <_ZN11ExpanderPin5writeEb+0x14>
     77c:	12 e1       	ldi	r17, 0x12	; 18
  if (value)
     77e:	66 23       	and	r22, r22
     780:	91 f0       	breq	.+36     	; 0x7a6 <_ZN11ExpanderPin5writeEb+0x3c>
    expander->write_register(reg_addr, expander->read_register(reg_addr) | (1 << pin));
     782:	61 2f       	mov	r22, r17
     784:	8b 81       	ldd	r24, Y+3	; 0x03
     786:	9c 81       	ldd	r25, Y+4	; 0x04
     788:	cd df       	rcall	.-102    	; 0x724 <_ZN8Expander13read_registerEh>
     78a:	41 e0       	ldi	r20, 0x01	; 1
     78c:	50 e0       	ldi	r21, 0x00	; 0
     78e:	09 80       	ldd	r0, Y+1	; 0x01
     790:	02 c0       	rjmp	.+4      	; 0x796 <_ZN11ExpanderPin5writeEb+0x2c>
     792:	44 0f       	add	r20, r20
     794:	55 1f       	adc	r21, r21
     796:	0a 94       	dec	r0
     798:	e2 f7       	brpl	.-8      	; 0x792 <_ZN11ExpanderPin5writeEb+0x28>
     79a:	48 2b       	or	r20, r24
     79c:	61 2f       	mov	r22, r17
     79e:	8b 81       	ldd	r24, Y+3	; 0x03
     7a0:	9c 81       	ldd	r25, Y+4	; 0x04
     7a2:	9d df       	rcall	.-198    	; 0x6de <_ZN8Expander14write_registerEhh>
     7a4:	12 c0       	rjmp	.+36     	; 0x7ca <_ZN11ExpanderPin5writeEb+0x60>
  else
    expander->write_register(reg_addr, expander->read_register(reg_addr) & ~(1 << pin));
     7a6:	61 2f       	mov	r22, r17
     7a8:	8b 81       	ldd	r24, Y+3	; 0x03
     7aa:	9c 81       	ldd	r25, Y+4	; 0x04
     7ac:	bb df       	rcall	.-138    	; 0x724 <_ZN8Expander13read_registerEh>
     7ae:	41 e0       	ldi	r20, 0x01	; 1
     7b0:	50 e0       	ldi	r21, 0x00	; 0
     7b2:	09 80       	ldd	r0, Y+1	; 0x01
     7b4:	02 c0       	rjmp	.+4      	; 0x7ba <_ZN11ExpanderPin5writeEb+0x50>
     7b6:	44 0f       	add	r20, r20
     7b8:	55 1f       	adc	r21, r21
     7ba:	0a 94       	dec	r0
     7bc:	e2 f7       	brpl	.-8      	; 0x7b6 <_ZN11ExpanderPin5writeEb+0x4c>
     7be:	40 95       	com	r20
     7c0:	48 23       	and	r20, r24
     7c2:	61 2f       	mov	r22, r17
     7c4:	8b 81       	ldd	r24, Y+3	; 0x03
     7c6:	9c 81       	ldd	r25, Y+4	; 0x04
     7c8:	8a df       	rcall	.-236    	; 0x6de <_ZN8Expander14write_registerEhh>
}
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	08 95       	ret

000007d2 <_ZN11ExpanderPin8set_modeE4Mode>:

void ExpanderPin::set_mode (Mode mode)
{
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	ec 01       	movw	r28, r24
  this->mode = mode;
     7da:	6a 83       	std	Y+2, r22	; 0x02
  uint8_t addr = (port == A) ? IODIRA : IODIRB;
     7dc:	11 e0       	ldi	r17, 0x01	; 1
     7de:	88 81       	ld	r24, Y
     7e0:	81 11       	cpse	r24, r1
     7e2:	01 c0       	rjmp	.+2      	; 0x7e6 <_ZN11ExpanderPin8set_modeE4Mode+0x14>
     7e4:	10 e0       	ldi	r17, 0x00	; 0
  if (mode == INPUT)
     7e6:	61 11       	cpse	r22, r1
     7e8:	12 c0       	rjmp	.+36     	; 0x80e <_ZN11ExpanderPin8set_modeE4Mode+0x3c>
    expander->write_register(addr, expander->read_register(addr) | (1 << pin));
     7ea:	61 2f       	mov	r22, r17
     7ec:	8b 81       	ldd	r24, Y+3	; 0x03
     7ee:	9c 81       	ldd	r25, Y+4	; 0x04
     7f0:	99 df       	rcall	.-206    	; 0x724 <_ZN8Expander13read_registerEh>
     7f2:	41 e0       	ldi	r20, 0x01	; 1
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	09 80       	ldd	r0, Y+1	; 0x01
     7f8:	02 c0       	rjmp	.+4      	; 0x7fe <_ZN11ExpanderPin8set_modeE4Mode+0x2c>
     7fa:	44 0f       	add	r20, r20
     7fc:	55 1f       	adc	r21, r21
     7fe:	0a 94       	dec	r0
     800:	e2 f7       	brpl	.-8      	; 0x7fa <_ZN11ExpanderPin8set_modeE4Mode+0x28>
     802:	48 2b       	or	r20, r24
     804:	61 2f       	mov	r22, r17
     806:	8b 81       	ldd	r24, Y+3	; 0x03
     808:	9c 81       	ldd	r25, Y+4	; 0x04
     80a:	69 df       	rcall	.-302    	; 0x6de <_ZN8Expander14write_registerEhh>
     80c:	12 c0       	rjmp	.+36     	; 0x832 <_ZN11ExpanderPin8set_modeE4Mode+0x60>
  else
    expander->write_register(addr, expander->read_register(addr) & ~(1 << pin));
     80e:	61 2f       	mov	r22, r17
     810:	8b 81       	ldd	r24, Y+3	; 0x03
     812:	9c 81       	ldd	r25, Y+4	; 0x04
     814:	87 df       	rcall	.-242    	; 0x724 <_ZN8Expander13read_registerEh>
     816:	41 e0       	ldi	r20, 0x01	; 1
     818:	50 e0       	ldi	r21, 0x00	; 0
     81a:	09 80       	ldd	r0, Y+1	; 0x01
     81c:	02 c0       	rjmp	.+4      	; 0x822 <_ZN11ExpanderPin8set_modeE4Mode+0x50>
     81e:	44 0f       	add	r20, r20
     820:	55 1f       	adc	r21, r21
     822:	0a 94       	dec	r0
     824:	e2 f7       	brpl	.-8      	; 0x81e <_ZN11ExpanderPin8set_modeE4Mode+0x4c>
     826:	40 95       	com	r20
     828:	48 23       	and	r20, r24
     82a:	61 2f       	mov	r22, r17
     82c:	8b 81       	ldd	r24, Y+3	; 0x03
     82e:	9c 81       	ldd	r25, Y+4	; 0x04
     830:	56 df       	rcall	.-340    	; 0x6de <_ZN8Expander14write_registerEhh>
}
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	08 95       	ret

0000083a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>:
const uint8_t IODIRB = 0x01;
const uint8_t GPIOA  = 0x12;
const uint8_t GPIOB  = 0x13;

void ExpanderPin::initialize (Expander * expander, Port port, Pin pin, Mode mode)
{
     83a:	0f 93       	push	r16
  this->expander = expander;
     83c:	fc 01       	movw	r30, r24
     83e:	74 83       	std	Z+4, r23	; 0x04
     840:	63 83       	std	Z+3, r22	; 0x03
  this->port = port;
     842:	40 83       	st	Z, r20
  this->pin = pin;
     844:	21 83       	std	Z+1, r18	; 0x01
  set_mode(mode);
     846:	60 2f       	mov	r22, r16
     848:	c4 df       	rcall	.-120    	; 0x7d2 <_ZN11ExpanderPin8set_modeE4Mode>
}
     84a:	0f 91       	pop	r16
     84c:	08 95       	ret

0000084e <_ZN13OutputHandler20initialize_expandersEv>:
		push_button_leds[inner[j]].write(0);
	_delay_ms(pause);
	for (int j = 0; j < 12; ++j)
		push_button_leds[outer[j]].write(0);
	_delay_ms(pause);
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
     852:	ec 01       	movw	r28, r24
     854:	60 e2       	ldi	r22, 0x20	; 32
     856:	88 5f       	subi	r24, 0xF8	; 248
     858:	9e 4f       	sbci	r25, 0xFE	; 254
     85a:	3c df       	rcall	.-392    	; 0x6d4 <_ZN8Expander11set_addressEh>
     85c:	67 e2       	ldi	r22, 0x27	; 39
     85e:	ce 01       	movw	r24, r28
     860:	88 5e       	subi	r24, 0xE8	; 232
     862:	9e 4f       	sbci	r25, 0xFE	; 254
     864:	37 df       	rcall	.-402    	; 0x6d4 <_ZN8Expander11set_addressEh>
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	08 95       	ret

0000086c <_ZN13OutputHandler27initialize_push_button_ledsEv>:
     86c:	ef 92       	push	r14
     86e:	ff 92       	push	r15
     870:	0f 93       	push	r16
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
     876:	ec 01       	movw	r28, r24
     878:	7c 01       	movw	r14, r24
     87a:	88 ef       	ldi	r24, 0xF8	; 248
     87c:	e8 1a       	sub	r14, r24
     87e:	8e ef       	ldi	r24, 0xFE	; 254
     880:	f8 0a       	sbc	r15, r24
     882:	01 e0       	ldi	r16, 0x01	; 1
     884:	21 e0       	ldi	r18, 0x01	; 1
     886:	40 e0       	ldi	r20, 0x00	; 0
     888:	b7 01       	movw	r22, r14
     88a:	ce 01       	movw	r24, r28
     88c:	88 5d       	subi	r24, 0xD8	; 216
     88e:	9e 4f       	sbci	r25, 0xFE	; 254
     890:	d4 df       	rcall	.-88     	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     892:	23 e0       	ldi	r18, 0x03	; 3
     894:	40 e0       	ldi	r20, 0x00	; 0
     896:	b7 01       	movw	r22, r14
     898:	ce 01       	movw	r24, r28
     89a:	83 5d       	subi	r24, 0xD3	; 211
     89c:	9e 4f       	sbci	r25, 0xFE	; 254
     89e:	cd df       	rcall	.-102    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8a0:	25 e0       	ldi	r18, 0x05	; 5
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	b7 01       	movw	r22, r14
     8a6:	ce 01       	movw	r24, r28
     8a8:	8e 5c       	subi	r24, 0xCE	; 206
     8aa:	9e 4f       	sbci	r25, 0xFE	; 254
     8ac:	c6 df       	rcall	.-116    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8ae:	27 e0       	ldi	r18, 0x07	; 7
     8b0:	40 e0       	ldi	r20, 0x00	; 0
     8b2:	b7 01       	movw	r22, r14
     8b4:	ce 01       	movw	r24, r28
     8b6:	89 5c       	subi	r24, 0xC9	; 201
     8b8:	9e 4f       	sbci	r25, 0xFE	; 254
     8ba:	bf df       	rcall	.-130    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8bc:	21 e0       	ldi	r18, 0x01	; 1
     8be:	41 e0       	ldi	r20, 0x01	; 1
     8c0:	b7 01       	movw	r22, r14
     8c2:	ce 01       	movw	r24, r28
     8c4:	84 5c       	subi	r24, 0xC4	; 196
     8c6:	9e 4f       	sbci	r25, 0xFE	; 254
     8c8:	b8 df       	rcall	.-144    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8ca:	23 e0       	ldi	r18, 0x03	; 3
     8cc:	41 e0       	ldi	r20, 0x01	; 1
     8ce:	b7 01       	movw	r22, r14
     8d0:	ce 01       	movw	r24, r28
     8d2:	8f 5b       	subi	r24, 0xBF	; 191
     8d4:	9e 4f       	sbci	r25, 0xFE	; 254
     8d6:	b1 df       	rcall	.-158    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8d8:	25 e0       	ldi	r18, 0x05	; 5
     8da:	41 e0       	ldi	r20, 0x01	; 1
     8dc:	b7 01       	movw	r22, r14
     8de:	ce 01       	movw	r24, r28
     8e0:	8a 5b       	subi	r24, 0xBA	; 186
     8e2:	9e 4f       	sbci	r25, 0xFE	; 254
     8e4:	aa df       	rcall	.-172    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8e6:	27 e0       	ldi	r18, 0x07	; 7
     8e8:	41 e0       	ldi	r20, 0x01	; 1
     8ea:	b7 01       	movw	r22, r14
     8ec:	ce 01       	movw	r24, r28
     8ee:	85 5b       	subi	r24, 0xB5	; 181
     8f0:	9e 4f       	sbci	r25, 0xFE	; 254
     8f2:	a3 df       	rcall	.-186    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     8f4:	7e 01       	movw	r14, r28
     8f6:	88 ee       	ldi	r24, 0xE8	; 232
     8f8:	e8 1a       	sub	r14, r24
     8fa:	8e ef       	ldi	r24, 0xFE	; 254
     8fc:	f8 0a       	sbc	r15, r24
     8fe:	21 e0       	ldi	r18, 0x01	; 1
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	b7 01       	movw	r22, r14
     904:	ce 01       	movw	r24, r28
     906:	80 5b       	subi	r24, 0xB0	; 176
     908:	9e 4f       	sbci	r25, 0xFE	; 254
     90a:	97 df       	rcall	.-210    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     90c:	23 e0       	ldi	r18, 0x03	; 3
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	b7 01       	movw	r22, r14
     912:	ce 01       	movw	r24, r28
     914:	8b 5a       	subi	r24, 0xAB	; 171
     916:	9e 4f       	sbci	r25, 0xFE	; 254
     918:	90 df       	rcall	.-224    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     91a:	25 e0       	ldi	r18, 0x05	; 5
     91c:	40 e0       	ldi	r20, 0x00	; 0
     91e:	b7 01       	movw	r22, r14
     920:	ce 01       	movw	r24, r28
     922:	86 5a       	subi	r24, 0xA6	; 166
     924:	9e 4f       	sbci	r25, 0xFE	; 254
     926:	89 df       	rcall	.-238    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     928:	27 e0       	ldi	r18, 0x07	; 7
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	b7 01       	movw	r22, r14
     92e:	ce 01       	movw	r24, r28
     930:	81 5a       	subi	r24, 0xA1	; 161
     932:	9e 4f       	sbci	r25, 0xFE	; 254
     934:	82 df       	rcall	.-252    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     936:	21 e0       	ldi	r18, 0x01	; 1
     938:	41 e0       	ldi	r20, 0x01	; 1
     93a:	b7 01       	movw	r22, r14
     93c:	ce 01       	movw	r24, r28
     93e:	8c 59       	subi	r24, 0x9C	; 156
     940:	9e 4f       	sbci	r25, 0xFE	; 254
     942:	7b df       	rcall	.-266    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     944:	23 e0       	ldi	r18, 0x03	; 3
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	b7 01       	movw	r22, r14
     94a:	ce 01       	movw	r24, r28
     94c:	87 59       	subi	r24, 0x97	; 151
     94e:	9e 4f       	sbci	r25, 0xFE	; 254
     950:	74 df       	rcall	.-280    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     952:	25 e0       	ldi	r18, 0x05	; 5
     954:	41 e0       	ldi	r20, 0x01	; 1
     956:	b7 01       	movw	r22, r14
     958:	ce 01       	movw	r24, r28
     95a:	82 59       	subi	r24, 0x92	; 146
     95c:	9e 4f       	sbci	r25, 0xFE	; 254
     95e:	6d df       	rcall	.-294    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     960:	27 e0       	ldi	r18, 0x07	; 7
     962:	41 e0       	ldi	r20, 0x01	; 1
     964:	b7 01       	movw	r22, r14
     966:	ce 01       	movw	r24, r28
     968:	8d 58       	subi	r24, 0x8D	; 141
     96a:	9e 4f       	sbci	r25, 0xFE	; 254
     96c:	66 df       	rcall	.-308    	; 0x83a <_ZN11ExpanderPin10initializeEP8Expander4Port3Pin4Mode>
     96e:	df 91       	pop	r29
     970:	cf 91       	pop	r28
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <_ZN13OutputHandler21initialize_panel_ledsEv>:
     97a:	0f 93       	push	r16
     97c:	1f 93       	push	r17
     97e:	cf 93       	push	r28
     980:	df 93       	push	r29
     982:	8c 01       	movw	r16, r24
     984:	ec 01       	movw	r28, r24
     986:	c8 58       	subi	r28, 0x88	; 136
     988:	de 4f       	sbci	r29, 0xFE	; 254
     98a:	21 e0       	ldi	r18, 0x01	; 1
     98c:	40 e0       	ldi	r20, 0x00	; 0
     98e:	62 e0       	ldi	r22, 0x02	; 2
     990:	ce 01       	movw	r24, r28
     992:	32 de       	rcall	.-924    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     994:	21 e0       	ldi	r18, 0x01	; 1
     996:	41 e0       	ldi	r20, 0x01	; 1
     998:	62 e0       	ldi	r22, 0x02	; 2
     99a:	c8 01       	movw	r24, r16
     99c:	85 58       	subi	r24, 0x85	; 133
     99e:	9e 4f       	sbci	r25, 0xFE	; 254
     9a0:	2b de       	rcall	.-938    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9a2:	21 e0       	ldi	r18, 0x01	; 1
     9a4:	42 e0       	ldi	r20, 0x02	; 2
     9a6:	62 e0       	ldi	r22, 0x02	; 2
     9a8:	c8 01       	movw	r24, r16
     9aa:	82 58       	subi	r24, 0x82	; 130
     9ac:	9e 4f       	sbci	r25, 0xFE	; 254
     9ae:	24 de       	rcall	.-952    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9b0:	21 e0       	ldi	r18, 0x01	; 1
     9b2:	43 e0       	ldi	r20, 0x03	; 3
     9b4:	62 e0       	ldi	r22, 0x02	; 2
     9b6:	c8 01       	movw	r24, r16
     9b8:	8f 57       	subi	r24, 0x7F	; 127
     9ba:	9e 4f       	sbci	r25, 0xFE	; 254
     9bc:	1d de       	rcall	.-966    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9be:	21 e0       	ldi	r18, 0x01	; 1
     9c0:	44 e0       	ldi	r20, 0x04	; 4
     9c2:	62 e0       	ldi	r22, 0x02	; 2
     9c4:	c8 01       	movw	r24, r16
     9c6:	8c 57       	subi	r24, 0x7C	; 124
     9c8:	9e 4f       	sbci	r25, 0xFE	; 254
     9ca:	16 de       	rcall	.-980    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9cc:	21 e0       	ldi	r18, 0x01	; 1
     9ce:	45 e0       	ldi	r20, 0x05	; 5
     9d0:	62 e0       	ldi	r22, 0x02	; 2
     9d2:	c8 01       	movw	r24, r16
     9d4:	89 57       	subi	r24, 0x79	; 121
     9d6:	9e 4f       	sbci	r25, 0xFE	; 254
     9d8:	0f de       	rcall	.-994    	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9da:	21 e0       	ldi	r18, 0x01	; 1
     9dc:	46 e0       	ldi	r20, 0x06	; 6
     9de:	62 e0       	ldi	r22, 0x02	; 2
     9e0:	c8 01       	movw	r24, r16
     9e2:	86 57       	subi	r24, 0x76	; 118
     9e4:	9e 4f       	sbci	r25, 0xFE	; 254
     9e6:	08 de       	rcall	.-1008   	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9e8:	21 e0       	ldi	r18, 0x01	; 1
     9ea:	47 e0       	ldi	r20, 0x07	; 7
     9ec:	62 e0       	ldi	r22, 0x02	; 2
     9ee:	c8 01       	movw	r24, r16
     9f0:	83 57       	subi	r24, 0x73	; 115
     9f2:	9e 4f       	sbci	r25, 0xFE	; 254
     9f4:	01 de       	rcall	.-1022   	; 0x5f8 <_ZN10DigitalPin10initializeE4Port3Pin4Mode>
     9f6:	00 57       	subi	r16, 0x70	; 112
     9f8:	1e 4f       	sbci	r17, 0xFE	; 254
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	ce 01       	movw	r24, r28
     9fe:	48 de       	rcall	.-880    	; 0x690 <_ZN10DigitalPin5writeEb>
     a00:	23 96       	adiw	r28, 0x03	; 3
     a02:	c0 17       	cp	r28, r16
     a04:	d1 07       	cpc	r29, r17
     a06:	c9 f7       	brne	.-14     	; 0x9fa <_ZN13OutputHandler21initialize_panel_ledsEv+0x80>
     a08:	df 91       	pop	r29
     a0a:	cf 91       	pop	r28
     a0c:	1f 91       	pop	r17
     a0e:	0f 91       	pop	r16
     a10:	08 95       	ret

00000a12 <_ZN13OutputHandler24refresh_push_button_ledsEv>:
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	cf 93       	push	r28
     a18:	8c 01       	movw	r16, r24
     a1a:	08 5d       	subi	r16, 0xD8	; 216
     a1c:	1e 4f       	sbci	r17, 0xFE	; 254
     a1e:	c0 e4       	ldi	r28, 0x40	; 64
     a20:	8c 2f       	mov	r24, r28
     a22:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     a26:	89 2b       	or	r24, r25
     a28:	d1 f0       	breq	.+52     	; 0xa5e <_ZN13OutputHandler24refresh_push_button_ledsEv+0x4c>
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     a30:	89 2b       	or	r24, r25
     a32:	21 f0       	breq	.+8      	; 0xa3c <_ZN13OutputHandler24refresh_push_button_ledsEv+0x2a>
     a34:	61 e0       	ldi	r22, 0x01	; 1
     a36:	c8 01       	movw	r24, r16
     a38:	98 de       	rcall	.-720    	; 0x76a <_ZN11ExpanderPin5writeEb>
     a3a:	19 c0       	rjmp	.+50     	; 0xa6e <_ZN13OutputHandler24refresh_push_button_ledsEv+0x5c>
     a3c:	8a e0       	ldi	r24, 0x0A	; 10
     a3e:	93 e0       	ldi	r25, 0x03	; 3
     a40:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <_ZN6Clocks6isDoneEv>
     a44:	88 23       	and	r24, r24
     a46:	99 f0       	breq	.+38     	; 0xa6e <_ZN13OutputHandler24refresh_push_button_ledsEv+0x5c>
     a48:	60 91 09 03 	lds	r22, 0x0309	; 0x800309 <blinkState>
     a4c:	c8 01       	movw	r24, r16
     a4e:	8d de       	rcall	.-742    	; 0x76a <_ZN11ExpanderPin5writeEb>
     a50:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <blinkState>
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	89 27       	eor	r24, r25
     a58:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <blinkState>
     a5c:	08 c0       	rjmp	.+16     	; 0xa6e <_ZN13OutputHandler24refresh_push_button_ledsEv+0x5c>
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	70 e0       	ldi	r23, 0x00	; 0
     a62:	8c 2f       	mov	r24, r28
     a64:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <_ZN6Memory5writeEhj>
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	c8 01       	movw	r24, r16
     a6c:	7e de       	rcall	.-772    	; 0x76a <_ZN11ExpanderPin5writeEb>
     a6e:	cf 5f       	subi	r28, 0xFF	; 255
     a70:	0b 5f       	subi	r16, 0xFB	; 251
     a72:	1f 4f       	sbci	r17, 0xFF	; 255
     a74:	c0 35       	cpi	r28, 0x50	; 80
     a76:	a1 f6       	brne	.-88     	; 0xa20 <_ZN13OutputHandler24refresh_push_button_ledsEv+0xe>
     a78:	cf 91       	pop	r28
     a7a:	1f 91       	pop	r17
     a7c:	0f 91       	pop	r16
     a7e:	08 95       	ret

00000a80 <_ZN13OutputHandler18refresh_panel_ledsEv>:
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	ec 01       	movw	r28, r24
     a86:	84 e0       	ldi	r24, 0x04	; 4
     a88:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     a8c:	89 2b       	or	r24, r25
     a8e:	59 f0       	breq	.+22     	; 0xaa6 <_ZN13OutputHandler18refresh_panel_ledsEv+0x26>
     a90:	61 e0       	ldi	r22, 0x01	; 1
     a92:	ce 01       	movw	r24, r28
     a94:	88 58       	subi	r24, 0x88	; 136
     a96:	9e 4f       	sbci	r25, 0xFE	; 254
     a98:	fb dd       	rcall	.-1034   	; 0x690 <_ZN10DigitalPin5writeEb>
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	ce 01       	movw	r24, r28
     a9e:	8c 57       	subi	r24, 0x7C	; 124
     aa0:	9e 4f       	sbci	r25, 0xFE	; 254
     aa2:	f6 dd       	rcall	.-1044   	; 0x690 <_ZN10DigitalPin5writeEb>
     aa4:	0a c0       	rjmp	.+20     	; 0xaba <_ZN13OutputHandler18refresh_panel_ledsEv+0x3a>
     aa6:	60 e0       	ldi	r22, 0x00	; 0
     aa8:	ce 01       	movw	r24, r28
     aaa:	88 58       	subi	r24, 0x88	; 136
     aac:	9e 4f       	sbci	r25, 0xFE	; 254
     aae:	f0 dd       	rcall	.-1056   	; 0x690 <_ZN10DigitalPin5writeEb>
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	ce 01       	movw	r24, r28
     ab4:	8c 57       	subi	r24, 0x7C	; 124
     ab6:	9e 4f       	sbci	r25, 0xFE	; 254
     ab8:	eb dd       	rcall	.-1066   	; 0x690 <_ZN10DigitalPin5writeEb>
     aba:	87 e0       	ldi	r24, 0x07	; 7
     abc:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     ac0:	89 2b       	or	r24, r25
     ac2:	59 f0       	breq	.+22     	; 0xada <_ZN13OutputHandler18refresh_panel_ledsEv+0x5a>
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	ce 01       	movw	r24, r28
     ac8:	8f 57       	subi	r24, 0x7F	; 127
     aca:	9e 4f       	sbci	r25, 0xFE	; 254
     acc:	e1 dd       	rcall	.-1086   	; 0x690 <_ZN10DigitalPin5writeEb>
     ace:	61 e0       	ldi	r22, 0x01	; 1
     ad0:	ce 01       	movw	r24, r28
     ad2:	83 57       	subi	r24, 0x73	; 115
     ad4:	9e 4f       	sbci	r25, 0xFE	; 254
     ad6:	dc dd       	rcall	.-1096   	; 0x690 <_ZN10DigitalPin5writeEb>
     ad8:	0a c0       	rjmp	.+20     	; 0xaee <_ZN13OutputHandler18refresh_panel_ledsEv+0x6e>
     ada:	61 e0       	ldi	r22, 0x01	; 1
     adc:	ce 01       	movw	r24, r28
     ade:	8f 57       	subi	r24, 0x7F	; 127
     ae0:	9e 4f       	sbci	r25, 0xFE	; 254
     ae2:	d6 dd       	rcall	.-1108   	; 0x690 <_ZN10DigitalPin5writeEb>
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	ce 01       	movw	r24, r28
     ae8:	83 57       	subi	r24, 0x73	; 115
     aea:	9e 4f       	sbci	r25, 0xFE	; 254
     aec:	d1 dd       	rcall	.-1118   	; 0x690 <_ZN10DigitalPin5writeEb>
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     af4:	89 2b       	or	r24, r25
     af6:	59 f0       	breq	.+22     	; 0xb0e <_ZN13OutputHandler18refresh_panel_ledsEv+0x8e>
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	ce 01       	movw	r24, r28
     afc:	82 58       	subi	r24, 0x82	; 130
     afe:	9e 4f       	sbci	r25, 0xFE	; 254
     b00:	c7 dd       	rcall	.-1138   	; 0x690 <_ZN10DigitalPin5writeEb>
     b02:	61 e0       	ldi	r22, 0x01	; 1
     b04:	ce 01       	movw	r24, r28
     b06:	86 57       	subi	r24, 0x76	; 118
     b08:	9e 4f       	sbci	r25, 0xFE	; 254
     b0a:	c2 dd       	rcall	.-1148   	; 0x690 <_ZN10DigitalPin5writeEb>
     b0c:	0a c0       	rjmp	.+20     	; 0xb22 <_ZN13OutputHandler18refresh_panel_ledsEv+0xa2>
     b0e:	61 e0       	ldi	r22, 0x01	; 1
     b10:	ce 01       	movw	r24, r28
     b12:	82 58       	subi	r24, 0x82	; 130
     b14:	9e 4f       	sbci	r25, 0xFE	; 254
     b16:	bc dd       	rcall	.-1160   	; 0x690 <_ZN10DigitalPin5writeEb>
     b18:	60 e0       	ldi	r22, 0x00	; 0
     b1a:	ce 01       	movw	r24, r28
     b1c:	86 57       	subi	r24, 0x76	; 118
     b1e:	9e 4f       	sbci	r25, 0xFE	; 254
     b20:	b7 dd       	rcall	.-1170   	; 0x690 <_ZN10DigitalPin5writeEb>
     b22:	df 91       	pop	r29
     b24:	cf 91       	pop	r28
     b26:	08 95       	ret

00000b28 <_ZN13OutputHandler7refreshEv>:
     b28:	ef 92       	push	r14
     b2a:	ff 92       	push	r15
     b2c:	0f 93       	push	r16
     b2e:	1f 93       	push	r17
     b30:	cf 93       	push	r28
     b32:	df 93       	push	r29
     b34:	cd b7       	in	r28, 0x3d	; 61
     b36:	de b7       	in	r29, 0x3e	; 62
     b38:	c4 56       	subi	r28, 0x64	; 100
     b3a:	d1 09       	sbc	r29, r1
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
     b46:	8c 01       	movw	r16, r24
     b48:	64 df       	rcall	.-312    	; 0xa12 <_ZN13OutputHandler24refresh_push_button_ledsEv>
     b4a:	c8 01       	movw	r24, r16
     b4c:	99 df       	rcall	.-206    	; 0xa80 <_ZN13OutputHandler18refresh_panel_ledsEv>
     b4e:	c8 01       	movw	r24, r16
     b50:	02 96       	adiw	r24, 0x02	; 2
     b52:	0e 94 65 0e 	call	0x1cca	; 0x1cca <_ZNK11TouchScreen7refreshEv>
     b56:	8a e0       	ldi	r24, 0x0A	; 10
     b58:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     b5c:	4a e0       	ldi	r20, 0x0A	; 10
     b5e:	50 e0       	ldi	r21, 0x00	; 0
     b60:	bc 01       	movw	r22, r24
     b62:	8d e6       	ldi	r24, 0x6D	; 109
     b64:	93 e0       	ldi	r25, 0x03	; 3
     b66:	ec d7       	rcall	.+4056   	; 0x1b40 <_ZN17Adafruit_7segment5printEji>
     b68:	8d e6       	ldi	r24, 0x6D	; 109
     b6a:	93 e0       	ldi	r25, 0x03	; 3
     b6c:	cc d5       	rcall	.+2968   	; 0x1706 <_ZN20Adafruit_LEDBackpack12writeDisplayEv>
     b6e:	80 e5       	ldi	r24, 0x50	; 80
     b70:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     b74:	4a e0       	ldi	r20, 0x0A	; 10
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	bc 01       	movw	r22, r24
     b7a:	8c e2       	ldi	r24, 0x2C	; 44
     b7c:	93 e0       	ldi	r25, 0x03	; 3
     b7e:	e0 d7       	rcall	.+4032   	; 0x1b40 <_ZN17Adafruit_7segment5printEji>
     b80:	8c e2       	ldi	r24, 0x2C	; 44
     b82:	93 e0       	ldi	r25, 0x03	; 3
     b84:	c0 d5       	rcall	.+2944   	; 0x1706 <_ZN20Adafruit_LEDBackpack12writeDisplayEv>
     b86:	42 e0       	ldi	r20, 0x02	; 2
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	86 e1       	ldi	r24, 0x16	; 22
     b8c:	93 e0       	ldi	r25, 0x03	; 3
     b8e:	71 d3       	rcall	.+1762   	; 0x1272 <_ZN3LCD9setCursorEhh>
     b90:	85 e2       	ldi	r24, 0x25	; 37
     b92:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     b96:	9f 93       	push	r25
     b98:	8f 93       	push	r24
     b9a:	06 e4       	ldi	r16, 0x46	; 70
     b9c:	12 e0       	ldi	r17, 0x02	; 2
     b9e:	1f 93       	push	r17
     ba0:	0f 93       	push	r16
     ba2:	ce 01       	movw	r24, r28
     ba4:	01 96       	adiw	r24, 0x01	; 1
     ba6:	7c 01       	movw	r14, r24
     ba8:	9f 93       	push	r25
     baa:	8f 93       	push	r24
     bac:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <sprintf>
     bb0:	b7 01       	movw	r22, r14
     bb2:	86 e1       	ldi	r24, 0x16	; 22
     bb4:	93 e0       	ldi	r25, 0x03	; 3
     bb6:	34 d4       	rcall	.+2152   	; 0x1420 <_ZN3LCD5printEPKc>
     bb8:	43 e0       	ldi	r20, 0x03	; 3
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	86 e1       	ldi	r24, 0x16	; 22
     bbe:	93 e0       	ldi	r25, 0x03	; 3
     bc0:	58 d3       	rcall	.+1712   	; 0x1272 <_ZN3LCD9setCursorEhh>
     bc2:	84 e2       	ldi	r24, 0x24	; 36
     bc4:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN6Memory4readEh>
     bc8:	9f 93       	push	r25
     bca:	8f 93       	push	r24
     bcc:	1f 93       	push	r17
     bce:	0f 93       	push	r16
     bd0:	8e 01       	movw	r16, r28
     bd2:	0d 5c       	subi	r16, 0xCD	; 205
     bd4:	1f 4f       	sbci	r17, 0xFF	; 255
     bd6:	1f 93       	push	r17
     bd8:	0f 93       	push	r16
     bda:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <sprintf>
     bde:	b8 01       	movw	r22, r16
     be0:	86 e1       	ldi	r24, 0x16	; 22
     be2:	93 e0       	ldi	r25, 0x03	; 3
     be4:	1d d4       	rcall	.+2106   	; 0x1420 <_ZN3LCD5printEPKc>
     be6:	0f b6       	in	r0, 0x3f	; 63
     be8:	f8 94       	cli
     bea:	de bf       	out	0x3e, r29	; 62
     bec:	0f be       	out	0x3f, r0	; 63
     bee:	cd bf       	out	0x3d, r28	; 61
     bf0:	cc 59       	subi	r28, 0x9C	; 156
     bf2:	df 4f       	sbci	r29, 0xFF	; 255
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	f8 94       	cli
     bf8:	de bf       	out	0x3e, r29	; 62
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	cd bf       	out	0x3d, r28	; 61
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	1f 91       	pop	r17
     c04:	0f 91       	pop	r16
     c06:	ff 90       	pop	r15
     c08:	ef 90       	pop	r14
     c0a:	08 95       	ret

00000c0c <_ZN13OutputHandler6spiralEv>:
     c0c:	af 92       	push	r10
     c0e:	bf 92       	push	r11
     c10:	cf 92       	push	r12
     c12:	df 92       	push	r13
     c14:	ef 92       	push	r14
     c16:	ff 92       	push	r15
     c18:	0f 93       	push	r16
     c1a:	1f 93       	push	r17
     c1c:	cf 93       	push	r28
     c1e:	df 93       	push	r29
     c20:	cd b7       	in	r28, 0x3d	; 61
     c22:	de b7       	in	r29, 0x3e	; 62
     c24:	a0 97       	sbiw	r28, 0x20	; 32
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
     c30:	6c 01       	movw	r12, r24
     c32:	20 e2       	ldi	r18, 0x20	; 32
     c34:	e6 e0       	ldi	r30, 0x06	; 6
     c36:	f2 e0       	ldi	r31, 0x02	; 2
     c38:	ce 01       	movw	r24, r28
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	dc 01       	movw	r26, r24
     c3e:	01 90       	ld	r0, Z+
     c40:	0d 92       	st	X+, r0
     c42:	2a 95       	dec	r18
     c44:	e1 f7       	brne	.-8      	; 0xc3e <_ZN13OutputHandler6spiralEv+0x32>
     c46:	8e 01       	movw	r16, r28
     c48:	0f 5d       	subi	r16, 0xDF	; 223
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	7c 01       	movw	r14, r24
     c4e:	58 01       	movw	r10, r16
     c50:	f5 01       	movw	r30, r10
     c52:	92 91       	ld	r25, -Z
     c54:	82 91       	ld	r24, -Z
     c56:	5f 01       	movw	r10, r30
     c58:	9c 01       	movw	r18, r24
     c5a:	22 0f       	add	r18, r18
     c5c:	33 1f       	adc	r19, r19
     c5e:	22 0f       	add	r18, r18
     c60:	33 1f       	adc	r19, r19
     c62:	82 0f       	add	r24, r18
     c64:	93 1f       	adc	r25, r19
     c66:	88 5d       	subi	r24, 0xD8	; 216
     c68:	9e 4f       	sbci	r25, 0xFE	; 254
     c6a:	61 e0       	ldi	r22, 0x01	; 1
     c6c:	8c 0d       	add	r24, r12
     c6e:	9d 1d       	adc	r25, r13
     c70:	7c dd       	rcall	.-1288   	; 0x76a <_ZN11ExpanderPin5writeEb>
     c72:	ff ef       	ldi	r31, 0xFF	; 255
     c74:	20 e7       	ldi	r18, 0x70	; 112
     c76:	82 e0       	ldi	r24, 0x02	; 2
     c78:	f1 50       	subi	r31, 0x01	; 1
     c7a:	20 40       	sbci	r18, 0x00	; 0
     c7c:	80 40       	sbci	r24, 0x00	; 0
     c7e:	e1 f7       	brne	.-8      	; 0xc78 <_ZN13OutputHandler6spiralEv+0x6c>
     c80:	00 c0       	rjmp	.+0      	; 0xc82 <_ZN13OutputHandler6spiralEv+0x76>
     c82:	00 00       	nop
     c84:	ea 14       	cp	r14, r10
     c86:	fb 04       	cpc	r15, r11
     c88:	19 f7       	brne	.-58     	; 0xc50 <_ZN13OutputHandler6spiralEv+0x44>
     c8a:	f8 01       	movw	r30, r16
     c8c:	92 91       	ld	r25, -Z
     c8e:	82 91       	ld	r24, -Z
     c90:	8f 01       	movw	r16, r30
     c92:	9c 01       	movw	r18, r24
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	22 0f       	add	r18, r18
     c9a:	33 1f       	adc	r19, r19
     c9c:	82 0f       	add	r24, r18
     c9e:	93 1f       	adc	r25, r19
     ca0:	88 5d       	subi	r24, 0xD8	; 216
     ca2:	9e 4f       	sbci	r25, 0xFE	; 254
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	8c 0d       	add	r24, r12
     ca8:	9d 1d       	adc	r25, r13
     caa:	5f dd       	rcall	.-1346   	; 0x76a <_ZN11ExpanderPin5writeEb>
     cac:	ff ef       	ldi	r31, 0xFF	; 255
     cae:	20 e7       	ldi	r18, 0x70	; 112
     cb0:	82 e0       	ldi	r24, 0x02	; 2
     cb2:	f1 50       	subi	r31, 0x01	; 1
     cb4:	20 40       	sbci	r18, 0x00	; 0
     cb6:	80 40       	sbci	r24, 0x00	; 0
     cb8:	e1 f7       	brne	.-8      	; 0xcb2 <_ZN13OutputHandler6spiralEv+0xa6>
     cba:	00 c0       	rjmp	.+0      	; 0xcbc <_ZN13OutputHandler6spiralEv+0xb0>
     cbc:	00 00       	nop
     cbe:	0e 15       	cp	r16, r14
     cc0:	1f 05       	cpc	r17, r15
     cc2:	19 f7       	brne	.-58     	; 0xc8a <_ZN13OutputHandler6spiralEv+0x7e>
     cc4:	a0 96       	adiw	r28, 0x20	; 32
     cc6:	0f b6       	in	r0, 0x3f	; 63
     cc8:	f8 94       	cli
     cca:	de bf       	out	0x3e, r29	; 62
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	cd bf       	out	0x3d, r28	; 61
     cd0:	df 91       	pop	r29
     cd2:	cf 91       	pop	r28
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	ff 90       	pop	r15
     cda:	ef 90       	pop	r14
     cdc:	df 90       	pop	r13
     cde:	cf 90       	pop	r12
     ce0:	bf 90       	pop	r11
     ce2:	af 90       	pop	r10
     ce4:	08 95       	ret

00000ce6 <_ZN13OutputHandler7startupEv>:
     ce6:	6f 92       	push	r6
     ce8:	7f 92       	push	r7
     cea:	8f 92       	push	r8
     cec:	9f 92       	push	r9
     cee:	af 92       	push	r10
     cf0:	bf 92       	push	r11
     cf2:	cf 92       	push	r12
     cf4:	df 92       	push	r13
     cf6:	ef 92       	push	r14
     cf8:	ff 92       	push	r15
     cfa:	0f 93       	push	r16
     cfc:	1f 93       	push	r17
     cfe:	cf 93       	push	r28
     d00:	df 93       	push	r29
     d02:	7c 01       	movw	r14, r24
     d04:	61 2c       	mov	r6, r1
     d06:	71 2c       	mov	r7, r1
     d08:	0f 2e       	mov	r0, r31
     d0a:	f3 e0       	ldi	r31, 0x03	; 3
     d0c:	af 2e       	mov	r10, r31
     d0e:	b1 2c       	mov	r11, r1
     d10:	f0 2d       	mov	r31, r0
     d12:	81 2c       	mov	r8, r1
     d14:	91 2c       	mov	r9, r1
     d16:	63 01       	movw	r12, r6
     d18:	21 e0       	ldi	r18, 0x01	; 1
     d1a:	c2 22       	and	r12, r18
     d1c:	dd 24       	eor	r13, r13
     d1e:	c1 14       	cp	r12, r1
     d20:	d1 04       	cpc	r13, r1
     d22:	21 f0       	breq	.+8      	; 0xd2c <_ZN13OutputHandler7startupEv+0x46>
     d24:	e5 01       	movw	r28, r10
     d26:	c8 19       	sub	r28, r8
     d28:	d9 09       	sbc	r29, r9
     d2a:	01 c0       	rjmp	.+2      	; 0xd2e <_ZN13OutputHandler7startupEv+0x48>
     d2c:	e4 01       	movw	r28, r8
     d2e:	8e 01       	movw	r16, r28
     d30:	00 0f       	add	r16, r16
     d32:	11 1f       	adc	r17, r17
     d34:	0c 0f       	add	r16, r28
     d36:	1d 1f       	adc	r17, r29
     d38:	08 58       	subi	r16, 0x88	; 136
     d3a:	1e 4f       	sbci	r17, 0xFE	; 254
     d3c:	0e 0d       	add	r16, r14
     d3e:	1f 1d       	adc	r17, r15
     d40:	61 e0       	ldi	r22, 0x01	; 1
     d42:	c8 01       	movw	r24, r16
     d44:	a5 dc       	rcall	.-1718   	; 0x690 <_ZN10DigitalPin5writeEb>
     d46:	24 96       	adiw	r28, 0x04	; 4
     d48:	ce 01       	movw	r24, r28
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	c8 0f       	add	r28, r24
     d50:	d9 1f       	adc	r29, r25
     d52:	c8 58       	subi	r28, 0x88	; 136
     d54:	de 4f       	sbci	r29, 0xFE	; 254
     d56:	ce 0d       	add	r28, r14
     d58:	df 1d       	adc	r29, r15
     d5a:	61 e0       	ldi	r22, 0x01	; 1
     d5c:	ce 01       	movw	r24, r28
     d5e:	98 dc       	rcall	.-1744   	; 0x690 <_ZN10DigitalPin5writeEb>
     d60:	8f ef       	ldi	r24, 0xFF	; 255
     d62:	90 e7       	ldi	r25, 0x70	; 112
     d64:	22 e0       	ldi	r18, 0x02	; 2
     d66:	81 50       	subi	r24, 0x01	; 1
     d68:	90 40       	sbci	r25, 0x00	; 0
     d6a:	20 40       	sbci	r18, 0x00	; 0
     d6c:	e1 f7       	brne	.-8      	; 0xd66 <_ZN13OutputHandler7startupEv+0x80>
     d6e:	00 c0       	rjmp	.+0      	; 0xd70 <_ZN13OutputHandler7startupEv+0x8a>
     d70:	00 00       	nop
     d72:	60 e0       	ldi	r22, 0x00	; 0
     d74:	c8 01       	movw	r24, r16
     d76:	8c dc       	rcall	.-1768   	; 0x690 <_ZN10DigitalPin5writeEb>
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	ce 01       	movw	r24, r28
     d7c:	89 dc       	rcall	.-1774   	; 0x690 <_ZN10DigitalPin5writeEb>
     d7e:	8f ef       	ldi	r24, 0xFF	; 255
     d80:	88 1a       	sub	r8, r24
     d82:	98 0a       	sbc	r9, r24
     d84:	94 e0       	ldi	r25, 0x04	; 4
     d86:	89 16       	cp	r8, r25
     d88:	91 04       	cpc	r9, r1
     d8a:	49 f6       	brne	.-110    	; 0xd1e <_ZN13OutputHandler7startupEv+0x38>
     d8c:	2f ef       	ldi	r18, 0xFF	; 255
     d8e:	62 1a       	sub	r6, r18
     d90:	72 0a       	sbc	r7, r18
     d92:	84 e0       	ldi	r24, 0x04	; 4
     d94:	68 16       	cp	r6, r24
     d96:	71 04       	cpc	r7, r1
     d98:	09 f0       	breq	.+2      	; 0xd9c <_ZN13OutputHandler7startupEv+0xb6>
     d9a:	bb cf       	rjmp	.-138    	; 0xd12 <_ZN13OutputHandler7startupEv+0x2c>
     d9c:	c7 01       	movw	r24, r14
     d9e:	36 df       	rcall	.-404    	; 0xc0c <_ZN13OutputHandler6spiralEv>
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	1f 91       	pop	r17
     da6:	0f 91       	pop	r16
     da8:	ff 90       	pop	r15
     daa:	ef 90       	pop	r14
     dac:	df 90       	pop	r13
     dae:	cf 90       	pop	r12
     db0:	bf 90       	pop	r11
     db2:	af 90       	pop	r10
     db4:	9f 90       	pop	r9
     db6:	8f 90       	pop	r8
     db8:	7f 90       	pop	r7
     dba:	6f 90       	pop	r6
     dbc:	08 95       	ret

00000dbe <_GLOBAL__sub_I_LsevenSeg>:
     dbe:	8f 92       	push	r8
     dc0:	af 92       	push	r10
     dc2:	cf 92       	push	r12
     dc4:	ef 92       	push	r14
     dc6:	0f 93       	push	r16
#include "../i2c/LiquidCrystal_I2C.hpp"
#include <stdio.h>

#define F_CPU 16000000UL
#include <util/delay.h>
Adafruit_7segment LsevenSeg(0x70);
     dc8:	60 e7       	ldi	r22, 0x70	; 112
     dca:	8d e6       	ldi	r24, 0x6D	; 109
     dcc:	93 e0       	ldi	r25, 0x03	; 3
     dce:	b3 d4       	rcall	.+2406   	; 0x1736 <_ZN17Adafruit_7segmentC1Eh>
Adafruit_7segment RsevenSeg(0x71);
     dd0:	61 e7       	ldi	r22, 0x71	; 113
     dd2:	8c e2       	ldi	r24, 0x2C	; 44
     dd4:	93 e0       	ldi	r25, 0x03	; 3
     dd6:	af d4       	rcall	.+2398   	; 0x1736 <_ZN17Adafruit_7segmentC1Eh>
LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7);
     dd8:	0f 2e       	mov	r0, r31
     dda:	f7 e0       	ldi	r31, 0x07	; 7
     ddc:	8f 2e       	mov	r8, r31
     dde:	f0 2d       	mov	r31, r0
     de0:	0f 2e       	mov	r0, r31
     de2:	f6 e0       	ldi	r31, 0x06	; 6
     de4:	af 2e       	mov	r10, r31
     de6:	f0 2d       	mov	r31, r0
     de8:	0f 2e       	mov	r0, r31
     dea:	f5 e0       	ldi	r31, 0x05	; 5
     dec:	cf 2e       	mov	r12, r31
     dee:	f0 2d       	mov	r31, r0
     df0:	68 94       	set
     df2:	ee 24       	eor	r14, r14
     df4:	e2 f8       	bld	r14, 2
     df6:	00 e0       	ldi	r16, 0x00	; 0
     df8:	21 e0       	ldi	r18, 0x01	; 1
     dfa:	42 e0       	ldi	r20, 0x02	; 2
     dfc:	6f e3       	ldi	r22, 0x3F	; 63
     dfe:	86 e1       	ldi	r24, 0x16	; 22
     e00:	93 e0       	ldi	r25, 0x03	; 3
     e02:	6e d3       	rcall	.+1756   	; 0x14e0 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh>
	panel_leds[6].initialize(C, SIX, OUTPUT);
	panel_leds[7].initialize(C, SEVEN, OUTPUT);
	for (int i = 0; i < 8; ++i)
		panel_leds[i].write(0);
}
Clocks blinkTimer(500);
     e04:	44 ef       	ldi	r20, 0xF4	; 244
     e06:	51 e0       	ldi	r21, 0x01	; 1
     e08:	60 e0       	ldi	r22, 0x00	; 0
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	8a e0       	ldi	r24, 0x0A	; 10
     e0e:	93 e0       	ldi	r25, 0x03	; 3
     e10:	bb d7       	rcall	.+3958   	; 0x1d88 <_ZN6ClocksC1El>
		push_button_leds[inner[j]].write(0);
	_delay_ms(pause);
	for (int j = 0; j < 12; ++j)
		push_button_leds[outer[j]].write(0);
	_delay_ms(pause);
     e12:	0f 91       	pop	r16
     e14:	ef 90       	pop	r14
     e16:	cf 90       	pop	r12
     e18:	af 90       	pop	r10
     e1a:	8f 90       	pop	r8
     e1c:	08 95       	ret

00000e1e <_ZN13OutputHandler10initializeEP6Memory>:
Adafruit_7segment LsevenSeg(0x70);
Adafruit_7segment RsevenSeg(0x71);
LiquidCrystal_I2C lcd(0x3F, 2, 1, 0, 4, 5, 6, 7);

void OutputHandler::initialize (Memory * memory)
{
     e1e:	0f 93       	push	r16
     e20:	1f 93       	push	r17
     e22:	cf 93       	push	r28
     e24:	df 93       	push	r29
     e26:	ec 01       	movw	r28, r24
     e28:	8b 01       	movw	r16, r22
	this->memory = memory;
     e2a:	79 83       	std	Y+1, r23	; 0x01
     e2c:	68 83       	st	Y, r22
	initialize_expanders();
     e2e:	0f dd       	rcall	.-1506   	; 0x84e <_ZN13OutputHandler20initialize_expandersEv>
	initialize_push_button_leds();
     e30:	ce 01       	movw	r24, r28
     e32:	1c dd       	rcall	.-1480   	; 0x86c <_ZN13OutputHandler27initialize_push_button_ledsEv>
	initialize_panel_leds();
     e34:	ce 01       	movw	r24, r28
     e36:	a1 dd       	rcall	.-1214   	; 0x97a <_ZN13OutputHandler21initialize_panel_ledsEv>
     e38:	43 e0       	ldi	r20, 0x03	; 3

	screen.initialize(memory, UART_3);
     e3a:	50 e0       	ldi	r21, 0x00	; 0
     e3c:	b8 01       	movw	r22, r16
     e3e:	ce 01       	movw	r24, r28
     e40:	02 96       	adiw	r24, 0x02	; 2
     e42:	04 d7       	rcall	.+3592   	; 0x1c4c <_ZN11TouchScreen10initializeEP6Memoryj>
     e44:	20 e0       	ldi	r18, 0x00	; 0

	lcd.begin (20, 4); // 20 x 4 LCD module
     e46:	44 e0       	ldi	r20, 0x04	; 4
     e48:	64 e1       	ldi	r22, 0x14	; 20
     e4a:	86 e1       	ldi	r24, 0x16	; 22
     e4c:	93 e0       	ldi	r25, 0x03	; 3
     e4e:	15 d4       	rcall	.+2090   	; 0x167a <_ZN17LiquidCrystal_I2C5beginEhhh>
     e50:	40 e0       	ldi	r20, 0x00	; 0
	lcd.setBacklightPin(3, POSITIVE); // BL, BL_POL
     e52:	63 e0       	ldi	r22, 0x03	; 3
     e54:	86 e1       	ldi	r24, 0x16	; 22
     e56:	93 e0       	ldi	r25, 0x03	; 3
     e58:	19 d3       	rcall	.+1586   	; 0x148c <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol>
     e5a:	61 e0       	ldi	r22, 0x01	; 1
	lcd.setBacklight(1);
     e5c:	86 e1       	ldi	r24, 0x16	; 22
     e5e:	93 e0       	ldi	r25, 0x03	; 3
     e60:	29 d3       	rcall	.+1618   	; 0x14b4 <_ZN17LiquidCrystal_I2C12setBacklightEh>
     e62:	61 e5       	ldi	r22, 0x51	; 81
	lcd.print("NASA Robotics");
     e64:	72 e0       	ldi	r23, 0x02	; 2
     e66:	86 e1       	ldi	r24, 0x16	; 22
     e68:	93 e0       	ldi	r25, 0x03	; 3
     e6a:	da d2       	rcall	.+1460   	; 0x1420 <_ZN3LCD5printEPKc>
     e6c:	41 e0       	ldi	r20, 0x01	; 1
	lcd.setCursor(0, 1);
     e6e:	60 e0       	ldi	r22, 0x00	; 0
     e70:	86 e1       	ldi	r24, 0x16	; 22
     e72:	93 e0       	ldi	r25, 0x03	; 3
     e74:	fe d1       	rcall	.+1020   	; 0x1272 <_ZN3LCD9setCursorEhh>
     e76:	6f e5       	ldi	r22, 0x5F	; 95
	lcd.print("Control Box: V2.3");
     e78:	72 e0       	ldi	r23, 0x02	; 2
     e7a:	86 e1       	ldi	r24, 0x16	; 22
     e7c:	93 e0       	ldi	r25, 0x03	; 3
     e7e:	d0 d2       	rcall	.+1440   	; 0x1420 <_ZN3LCD5printEPKc>
     e80:	60 e7       	ldi	r22, 0x70	; 112
	LsevenSeg.begin(0x70);
     e82:	8d e6       	ldi	r24, 0x6D	; 109
     e84:	93 e0       	ldi	r25, 0x03	; 3
     e86:	29 d4       	rcall	.+2130   	; 0x16da <_ZN20Adafruit_LEDBackpack5beginEh>
     e88:	61 e7       	ldi	r22, 0x71	; 113
     e8a:	8c e2       	ldi	r24, 0x2C	; 44
	RsevenSeg.begin(0x71);
     e8c:	93 e0       	ldi	r25, 0x03	; 3
     e8e:	25 d4       	rcall	.+2122   	; 0x16da <_ZN20Adafruit_LEDBackpack5beginEh>
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	1f 91       	pop	r17
}
     e96:	0f 91       	pop	r16
     e98:	08 95       	ret

00000e9a <_Z10copy_rangePhS_h>:
     e9a:	44 23       	and	r20, r20
     e9c:	51 f0       	breq	.+20     	; 0xeb2 <_Z10copy_rangePhS_h+0x18>
     e9e:	a8 2f       	mov	r26, r24
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
	state = DONE;
     ea0:	b9 2f       	mov	r27, r25
     ea2:	fb 01       	movw	r30, r22
     ea4:	64 0f       	add	r22, r20
     ea6:	71 1d       	adc	r23, r1
     ea8:	8d 91       	ld	r24, X+
     eaa:	81 93       	st	Z+, r24
     eac:	e6 17       	cp	r30, r22
     eae:	f7 07       	cpc	r31, r23
     eb0:	d9 f7       	brne	.-10     	; 0xea8 <_Z10copy_rangePhS_h+0xe>
     eb2:	08 95       	ret

00000eb4 <_ZN3I2C11set_addressEh>:
     eb4:	66 0f       	add	r22, r22
     eb6:	fc 01       	movw	r30, r24
     eb8:	61 83       	std	Z+1, r22	; 0x01
     eba:	08 95       	ret

00000ebc <_ZN3I2C12send_addressENS_9DirectionE>:
     ebc:	fc 01       	movw	r30, r24
     ebe:	61 11       	cpse	r22, r1
     ec0:	04 c0       	rjmp	.+8      	; 0xeca <_ZN3I2C12send_addressENS_9DirectionE+0xe>
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	81 60       	ori	r24, 0x01	; 1
     ec6:	81 83       	std	Z+1, r24	; 0x01
     ec8:	03 c0       	rjmp	.+6      	; 0xed0 <_ZN3I2C12send_addressENS_9DirectionE+0x14>
     eca:	81 81       	ldd	r24, Z+1	; 0x01
     ecc:	8e 7f       	andi	r24, 0xFE	; 254
     ece:	81 83       	std	Z+1, r24	; 0x01
     ed0:	81 81       	ldd	r24, Z+1	; 0x01
     ed2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     ed6:	84 e8       	ldi	r24, 0x84	; 132
     ed8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     edc:	83 e0       	ldi	r24, 0x03	; 3
     ede:	80 83       	st	Z, r24
     ee0:	08 95       	ret

00000ee2 <_ZN3I2C14read_data_byteEv>:
     ee2:	fc 01       	movw	r30, r24
     ee4:	84 85       	ldd	r24, Z+12	; 0x0c
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	25 85       	ldd	r18, Z+13	; 0x0d
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	21 50       	subi	r18, 0x01	; 1
     eee:	31 09       	sbc	r19, r1
     ef0:	82 17       	cp	r24, r18
     ef2:	93 07       	cpc	r25, r19
     ef4:	31 f4       	brne	.+12     	; 0xf02 <_ZN3I2C14read_data_byteEv+0x20>
     ef6:	ac eb       	ldi	r26, 0xBC	; 188
     ef8:	b0 e0       	ldi	r27, 0x00	; 0
     efa:	9c 91       	ld	r25, X
     efc:	80 e4       	ldi	r24, 0x40	; 64
     efe:	89 27       	eor	r24, r25
     f00:	8c 93       	st	X, r24
     f02:	84 e8       	ldi	r24, 0x84	; 132
     f04:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     f08:	86 e0       	ldi	r24, 0x06	; 6
     f0a:	80 83       	st	Z, r24
     f0c:	08 95       	ret

00000f0e <_ZN3I2C4failEv>:
}

void I2C::fail ()
{
     f0e:	fc 01       	movw	r30, r24
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
     f10:	84 e9       	ldi	r24, 0x94	; 148
     f12:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	index = 0;
     f16:	14 86       	std	Z+12, r1	; 0x0c
	state = START;
     f18:	10 82       	st	Z, r1
	++fail_count;
     f1a:	86 85       	ldd	r24, Z+14	; 0x0e
     f1c:	8f 5f       	subi	r24, 0xFF	; 255
     f1e:	86 87       	std	Z+14, r24	; 0x0e
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f20:	85 e3       	ldi	r24, 0x35	; 53
     f22:	8a 95       	dec	r24
     f24:	f1 f7       	brne	.-4      	; 0xf22 <_ZN3I2C4failEv+0x14>
     f26:	00 00       	nop
     f28:	08 95       	ret

00000f2a <_ZN3I2C12verify_startEv>:
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
	state = VERIFY_START;
}

void I2C::verify_start ()
{
     f2a:	fc 01       	movw	r30, r24
		*dest++ = *src++;
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
     f2c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_START;
}

void I2C::verify_start ()
{
	if (!interrupt_flag_set())
     f30:	99 23       	and	r25, r25
     f32:	54 f4       	brge	.+20     	; 0xf48 <_ZN3I2C12verify_startEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
     f34:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_start ()
{
	if (!interrupt_flag_set())
		return;
	if (check_status(TW_START))
     f38:	88 7f       	andi	r24, 0xF8	; 248
     f3a:	88 30       	cpi	r24, 0x08	; 8
     f3c:	19 f4       	brne	.+6      	; 0xf44 <_ZN3I2C12verify_startEv+0x1a>
		state = SEND_ADDRESS;
     f3e:	82 e0       	ldi	r24, 0x02	; 2
     f40:	80 83       	st	Z, r24
     f42:	08 95       	ret
     f44:	cf 01       	movw	r24, r30
	else
		fail();
     f46:	e3 cf       	rjmp	.-58     	; 0xf0e <_ZN3I2C4failEv>
     f48:	08 95       	ret

00000f4a <_ZN3I2C25verify_write_address_sentEv>:
	TWCR = (1 << TWINT) | (1 << TWEN);
	state = VERIFY_ADDRESS;
}

void I2C::verify_write_address_sent ()
{
     f4a:	fc 01       	movw	r30, r24
		*dest++ = *src++;
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
     f4c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_ADDRESS;
}

void I2C::verify_write_address_sent ()
{
	if (interrupt_flag_set())
     f50:	99 23       	and	r25, r25
     f52:	54 f4       	brge	.+20     	; 0xf68 <_ZN3I2C25verify_write_address_sentEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
     f54:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_write_address_sent ()
{
	if (interrupt_flag_set())
	{
		if (check_status(TW_MT_SLA_ACK))
     f58:	88 7f       	andi	r24, 0xF8	; 248
     f5a:	88 31       	cpi	r24, 0x18	; 24
     f5c:	19 f4       	brne	.+6      	; 0xf64 <_ZN3I2C25verify_write_address_sentEv+0x1a>
			state = SEND_BYTE;
     f5e:	84 e0       	ldi	r24, 0x04	; 4
     f60:	80 83       	st	Z, r24
     f62:	08 95       	ret
     f64:	cf 01       	movw	r24, r30
		else
			fail();
     f66:	d3 cf       	rjmp	.-90     	; 0xf0e <_ZN3I2C4failEv>
     f68:	08 95       	ret

00000f6a <_ZN3I2C24verify_read_address_sentEv>:
	}
}

void I2C::verify_read_address_sent ()
{
     f6a:	fc 01       	movw	r30, r24
		*dest++ = *src++;
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
     f6c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	}
}

void I2C::verify_read_address_sent ()
{
	if (interrupt_flag_set())
     f70:	99 23       	and	r25, r25
     f72:	54 f4       	brge	.+20     	; 0xf88 <_ZN3I2C24verify_read_address_sentEv+0x1e>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
     f74:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_read_address_sent ()
{
	if (interrupt_flag_set())
	{
		if (check_status(TW_MR_SLA_ACK))
     f78:	88 7f       	andi	r24, 0xF8	; 248
     f7a:	80 34       	cpi	r24, 0x40	; 64
     f7c:	19 f4       	brne	.+6      	; 0xf84 <_ZN3I2C24verify_read_address_sentEv+0x1a>
			state = READ_BYTE;
     f7e:	85 e0       	ldi	r24, 0x05	; 5
     f80:	80 83       	st	Z, r24
     f82:	08 95       	ret
     f84:	cf 01       	movw	r24, r30
		else
			fail();
     f86:	c3 cf       	rjmp	.-122    	; 0xf0e <_ZN3I2C4failEv>
     f88:	08 95       	ret

00000f8a <_ZN3I2C16verify_data_sentEv>:
		*dest++ = *src++;
}

bool interrupt_flag_set ()
{
	return TWCR & (1 << TWINT);
     f8a:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = VERIFY_DATA;
}

void I2C::verify_data_sent ()
{
	if (!interrupt_flag_set())
     f8e:	22 23       	and	r18, r18
     f90:	a4 f4       	brge	.+40     	; 0xfba <_ZN3I2C16verify_data_sentEv+0x30>
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
     f92:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

void I2C::verify_data_sent ()
{
	if (!interrupt_flag_set())
		return;
	if (check_status(TW_MT_DATA_ACK))
     f96:	28 7f       	andi	r18, 0xF8	; 248
     f98:	28 32       	cpi	r18, 0x28	; 40
     f9a:	71 f4       	brne	.+28     	; 0xfb8 <_ZN3I2C16verify_data_sentEv+0x2e>
	{
		if (++index < size)
     f9c:	fc 01       	movw	r30, r24
     f9e:	24 85       	ldd	r18, Z+12	; 0x0c
     fa0:	2f 5f       	subi	r18, 0xFF	; 255
     fa2:	24 87       	std	Z+12, r18	; 0x0c
     fa4:	35 85       	ldd	r19, Z+13	; 0x0d
     fa6:	23 17       	cp	r18, r19
     fa8:	18 f4       	brcc	.+6      	; 0xfb0 <_ZN3I2C16verify_data_sentEv+0x26>
			state = SEND_BYTE;
     faa:	24 e0       	ldi	r18, 0x04	; 4
     fac:	20 83       	st	Z, r18
     fae:	08 95       	ret
		else
			state = STOP;
     fb0:	27 e0       	ldi	r18, 0x07	; 7
     fb2:	fc 01       	movw	r30, r24
     fb4:	20 83       	st	Z, r18
     fb6:	08 95       	ret
	}
	else
		fail();
     fb8:	aa cf       	rjmp	.-172    	; 0xf0e <_ZN3I2C4failEv>
     fba:	08 95       	ret

00000fbc <_ZN3I2C5writeEPhh>:
{
	this->address = _address << 1;
}

int I2C::write (uint8_t * data, uint8_t size)
{
     fbc:	9f 92       	push	r9
     fbe:	af 92       	push	r10
     fc0:	bf 92       	push	r11
     fc2:	cf 92       	push	r12
     fc4:	df 92       	push	r13
     fc6:	ef 92       	push	r14
     fc8:	ff 92       	push	r15
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	ec 01       	movw	r28, r24
     fd4:	7b 01       	movw	r14, r22
     fd6:	14 2f       	mov	r17, r20

	copy_range(data, buffer, size);
     fd8:	bc 01       	movw	r22, r24
     fda:	6e 5f       	subi	r22, 0xFE	; 254
     fdc:	7f 4f       	sbci	r23, 0xFF	; 255
     fde:	c7 01       	movw	r24, r14
     fe0:	5c df       	rcall	.-328    	; 0xe9a <_Z10copy_rangePhS_h>

/*------------------------ Internal Helper Functions -------------------------*/

void I2C::reset (uint8_t size)
{
	TWBR = (uint8_t)TWBR_VALUE;
     fe2:	88 e4       	ldi	r24, 0x48	; 72
     fe4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	this->size = size;
     fe8:	1d 87       	std	Y+13, r17	; 0x0d
	index = 0;
     fea:	1c 86       	std	Y+12, r1	; 0x0c
	fail_count = 0;
     fec:	1e 86       	std	Y+14, r1	; 0x0e
	state = START;
     fee:	18 82       	st	Y, r1
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
     ff0:	e0 e0       	ldi	r30, 0x00	; 0
	}
}

void I2C::send_data_byte (uint8_t data)
{
	TWDR = data;
     ff2:	0f 2e       	mov	r0, r31
     ff4:	fb eb       	ldi	r31, 0xBB	; 187
     ff6:	cf 2e       	mov	r12, r31
     ff8:	d1 2c       	mov	r13, r1
     ffa:	f0 2d       	mov	r31, r0
	TWCR = (1 << TWINT) | (1 << TWEN);
     ffc:	0c eb       	ldi	r16, 0xBC	; 188
     ffe:	10 e0       	ldi	r17, 0x00	; 0
    1000:	0f 2e       	mov	r0, r31
    1002:	f4 e8       	ldi	r31, 0x84	; 132
    1004:	9f 2e       	mov	r9, r31
    1006:	f0 2d       	mov	r31, r0
	state = VERIFY_DATA;
    1008:	0f 2e       	mov	r0, r31
    100a:	f6 e0       	ldi	r31, 0x06	; 6
    100c:	af 2e       	mov	r10, r31
    100e:	f0 2d       	mov	r31, r0
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    1010:	0f 2e       	mov	r0, r31
    1012:	f4 ee       	ldi	r31, 0xE4	; 228
    1014:	bf 2e       	mov	r11, r31
    1016:	f0 2d       	mov	r31, r0
    1018:	03 c0       	rjmp	.+6      	; 0x1020 <_ZN3I2C5writeEPhh+0x64>
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
    101a:	e8 81       	ld	r30, Y
    101c:	e8 30       	cpi	r30, 0x08	; 8
    101e:	99 f1       	breq	.+102    	; 0x1086 <_ZN3I2C5writeEPhh+0xca>
	{
		if (fail_count >= MAX_FAIL_COUNT)
    1020:	8e 85       	ldd	r24, Y+14	; 0x0e
    1022:	85 30       	cpi	r24, 0x05	; 5
    1024:	98 f5       	brcc	.+102    	; 0x108c <_ZN3I2C5writeEPhh+0xd0>
			return I2C_FAILURE;
		switch (state)
    1026:	8e 2f       	mov	r24, r30
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	88 30       	cpi	r24, 0x08	; 8
    102c:	91 05       	cpc	r25, r1
    102e:	40 f5       	brcc	.+80     	; 0x1080 <_ZN3I2C5writeEPhh+0xc4>
    1030:	fc 01       	movw	r30, r24
    1032:	e8 57       	subi	r30, 0x78	; 120
    1034:	ff 4f       	sbci	r31, 0xFF	; 255
    1036:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__tablejump2__>
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    103a:	f8 01       	movw	r30, r16
    103c:	b0 82       	st	Z, r11
	state = VERIFY_START;
    103e:	81 e0       	ldi	r24, 0x01	; 1
    1040:	88 83       	st	Y, r24
    1042:	2a c0       	rjmp	.+84     	; 0x1098 <_ZN3I2C5writeEPhh+0xdc>
		switch (state)
		{
		case START:
			start();
when VERIFY_START:
			verify_start();
    1044:	ce 01       	movw	r24, r28
    1046:	71 df       	rcall	.-286    	; 0xf2a <_ZN3I2C12verify_startEv>
when SEND_ADDRESS:
    1048:	e8 cf       	rjmp	.-48     	; 0x101a <_ZN3I2C5writeEPhh+0x5e>
			send_address(WRITE);
    104a:	61 e0       	ldi	r22, 0x01	; 1
    104c:	ce 01       	movw	r24, r28
    104e:	36 df       	rcall	.-404    	; 0xebc <_ZN3I2C12send_addressENS_9DirectionE>
when VERIFY_ADDRESS:
    1050:	e4 cf       	rjmp	.-56     	; 0x101a <_ZN3I2C5writeEPhh+0x5e>
			verify_write_address_sent();
    1052:	ce 01       	movw	r24, r28
    1054:	7a df       	rcall	.-268    	; 0xf4a <_ZN3I2C25verify_write_address_sentEv>
    1056:	e1 cf       	rjmp	.-62     	; 0x101a <_ZN3I2C5writeEPhh+0x5e>
when SEND_BYTE:
    1058:	8c 85       	ldd	r24, Y+12	; 0x0c
			send_data_byte(data[index]);
    105a:	f7 01       	movw	r30, r14
    105c:	e8 0f       	add	r30, r24
    105e:	f1 1d       	adc	r31, r1
    1060:	80 81       	ld	r24, Z
    1062:	f6 01       	movw	r30, r12
	}
}

void I2C::send_data_byte (uint8_t data)
{
	TWDR = data;
    1064:	80 83       	st	Z, r24
    1066:	f8 01       	movw	r30, r16
	TWCR = (1 << TWINT) | (1 << TWEN);
    1068:	90 82       	st	Z, r9
	state = VERIFY_DATA;
    106a:	a8 82       	st	Y, r10
    106c:	15 c0       	rjmp	.+42     	; 0x1098 <_ZN3I2C5writeEPhh+0xdc>
when VERIFY_ADDRESS:
			verify_write_address_sent();
when SEND_BYTE:
			send_data_byte(data[index]);
when VERIFY_DATA:
			verify_data_sent();
    106e:	ce 01       	movw	r24, r28
    1070:	8c df       	rcall	.-232    	; 0xf8a <_ZN3I2C16verify_data_sentEv>
    1072:	d3 cf       	rjmp	.-90     	; 0x101a <_ZN3I2C5writeEPhh+0x5e>
when STOP:
    1074:	84 e9       	ldi	r24, 0x94	; 148
		fail();
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    1076:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    107a:	88 e0       	ldi	r24, 0x08	; 8
	state = DONE;
    107c:	88 83       	st	Y, r24
    107e:	09 c0       	rjmp	.+18     	; 0x1092 <_ZN3I2C5writeEPhh+0xd6>
    1080:	88 e0       	ldi	r24, 0x08	; 8
when VERIFY_DATA:
			verify_data_sent();
when STOP:
			stop();
otherwise:
			state = DONE;
    1082:	88 83       	st	Y, r24
    1084:	06 c0       	rjmp	.+12     	; 0x1092 <_ZN3I2C5writeEPhh+0xd6>
    1086:	81 e0       	ldi	r24, 0x01	; 1
		}
	}
	return I2C_SUCCESS;
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	08 c0       	rjmp	.+16     	; 0x109c <_ZN3I2C5writeEPhh+0xe0>
    108c:	80 e0       	ldi	r24, 0x00	; 0
	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
	{
		if (fail_count >= MAX_FAIL_COUNT)
			return I2C_FAILURE;
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	05 c0       	rjmp	.+10     	; 0x109c <_ZN3I2C5writeEPhh+0xe0>
    1092:	81 e0       	ldi	r24, 0x01	; 1
			stop();
otherwise:
			state = DONE;
		}
	}
	return I2C_SUCCESS;
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	02 c0       	rjmp	.+4      	; 0x109c <_ZN3I2C5writeEPhh+0xe0>
    1098:	e8 81       	ld	r30, Y
int I2C::write (uint8_t * data, uint8_t size)
{

	copy_range(data, buffer, size);
	reset(size);
	while (state != DONE)
    109a:	c2 cf       	rjmp	.-124    	; 0x1020 <_ZN3I2C5writeEPhh+0x64>
    109c:	df 91       	pop	r29
otherwise:
			state = DONE;
		}
	}
	return I2C_SUCCESS;
}
    109e:	cf 91       	pop	r28
    10a0:	1f 91       	pop	r17
    10a2:	0f 91       	pop	r16
    10a4:	ff 90       	pop	r15
    10a6:	ef 90       	pop	r14
    10a8:	df 90       	pop	r13
    10aa:	cf 90       	pop	r12
    10ac:	bf 90       	pop	r11
    10ae:	af 90       	pop	r10
    10b0:	9f 90       	pop	r9
    10b2:	08 95       	ret

000010b4 <_ZN3I2C16verify_data_readEv>:
    10b4:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		fail();
}

void I2C::verify_data_read ()
{
	if (!interrupt_flag_set())
    10b8:	22 23       	and	r18, r18
    10ba:	fc f4       	brge	.+62     	; 0x10fa <_ZN3I2C16verify_data_readEv+0x46>
		return;
	bool last_byte = !(TWCR & (1 << TWEA));
    10bc:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
    10c0:	26 ff       	sbrs	r18, 6
    10c2:	03 c0       	rjmp	.+6      	; 0x10ca <_ZN3I2C16verify_data_readEv+0x16>
    10c4:	40 e5       	ldi	r20, 0x50	; 80
	State next_state = last_byte ? STOP : READ_BYTE;
    10c6:	65 e0       	ldi	r22, 0x05	; 5
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <_ZN3I2C16verify_data_readEv+0x1a>
void I2C::verify_data_read ()
{
	if (!interrupt_flag_set())
		return;
	bool last_byte = !(TWCR & (1 << TWEA));
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
    10ca:	48 e5       	ldi	r20, 0x58	; 88
	State next_state = last_byte ? STOP : READ_BYTE;
    10cc:	67 e0       	ldi	r22, 0x07	; 7
	return TWCR & (1 << TWINT);
}

bool check_status (uint8_t status)
{
	return (TWSR & 0xF8) == status;
    10ce:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if (!interrupt_flag_set())
		return;
	bool last_byte = !(TWCR & (1 << TWEA));
	uint8_t status = last_byte ? TW_MR_DATA_NACK : TW_MR_DATA_ACK;
	State next_state = last_byte ? STOP : READ_BYTE;
	if (check_status(status))
    10d2:	28 7f       	andi	r18, 0xF8	; 248
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	24 17       	cp	r18, r20
    10da:	35 07       	cpc	r19, r21
    10dc:	69 f4       	brne	.+26     	; 0x10f8 <_ZN3I2C16verify_data_readEv+0x44>
	{
		buffer[index++] = TWDR;
    10de:	fc 01       	movw	r30, r24
    10e0:	24 85       	ldd	r18, Z+12	; 0x0c
    10e2:	31 e0       	ldi	r19, 0x01	; 1
    10e4:	32 0f       	add	r19, r18
    10e6:	34 87       	std	Z+12, r19	; 0x0c
    10e8:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    10ec:	e2 0f       	add	r30, r18
    10ee:	f1 1d       	adc	r31, r1
    10f0:	32 83       	std	Z+2, r19	; 0x02
		state = next_state;
    10f2:	fc 01       	movw	r30, r24
    10f4:	60 83       	st	Z, r22
    10f6:	08 95       	ret
	}
	else
		fail();
    10f8:	0a cf       	rjmp	.-492    	; 0xf0e <_ZN3I2C4failEv>
    10fa:	08 95       	ret

000010fc <_ZN3I2C4readEPhh>:
	}
	return I2C_SUCCESS;
}

int I2C::read (uint8_t * data, uint8_t size)
{
    10fc:	bf 92       	push	r11
    10fe:	cf 92       	push	r12
    1100:	df 92       	push	r13
    1102:	ef 92       	push	r14
    1104:	ff 92       	push	r15
    1106:	0f 93       	push	r16
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	ec 01       	movw	r28, r24
    1110:	7b 01       	movw	r14, r22
    1112:	c4 2e       	mov	r12, r20

/*------------------------ Internal Helper Functions -------------------------*/

void I2C::reset (uint8_t size)
{
	TWBR = (uint8_t)TWBR_VALUE;
    1114:	88 e4       	ldi	r24, 0x48	; 72
    1116:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	this->size = size;
    111a:	4d 87       	std	Y+13, r20	; 0x0d
	index = 0;
    111c:	1c 86       	std	Y+12, r1	; 0x0c
	fail_count = 0;
    111e:	1e 86       	std	Y+14, r1	; 0x0e
	state = START;
    1120:	18 82       	st	Y, r1
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    1122:	e0 e0       	ldi	r30, 0x00	; 0
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    1124:	0c eb       	ldi	r16, 0xBC	; 188
    1126:	10 e0       	ldi	r17, 0x00	; 0
    1128:	0f 2e       	mov	r0, r31
    112a:	f4 ee       	ldi	r31, 0xE4	; 228
    112c:	bf 2e       	mov	r11, r31
    112e:	f0 2d       	mov	r31, r0
	state = VERIFY_START;
    1130:	dd 24       	eor	r13, r13
    1132:	d3 94       	inc	r13
    1134:	03 c0       	rjmp	.+6      	; 0x113c <_ZN3I2C4readEPhh+0x40>
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    1136:	e8 81       	ld	r30, Y
    1138:	e8 30       	cpi	r30, 0x08	; 8
    113a:	51 f1       	breq	.+84     	; 0x1190 <_ZN3I2C4readEPhh+0x94>
	{
		if (fail_count >= MAX_FAIL_COUNT)
    113c:	8e 85       	ldd	r24, Y+14	; 0x0e
    113e:	85 30       	cpi	r24, 0x05	; 5
    1140:	78 f5       	brcc	.+94     	; 0x11a0 <_ZN3I2C4readEPhh+0xa4>
			return I2C_FAILURE;
		switch (state)
    1142:	8e 2f       	mov	r24, r30
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	88 30       	cpi	r24, 0x08	; 8
    1148:	91 05       	cpc	r25, r1
    114a:	00 f5       	brcc	.+64     	; 0x118c <_ZN3I2C4readEPhh+0x90>
    114c:	fc 01       	movw	r30, r24
    114e:	e0 57       	subi	r30, 0x70	; 112
    1150:	ff 4f       	sbci	r31, 0xFF	; 255
    1152:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__tablejump2__>
	state = START;
}

void I2C::start ()
{
	TWCR = (1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    1156:	f8 01       	movw	r30, r16
    1158:	b0 82       	st	Z, r11
	state = VERIFY_START;
    115a:	d8 82       	st	Y, r13
}

int I2C::read (uint8_t * data, uint8_t size)
{
	reset(size);
	while (state != DONE)
    115c:	ed 2d       	mov	r30, r13
    115e:	ee cf       	rjmp	.-36     	; 0x113c <_ZN3I2C4readEPhh+0x40>
		switch (state)
		{
		case START:
			start();
when VERIFY_START:
			verify_start();
    1160:	ce 01       	movw	r24, r28
    1162:	e3 de       	rcall	.-570    	; 0xf2a <_ZN3I2C12verify_startEv>
when SEND_ADDRESS:
    1164:	e8 cf       	rjmp	.-48     	; 0x1136 <_ZN3I2C4readEPhh+0x3a>
			send_address(READ);
    1166:	60 e0       	ldi	r22, 0x00	; 0
    1168:	ce 01       	movw	r24, r28
    116a:	a8 de       	rcall	.-688    	; 0xebc <_ZN3I2C12send_addressENS_9DirectionE>
when VERIFY_ADDRESS:
			verify_read_address_sent();
    116c:	e4 cf       	rjmp	.-56     	; 0x1136 <_ZN3I2C4readEPhh+0x3a>
    116e:	ce 01       	movw	r24, r28
when READ_BYTE:
    1170:	fc de       	rcall	.-520    	; 0xf6a <_ZN3I2C24verify_read_address_sentEv>
			read_data_byte();
    1172:	e1 cf       	rjmp	.-62     	; 0x1136 <_ZN3I2C4readEPhh+0x3a>
    1174:	ce 01       	movw	r24, r28
when VERIFY_DATA:
    1176:	b5 de       	rcall	.-662    	; 0xee2 <_ZN3I2C14read_data_byteEv>
			verify_data_read();
    1178:	de cf       	rjmp	.-68     	; 0x1136 <_ZN3I2C4readEPhh+0x3a>
    117a:	ce 01       	movw	r24, r28
    117c:	9b df       	rcall	.-202    	; 0x10b4 <_ZN3I2C16verify_data_readEv>
when STOP:
    117e:	db cf       	rjmp	.-74     	; 0x1136 <_ZN3I2C4readEPhh+0x3a>
		fail();
}

void I2C::stop ()
{
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    1180:	84 e9       	ldi	r24, 0x94	; 148
    1182:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	state = DONE;
    1186:	88 e0       	ldi	r24, 0x08	; 8
    1188:	88 83       	st	Y, r24
    118a:	02 c0       	rjmp	.+4      	; 0x1190 <_ZN3I2C4readEPhh+0x94>
when VERIFY_DATA:
			verify_data_read();
when STOP:
			stop();
otherwise:
			state = DONE;
    118c:	88 e0       	ldi	r24, 0x08	; 8
		}
	}
	copy_range(buffer, data, size);
    118e:	88 83       	st	Y, r24
    1190:	4c 2d       	mov	r20, r12
    1192:	b7 01       	movw	r22, r14
    1194:	ce 01       	movw	r24, r28
    1196:	02 96       	adiw	r24, 0x02	; 2
    1198:	80 de       	rcall	.-768    	; 0xe9a <_Z10copy_rangePhS_h>
	return I2C_SUCCESS;
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	02 c0       	rjmp	.+4      	; 0x11a4 <_ZN3I2C4readEPhh+0xa8>
{
	reset(size);
	while (state != DONE)
	{
		if (fail_count >= MAX_FAIL_COUNT)
			return I2C_FAILURE;
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	90 e0       	ldi	r25, 0x00	; 0
			state = DONE;
		}
	}
	copy_range(buffer, data, size);
	return I2C_SUCCESS;
}
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	1f 91       	pop	r17
    11aa:	0f 91       	pop	r16
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	df 90       	pop	r13
    11b2:	cf 90       	pop	r12
    11b4:	bf 90       	pop	r11
    11b6:	08 95       	ret

000011b8 <_ZN5I2CIOC1Ev>:
	Wire.read (&receivedVal,1 );
	retVal = ( _dirMask &  receivedVal);

//	}
	return ( retVal );
}
    11b8:	fc 01       	movw	r30, r24
    11ba:	12 82       	std	Z+2, r1	; 0x02
    11bc:	8f ef       	ldi	r24, 0xFF	; 255
    11be:	81 83       	std	Z+1, r24	; 0x01
    11c0:	10 82       	st	Z, r1
    11c2:	13 82       	std	Z+3, r1	; 0x03
    11c4:	08 95       	ret

000011c6 <_ZN5I2CIO5beginEh>:
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	ec 01       	movw	r28, r24
    11cc:	6a 83       	std	Y+2, r22	; 0x02
    11ce:	8e ea       	ldi	r24, 0xAE	; 174
    11d0:	93 e0       	ldi	r25, 0x03	; 3
    11d2:	70 de       	rcall	.-800    	; 0xeb4 <_ZN3I2C11set_addressEh>
    11d4:	41 e0       	ldi	r20, 0x01	; 1
    11d6:	be 01       	movw	r22, r28
    11d8:	8e ea       	ldi	r24, 0xAE	; 174
    11da:	93 e0       	ldi	r25, 0x03	; 3
    11dc:	8f df       	rcall	.-226    	; 0x10fc <_ZN3I2C4readEPhh>
    11de:	88 83       	st	Y, r24
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	08 95       	ret

000011ea <_ZN5I2CIO8portModeEh>:
    11ea:	61 11       	cpse	r22, r1
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <_ZN5I2CIO8portModeEh+0xc>
    11ee:	2f ef       	ldi	r18, 0xFF	; 255
    11f0:	fc 01       	movw	r30, r24
    11f2:	21 83       	std	Z+1, r18	; 0x01
    11f4:	08 95       	ret
    11f6:	fc 01       	movw	r30, r24
    11f8:	11 82       	std	Z+1, r1	; 0x01
    11fa:	08 95       	ret

000011fc <_ZN5I2CIO5writeEh>:
	// outputs updating the output shadow of the device

	//
	// 15-FEB-2018 - fix, all I/Os initialized as input must be written as HIGH
	//    _shadow = ( value & ~(_dirMask) );
	_shadow = ( value | _dirMask );
    11fc:	fc 01       	movw	r30, r24
    11fe:	21 81       	ldd	r18, Z+1	; 0x01
    1200:	62 2b       	or	r22, r18
    1202:	60 83       	st	Z, r22


	Wire.write ( &_shadow,1 );
    1204:	41 e0       	ldi	r20, 0x01	; 1
    1206:	bc 01       	movw	r22, r24
    1208:	8e ea       	ldi	r24, 0xAE	; 174
    120a:	93 e0       	ldi	r25, 0x03	; 3
    120c:	d7 de       	rcall	.-594    	; 0xfbc <_ZN3I2C5writeEPhh>

//	}
	return ( (status == 0) );
}
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	08 95       	ret

00001214 <_ZN3LCD15setBacklightPinEh14t_backlightPol>:
    1214:	08 95       	ret

00001216 <_ZN3LCD12setBacklightEh>:
    1216:	08 95       	ret

00001218 <_ZN3LCD4sendEhh>:
    1218:	08 95       	ret

0000121a <_ZN3LCD5writeEh>:
    121a:	dc 01       	movw	r26, r24
    121c:	ed 91       	ld	r30, X+
    121e:	fc 91       	ld	r31, X
    1220:	00 84       	ldd	r0, Z+8	; 0x08
    1222:	f1 85       	ldd	r31, Z+9	; 0x09
    1224:	e0 2d       	mov	r30, r0
    1226:	41 e0       	ldi	r20, 0x01	; 1
    1228:	09 95       	icall
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	08 95       	ret

00001230 <_ZN3LCDC1Ev>:
    1230:	23 e8       	ldi	r18, 0x83	; 131
    1232:	32 e0       	ldi	r19, 0x02	; 2
    1234:	fc 01       	movw	r30, r24
    1236:	31 83       	std	Z+1, r19	; 0x01
    1238:	20 83       	st	Z, r18
    123a:	08 95       	ret

0000123c <_ZN3LCD9backlightEv>:
    123c:	dc 01       	movw	r26, r24
    123e:	ed 91       	ld	r30, X+
    1240:	fc 91       	ld	r31, X
    1242:	04 80       	ldd	r0, Z+4	; 0x04
    1244:	f5 81       	ldd	r31, Z+5	; 0x05
    1246:	e0 2d       	mov	r30, r0
    1248:	6f ef       	ldi	r22, 0xFF	; 255
    124a:	09 95       	icall
    124c:	08 95       	ret

0000124e <_ZN3LCD7commandEh>:
    124e:	dc 01       	movw	r26, r24
    1250:	ed 91       	ld	r30, X+
    1252:	fc 91       	ld	r31, X
    1254:	00 84       	ldd	r0, Z+8	; 0x08
    1256:	f1 85       	ldd	r31, Z+9	; 0x09
    1258:	e0 2d       	mov	r30, r0
    125a:	40 e0       	ldi	r20, 0x00	; 0
    125c:	09 95       	icall
    125e:	08 95       	ret

00001260 <_ZN3LCD5clearEv>:
    1260:	61 e0       	ldi	r22, 0x01	; 1
    1262:	f5 df       	rcall	.-22     	; 0x124e <_ZN3LCD7commandEh>
    1264:	8f e3       	ldi	r24, 0x3F	; 63
    1266:	9f e1       	ldi	r25, 0x1F	; 31
    1268:	01 97       	sbiw	r24, 0x01	; 1
    126a:	f1 f7       	brne	.-4      	; 0x1268 <_ZN3LCD5clearEv+0x8>
    126c:	00 c0       	rjmp	.+0      	; 0x126e <_ZN3LCD5clearEv+0xe>
    126e:	00 00       	nop
    1270:	08 95       	ret

00001272 <_ZN3LCD9setCursorEhh>:
    1272:	cf 93       	push	r28
    1274:	df 93       	push	r29
    1276:	cd b7       	in	r28, 0x3d	; 61
    1278:	de b7       	in	r29, 0x3e	; 62
    127a:	28 97       	sbiw	r28, 0x08	; 8
    127c:	0f b6       	in	r0, 0x3f	; 63
    127e:	f8 94       	cli
    1280:	de bf       	out	0x3e, r29	; 62
    1282:	0f be       	out	0x3f, r0	; 63
    1284:	cd bf       	out	0x3d, r28	; 61
    1286:	fc 01       	movw	r30, r24
    1288:	19 82       	std	Y+1, r1	; 0x01
    128a:	80 e4       	ldi	r24, 0x40	; 64
    128c:	8a 83       	std	Y+2, r24	; 0x02
    128e:	94 e1       	ldi	r25, 0x14	; 20
    1290:	9b 83       	std	Y+3, r25	; 0x03
    1292:	94 e5       	ldi	r25, 0x54	; 84
    1294:	9c 83       	std	Y+4, r25	; 0x04
    1296:	1d 82       	std	Y+5, r1	; 0x05
    1298:	8e 83       	std	Y+6, r24	; 0x06
    129a:	80 e1       	ldi	r24, 0x10	; 16
    129c:	8f 83       	std	Y+7, r24	; 0x07
    129e:	80 e5       	ldi	r24, 0x50	; 80
    12a0:	88 87       	std	Y+8, r24	; 0x08
    12a2:	85 81       	ldd	r24, Z+5	; 0x05
    12a4:	48 17       	cp	r20, r24
    12a6:	10 f0       	brcs	.+4      	; 0x12ac <_ZN3LCD9setCursorEhh+0x3a>
    12a8:	4f ef       	ldi	r20, 0xFF	; 255
    12aa:	48 0f       	add	r20, r24
    12ac:	96 81       	ldd	r25, Z+6	; 0x06
    12ae:	90 31       	cpi	r25, 0x10	; 16
    12b0:	61 f4       	brne	.+24     	; 0x12ca <_ZN3LCD9setCursorEhh+0x58>
    12b2:	84 30       	cpi	r24, 0x04	; 4
    12b4:	51 f4       	brne	.+20     	; 0x12ca <_ZN3LCD9setCursorEhh+0x58>
    12b6:	de 01       	movw	r26, r28
    12b8:	a4 0f       	add	r26, r20
    12ba:	b1 1d       	adc	r27, r1
    12bc:	15 96       	adiw	r26, 0x05	; 5
    12be:	8c 91       	ld	r24, X
    12c0:	68 0f       	add	r22, r24
    12c2:	60 68       	ori	r22, 0x80	; 128
    12c4:	cf 01       	movw	r24, r30
    12c6:	c3 df       	rcall	.-122    	; 0x124e <_ZN3LCD7commandEh>
    12c8:	09 c0       	rjmp	.+18     	; 0x12dc <_ZN3LCD9setCursorEhh+0x6a>
    12ca:	de 01       	movw	r26, r28
    12cc:	a4 0f       	add	r26, r20
    12ce:	b1 1d       	adc	r27, r1
    12d0:	11 96       	adiw	r26, 0x01	; 1
    12d2:	9c 91       	ld	r25, X
    12d4:	69 0f       	add	r22, r25
    12d6:	60 68       	ori	r22, 0x80	; 128
    12d8:	cf 01       	movw	r24, r30
    12da:	b9 df       	rcall	.-142    	; 0x124e <_ZN3LCD7commandEh>
    12dc:	28 96       	adiw	r28, 0x08	; 8
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	f8 94       	cli
    12e2:	de bf       	out	0x3e, r29	; 62
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	cd bf       	out	0x3d, r28	; 61
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	08 95       	ret

000012ee <_ZN3LCD7displayEv>:
    12ee:	fc 01       	movw	r30, r24
    12f0:	63 81       	ldd	r22, Z+3	; 0x03
    12f2:	26 2f       	mov	r18, r22
    12f4:	24 60       	ori	r18, 0x04	; 4
    12f6:	23 83       	std	Z+3, r18	; 0x03
    12f8:	6c 60       	ori	r22, 0x0C	; 12
    12fa:	a9 cf       	rjmp	.-174    	; 0x124e <_ZN3LCD7commandEh>
    12fc:	08 95       	ret

000012fe <_ZN3LCD5beginEhhh>:
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	ec 01       	movw	r28, r24
    1304:	42 30       	cpi	r20, 0x02	; 2
    1306:	18 f0       	brcs	.+6      	; 0x130e <_ZN3LCD5beginEhhh+0x10>
    1308:	8a 81       	ldd	r24, Y+2	; 0x02
    130a:	88 60       	ori	r24, 0x08	; 8
    130c:	8a 83       	std	Y+2, r24	; 0x02
    130e:	4d 83       	std	Y+5, r20	; 0x05
    1310:	6e 83       	std	Y+6, r22	; 0x06
    1312:	22 23       	and	r18, r18
    1314:	29 f0       	breq	.+10     	; 0x1320 <_ZN3LCD5beginEhhh+0x22>
    1316:	41 30       	cpi	r20, 0x01	; 1
    1318:	19 f4       	brne	.+6      	; 0x1320 <_ZN3LCD5beginEhhh+0x22>
    131a:	8a 81       	ldd	r24, Y+2	; 0x02
    131c:	84 60       	ori	r24, 0x04	; 4
    131e:	8a 83       	std	Y+2, r24	; 0x02
    1320:	2f ef       	ldi	r18, 0xFF	; 255
    1322:	81 ee       	ldi	r24, 0xE1	; 225
    1324:	94 e0       	ldi	r25, 0x04	; 4
    1326:	21 50       	subi	r18, 0x01	; 1
    1328:	80 40       	sbci	r24, 0x00	; 0
    132a:	90 40       	sbci	r25, 0x00	; 0
    132c:	e1 f7       	brne	.-8      	; 0x1326 <_ZN3LCD5beginEhhh+0x28>
    132e:	00 c0       	rjmp	.+0      	; 0x1330 <_ZN3LCD5beginEhhh+0x32>
    1330:	00 00       	nop
    1332:	6a 81       	ldd	r22, Y+2	; 0x02
    1334:	64 fd       	sbrc	r22, 4
    1336:	3d c0       	rjmp	.+122    	; 0x13b2 <_ZN3LCD5beginEhhh+0xb4>
    1338:	e8 81       	ld	r30, Y
    133a:	f9 81       	ldd	r31, Y+1	; 0x01
    133c:	00 84       	ldd	r0, Z+8	; 0x08
    133e:	f1 85       	ldd	r31, Z+9	; 0x09
    1340:	e0 2d       	mov	r30, r0
    1342:	42 e0       	ldi	r20, 0x02	; 2
    1344:	63 e0       	ldi	r22, 0x03	; 3
    1346:	ce 01       	movw	r24, r28
    1348:	09 95       	icall
    134a:	8f e4       	ldi	r24, 0x4F	; 79
    134c:	96 e4       	ldi	r25, 0x46	; 70
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	f1 f7       	brne	.-4      	; 0x134e <_ZN3LCD5beginEhhh+0x50>
    1352:	00 c0       	rjmp	.+0      	; 0x1354 <_ZN3LCD5beginEhhh+0x56>
    1354:	00 00       	nop
    1356:	e8 81       	ld	r30, Y
    1358:	f9 81       	ldd	r31, Y+1	; 0x01
    135a:	00 84       	ldd	r0, Z+8	; 0x08
    135c:	f1 85       	ldd	r31, Z+9	; 0x09
    135e:	e0 2d       	mov	r30, r0
    1360:	42 e0       	ldi	r20, 0x02	; 2
    1362:	63 e0       	ldi	r22, 0x03	; 3
    1364:	ce 01       	movw	r24, r28
    1366:	09 95       	icall
    1368:	87 e5       	ldi	r24, 0x57	; 87
    136a:	92 e0       	ldi	r25, 0x02	; 2
    136c:	01 97       	sbiw	r24, 0x01	; 1
    136e:	f1 f7       	brne	.-4      	; 0x136c <_ZN3LCD5beginEhhh+0x6e>
    1370:	00 c0       	rjmp	.+0      	; 0x1372 <_ZN3LCD5beginEhhh+0x74>
    1372:	00 00       	nop
    1374:	e8 81       	ld	r30, Y
    1376:	f9 81       	ldd	r31, Y+1	; 0x01
    1378:	00 84       	ldd	r0, Z+8	; 0x08
    137a:	f1 85       	ldd	r31, Z+9	; 0x09
    137c:	e0 2d       	mov	r30, r0
    137e:	42 e0       	ldi	r20, 0x02	; 2
    1380:	63 e0       	ldi	r22, 0x03	; 3
    1382:	ce 01       	movw	r24, r28
    1384:	09 95       	icall
    1386:	87 e5       	ldi	r24, 0x57	; 87
    1388:	92 e0       	ldi	r25, 0x02	; 2
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	f1 f7       	brne	.-4      	; 0x138a <_ZN3LCD5beginEhhh+0x8c>
    138e:	00 c0       	rjmp	.+0      	; 0x1390 <_ZN3LCD5beginEhhh+0x92>
    1390:	00 00       	nop
    1392:	e8 81       	ld	r30, Y
    1394:	f9 81       	ldd	r31, Y+1	; 0x01
    1396:	00 84       	ldd	r0, Z+8	; 0x08
    1398:	f1 85       	ldd	r31, Z+9	; 0x09
    139a:	e0 2d       	mov	r30, r0
    139c:	42 e0       	ldi	r20, 0x02	; 2
    139e:	62 e0       	ldi	r22, 0x02	; 2
    13a0:	ce 01       	movw	r24, r28
    13a2:	09 95       	icall
    13a4:	87 e5       	ldi	r24, 0x57	; 87
    13a6:	92 e0       	ldi	r25, 0x02	; 2
    13a8:	01 97       	sbiw	r24, 0x01	; 1
    13aa:	f1 f7       	brne	.-4      	; 0x13a8 <_ZN3LCD5beginEhhh+0xaa>
    13ac:	00 c0       	rjmp	.+0      	; 0x13ae <_ZN3LCD5beginEhhh+0xb0>
    13ae:	00 00       	nop
    13b0:	1d c0       	rjmp	.+58     	; 0x13ec <_ZN3LCD5beginEhhh+0xee>
    13b2:	60 62       	ori	r22, 0x20	; 32
    13b4:	ce 01       	movw	r24, r28
    13b6:	4b df       	rcall	.-362    	; 0x124e <_ZN3LCD7commandEh>
    13b8:	8f e4       	ldi	r24, 0x4F	; 79
    13ba:	96 e4       	ldi	r25, 0x46	; 70
    13bc:	01 97       	sbiw	r24, 0x01	; 1
    13be:	f1 f7       	brne	.-4      	; 0x13bc <_ZN3LCD5beginEhhh+0xbe>
    13c0:	00 c0       	rjmp	.+0      	; 0x13c2 <_ZN3LCD5beginEhhh+0xc4>
    13c2:	00 00       	nop
    13c4:	6a 81       	ldd	r22, Y+2	; 0x02
    13c6:	60 62       	ori	r22, 0x20	; 32
    13c8:	ce 01       	movw	r24, r28
    13ca:	41 df       	rcall	.-382    	; 0x124e <_ZN3LCD7commandEh>
    13cc:	87 e5       	ldi	r24, 0x57	; 87
    13ce:	92 e0       	ldi	r25, 0x02	; 2
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	f1 f7       	brne	.-4      	; 0x13d0 <_ZN3LCD5beginEhhh+0xd2>
    13d4:	00 c0       	rjmp	.+0      	; 0x13d6 <_ZN3LCD5beginEhhh+0xd8>
    13d6:	00 00       	nop
    13d8:	6a 81       	ldd	r22, Y+2	; 0x02
    13da:	60 62       	ori	r22, 0x20	; 32
    13dc:	ce 01       	movw	r24, r28
    13de:	37 df       	rcall	.-402    	; 0x124e <_ZN3LCD7commandEh>
    13e0:	87 e5       	ldi	r24, 0x57	; 87
    13e2:	92 e0       	ldi	r25, 0x02	; 2
    13e4:	01 97       	sbiw	r24, 0x01	; 1
    13e6:	f1 f7       	brne	.-4      	; 0x13e4 <_ZN3LCD5beginEhhh+0xe6>
    13e8:	00 c0       	rjmp	.+0      	; 0x13ea <_ZN3LCD5beginEhhh+0xec>
    13ea:	00 00       	nop
    13ec:	6a 81       	ldd	r22, Y+2	; 0x02
    13ee:	60 62       	ori	r22, 0x20	; 32
    13f0:	ce 01       	movw	r24, r28
    13f2:	2d df       	rcall	.-422    	; 0x124e <_ZN3LCD7commandEh>
    13f4:	8f ee       	ldi	r24, 0xEF	; 239
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	01 97       	sbiw	r24, 0x01	; 1
    13fa:	f1 f7       	brne	.-4      	; 0x13f8 <_ZN3LCD5beginEhhh+0xfa>
    13fc:	00 c0       	rjmp	.+0      	; 0x13fe <_ZN3LCD5beginEhhh+0x100>
    13fe:	00 00       	nop
    1400:	84 e0       	ldi	r24, 0x04	; 4
    1402:	8b 83       	std	Y+3, r24	; 0x03
    1404:	ce 01       	movw	r24, r28
    1406:	73 df       	rcall	.-282    	; 0x12ee <_ZN3LCD7displayEv>
    1408:	ce 01       	movw	r24, r28
    140a:	2a df       	rcall	.-428    	; 0x1260 <_ZN3LCD5clearEv>
    140c:	82 e0       	ldi	r24, 0x02	; 2
    140e:	8c 83       	std	Y+4, r24	; 0x04
    1410:	66 e0       	ldi	r22, 0x06	; 6
    1412:	ce 01       	movw	r24, r28
    1414:	1c df       	rcall	.-456    	; 0x124e <_ZN3LCD7commandEh>
    1416:	ce 01       	movw	r24, r28
    1418:	11 df       	rcall	.-478    	; 0x123c <_ZN3LCD9backlightEv>
    141a:	df 91       	pop	r29
    141c:	cf 91       	pop	r28
    141e:	08 95       	ret

00001420 <_ZN3LCD5printEPKc>:
    1420:	cf 92       	push	r12
    1422:	df 92       	push	r13
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	8c 01       	movw	r16, r24
    1432:	db 01       	movw	r26, r22
    1434:	9c 91       	ld	r25, X
    1436:	99 23       	and	r25, r25
    1438:	01 f1       	breq	.+64     	; 0x147a <_ZN3LCD5printEPKc+0x5a>
    143a:	eb 01       	movw	r28, r22
    143c:	0f 2e       	mov	r0, r31
    143e:	f1 e7       	ldi	r31, 0x71	; 113
    1440:	ef 2e       	mov	r14, r31
    1442:	f2 e0       	ldi	r31, 0x02	; 2
    1444:	ff 2e       	mov	r15, r31
    1446:	f0 2d       	mov	r31, r0
    1448:	6e 01       	movw	r12, r28
    144a:	df 93       	push	r29
    144c:	cf 93       	push	r28
    144e:	ff 92       	push	r15
    1450:	ef 92       	push	r14
    1452:	0e 94 f8 14 	call	0x29f0	; 0x29f0 <printf>
    1456:	21 96       	adiw	r28, 0x01	; 1
    1458:	d8 01       	movw	r26, r16
    145a:	ed 91       	ld	r30, X+
    145c:	fc 91       	ld	r31, X
    145e:	06 80       	ldd	r0, Z+6	; 0x06
    1460:	f7 81       	ldd	r31, Z+7	; 0x07
    1462:	e0 2d       	mov	r30, r0
    1464:	d6 01       	movw	r26, r12
    1466:	6c 91       	ld	r22, X
    1468:	c8 01       	movw	r24, r16
    146a:	09 95       	icall
    146c:	0f 90       	pop	r0
    146e:	0f 90       	pop	r0
    1470:	0f 90       	pop	r0
    1472:	0f 90       	pop	r0
    1474:	88 81       	ld	r24, Y
    1476:	81 11       	cpse	r24, r1
    1478:	e7 cf       	rjmp	.-50     	; 0x1448 <_ZN3LCD5printEPKc+0x28>
    147a:	df 91       	pop	r29
    147c:	cf 91       	pop	r28
    147e:	1f 91       	pop	r17
    1480:	0f 91       	pop	r16
    1482:	ff 90       	pop	r15
    1484:	ef 90       	pop	r14
    1486:	df 90       	pop	r13
    1488:	cf 90       	pop	r12
    148a:	08 95       	ret

0000148c <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol>:
	// Initialise pin mapping
	_data_pins[0] = ( 1 << d4 );
	_data_pins[1] = ( 1 << d5 );
	_data_pins[2] = ( 1 << d6 );
	_data_pins[3] = ( 1 << d7 );
}
    148c:	21 e0       	ldi	r18, 0x01	; 1
    148e:	01 c0       	rjmp	.+2      	; 0x1492 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol+0x6>
    1490:	22 0f       	add	r18, r18
    1492:	6a 95       	dec	r22
    1494:	ea f7       	brpl	.-6      	; 0x1490 <_ZN17LiquidCrystal_I2C15setBacklightPinEh14t_backlightPol+0x4>
    1496:	dc 01       	movw	r26, r24
    1498:	19 96       	adiw	r26, 0x09	; 9
    149a:	2c 93       	st	X, r18
    149c:	19 97       	sbiw	r26, 0x09	; 9
    149e:	17 96       	adiw	r26, 0x07	; 7
    14a0:	4c 93       	st	X, r20
    14a2:	17 97       	sbiw	r26, 0x07	; 7
    14a4:	ed 91       	ld	r30, X+
    14a6:	fc 91       	ld	r31, X
    14a8:	04 80       	ldd	r0, Z+4	; 0x04
    14aa:	f5 81       	ldd	r31, Z+5	; 0x05
    14ac:	e0 2d       	mov	r30, r0
    14ae:	60 e0       	ldi	r22, 0x00	; 0
    14b0:	09 95       	icall
    14b2:	08 95       	ret

000014b4 <_ZN17LiquidCrystal_I2C12setBacklightEh>:
    14b4:	fc 01       	movw	r30, r24
    14b6:	81 85       	ldd	r24, Z+9	; 0x09
    14b8:	88 23       	and	r24, r24
    14ba:	89 f0       	breq	.+34     	; 0x14de <_ZN17LiquidCrystal_I2C12setBacklightEh+0x2a>
    14bc:	97 81       	ldd	r25, Z+7	; 0x07
    14be:	91 11       	cpse	r25, r1
    14c0:	03 c0       	rjmp	.+6      	; 0x14c8 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x14>
    14c2:	61 11       	cpse	r22, r1
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x1c>
    14c6:	06 c0       	rjmp	.+12     	; 0x14d4 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    14c8:	91 30       	cpi	r25, 0x01	; 1
    14ca:	21 f4       	brne	.+8      	; 0x14d4 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    14cc:	61 11       	cpse	r22, r1
    14ce:	02 c0       	rjmp	.+4      	; 0x14d4 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x20>
    14d0:	82 87       	std	Z+10, r24	; 0x0a
    14d2:	01 c0       	rjmp	.+2      	; 0x14d6 <_ZN17LiquidCrystal_I2C12setBacklightEh+0x22>
    14d4:	12 86       	std	Z+10, r1	; 0x0a
    14d6:	62 85       	ldd	r22, Z+10	; 0x0a
    14d8:	cf 01       	movw	r24, r30
    14da:	0b 96       	adiw	r24, 0x0b	; 11
    14dc:	8f ce       	rjmp	.-738    	; 0x11fc <_ZN5I2CIO5writeEh>
    14de:	08 95       	ret

000014e0 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh>:
    14e0:	6f 92       	push	r6
    14e2:	7f 92       	push	r7
    14e4:	8f 92       	push	r8
    14e6:	af 92       	push	r10
    14e8:	cf 92       	push	r12
    14ea:	df 92       	push	r13
    14ec:	ef 92       	push	r14
    14ee:	ff 92       	push	r15
    14f0:	0f 93       	push	r16
    14f2:	1f 93       	push	r17
    14f4:	cf 93       	push	r28
    14f6:	df 93       	push	r29
    14f8:	cd b7       	in	r28, 0x3d	; 61
    14fa:	de b7       	in	r29, 0x3e	; 62
    14fc:	3c 01       	movw	r6, r24
    14fe:	d6 2e       	mov	r13, r22
    1500:	f4 2e       	mov	r15, r20
    1502:	12 2f       	mov	r17, r18
    1504:	95 de       	rcall	.-726    	; 0x1230 <_ZN3LCDC1Ev>
    1506:	81 e9       	ldi	r24, 0x91	; 145
    1508:	92 e0       	ldi	r25, 0x02	; 2
    150a:	f3 01       	movw	r30, r6
    150c:	91 83       	std	Z+1, r25	; 0x01
    150e:	80 83       	st	Z, r24
    1510:	c3 01       	movw	r24, r6
    1512:	0b 96       	adiw	r24, 0x0b	; 11
    1514:	51 de       	rcall	.-862    	; 0x11b8 <_ZN5I2CIOC1Ev>
    1516:	f3 01       	movw	r30, r6
    1518:	d0 86       	std	Z+8, r13	; 0x08
    151a:	11 86       	std	Z+9, r1	; 0x09
    151c:	12 86       	std	Z+10, r1	; 0x0a
    151e:	17 82       	std	Z+7, r1	; 0x07
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	98 2f       	mov	r25, r24
    1524:	01 c0       	rjmp	.+2      	; 0x1528 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x48>
    1526:	99 0f       	add	r25, r25
    1528:	fa 94       	dec	r15
    152a:	ea f7       	brpl	.-6      	; 0x1526 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x46>
    152c:	97 87       	std	Z+15, r25	; 0x0f
    152e:	98 2f       	mov	r25, r24
    1530:	01 c0       	rjmp	.+2      	; 0x1534 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x54>
    1532:	99 0f       	add	r25, r25
    1534:	1a 95       	dec	r17
    1536:	ea f7       	brpl	.-6      	; 0x1532 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x52>
    1538:	90 8b       	std	Z+16, r25	; 0x10
    153a:	98 2f       	mov	r25, r24
    153c:	01 c0       	rjmp	.+2      	; 0x1540 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x60>
    153e:	99 0f       	add	r25, r25
    1540:	0a 95       	dec	r16
    1542:	ea f7       	brpl	.-6      	; 0x153e <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x5e>
    1544:	91 8b       	std	Z+17, r25	; 0x11
    1546:	98 2f       	mov	r25, r24
    1548:	01 c0       	rjmp	.+2      	; 0x154c <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x6c>
    154a:	99 0f       	add	r25, r25
    154c:	ea 94       	dec	r14
    154e:	ea f7       	brpl	.-6      	; 0x154a <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x6a>
    1550:	92 8b       	std	Z+18, r25	; 0x12
    1552:	98 2f       	mov	r25, r24
    1554:	01 c0       	rjmp	.+2      	; 0x1558 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x78>
    1556:	99 0f       	add	r25, r25
    1558:	ca 94       	dec	r12
    155a:	ea f7       	brpl	.-6      	; 0x1556 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x76>
    155c:	93 8b       	std	Z+19, r25	; 0x13
    155e:	98 2f       	mov	r25, r24
    1560:	01 c0       	rjmp	.+2      	; 0x1564 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x84>
    1562:	99 0f       	add	r25, r25
    1564:	aa 94       	dec	r10
    1566:	ea f7       	brpl	.-6      	; 0x1562 <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x82>
    1568:	94 8b       	std	Z+20, r25	; 0x14
    156a:	01 c0       	rjmp	.+2      	; 0x156e <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x8e>
    156c:	88 0f       	add	r24, r24
    156e:	8a 94       	dec	r8
    1570:	ea f7       	brpl	.-6      	; 0x156c <_ZN17LiquidCrystal_I2CC1Ehhhhhhhh+0x8c>
    1572:	85 8b       	std	Z+21, r24	; 0x15
    1574:	df 91       	pop	r29
    1576:	cf 91       	pop	r28
    1578:	1f 91       	pop	r17
    157a:	0f 91       	pop	r16
    157c:	ff 90       	pop	r15
    157e:	ef 90       	pop	r14
    1580:	df 90       	pop	r13
    1582:	cf 90       	pop	r12
    1584:	af 90       	pop	r10
    1586:	8f 90       	pop	r8
    1588:	7f 90       	pop	r7
    158a:	6f 90       	pop	r6
    158c:	08 95       	ret

0000158e <_ZN17LiquidCrystal_I2C4initEv>:
    158e:	0f 93       	push	r16
    1590:	1f 93       	push	r17
    1592:	cf 93       	push	r28
    1594:	df 93       	push	r29
    1596:	ec 01       	movw	r28, r24
    1598:	8c 01       	movw	r16, r24
    159a:	05 5f       	subi	r16, 0xF5	; 245
    159c:	1f 4f       	sbci	r17, 0xFF	; 255
    159e:	68 85       	ldd	r22, Y+8	; 0x08
    15a0:	c8 01       	movw	r24, r16
    15a2:	11 de       	rcall	.-990    	; 0x11c6 <_ZN5I2CIO5beginEh>
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	51 f4       	brne	.+20     	; 0x15bc <_ZN17LiquidCrystal_I2C4initEv+0x2e>
    15a8:	61 e0       	ldi	r22, 0x01	; 1
    15aa:	c8 01       	movw	r24, r16
    15ac:	1e de       	rcall	.-964    	; 0x11ea <_ZN5I2CIO8portModeEh>
    15ae:	1a 82       	std	Y+2, r1	; 0x02
    15b0:	60 e0       	ldi	r22, 0x00	; 0
    15b2:	c8 01       	movw	r24, r16
    15b4:	23 de       	rcall	.-954    	; 0x11fc <_ZN5I2CIO5writeEh>
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	02 c0       	rjmp	.+4      	; 0x15c0 <_ZN17LiquidCrystal_I2C4initEv+0x32>
    15bc:	80 e0       	ldi	r24, 0x00	; 0
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	df 91       	pop	r29
    15c2:	cf 91       	pop	r28
    15c4:	1f 91       	pop	r17
    15c6:	0f 91       	pop	r16
    15c8:	08 95       	ret

000015ca <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
}

//
// pulseEnable
void LiquidCrystal_I2C::pulseEnable (uint8_t data)
{
    15ca:	ef 92       	push	r14
    15cc:	ff 92       	push	r15
    15ce:	0f 93       	push	r16
    15d0:	1f 93       	push	r17
    15d2:	cf 93       	push	r28
    15d4:	8c 01       	movw	r16, r24
    15d6:	c6 2f       	mov	r28, r22
	_i2cio.write (data | _En);   // En HIGH
    15d8:	7c 01       	movw	r14, r24
    15da:	8b e0       	ldi	r24, 0x0B	; 11
    15dc:	e8 0e       	add	r14, r24
    15de:	f1 1c       	adc	r15, r1
    15e0:	f8 01       	movw	r30, r16
    15e2:	67 85       	ldd	r22, Z+15	; 0x0f
    15e4:	6c 2b       	or	r22, r28
    15e6:	c7 01       	movw	r24, r14
    15e8:	09 de       	rcall	.-1006   	; 0x11fc <_ZN5I2CIO5writeEh>
	_i2cio.write (data & ~_En);  // En LOW
    15ea:	f8 01       	movw	r30, r16
    15ec:	67 85       	ldd	r22, Z+15	; 0x0f
    15ee:	60 95       	com	r22
    15f0:	6c 23       	and	r22, r28
    15f2:	c7 01       	movw	r24, r14
    15f4:	03 de       	rcall	.-1018   	; 0x11fc <_ZN5I2CIO5writeEh>
    15f6:	cf 91       	pop	r28
    15f8:	1f 91       	pop	r17
    15fa:	0f 91       	pop	r16
    15fc:	ff 90       	pop	r15
    15fe:	ef 90       	pop	r14
    1600:	08 95       	ret

00001602 <_ZN17LiquidCrystal_I2C10write4bitsEhh>:
}

//
// write4bits
void LiquidCrystal_I2C::write4bits ( uint8_t value, uint8_t mode )
{
    1602:	dc 01       	movw	r26, r24
    1604:	fc 01       	movw	r30, r24
    1606:	04 96       	adiw	r24, 0x04	; 4
	uint8_t pinMapValue = 0;
    1608:	20 e0       	ldi	r18, 0x00	; 0

	// Map the value to LCD pin mapping
	// --------------------------------
	for ( uint8_t i = 0; i < 4; i++ )
	{
		if ( ( value & 0x1 ) == 1 )
    160a:	60 ff       	sbrs	r22, 0
    160c:	02 c0       	rjmp	.+4      	; 0x1612 <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x10>
		{
			pinMapValue |= _data_pins[i];
    160e:	32 89       	ldd	r19, Z+18	; 0x12
    1610:	23 2b       	or	r18, r19
		}
		value = ( value >> 1 );
    1612:	66 95       	lsr	r22
    1614:	31 96       	adiw	r30, 0x01	; 1
{
	uint8_t pinMapValue = 0;

	// Map the value to LCD pin mapping
	// --------------------------------
	for ( uint8_t i = 0; i < 4; i++ )
    1616:	e8 17       	cp	r30, r24
    1618:	f9 07       	cpc	r31, r25
    161a:	b9 f7       	brne	.-18     	; 0x160a <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x8>
		value = ( value >> 1 );
	}

	// Is it a command or data
	// -----------------------
	if ( mode == LCD_DATA )
    161c:	41 30       	cpi	r20, 0x01	; 1
    161e:	19 f4       	brne	.+6      	; 0x1626 <_ZN17LiquidCrystal_I2C10write4bitsEhh+0x24>
	{
		mode = _Rs;
    1620:	51 96       	adiw	r26, 0x11	; 17
    1622:	4c 91       	ld	r20, X
    1624:	51 97       	sbiw	r26, 0x11	; 17
    1626:	1a 96       	adiw	r26, 0x0a	; 10
    1628:	9c 91       	ld	r25, X
    162a:	1a 97       	sbiw	r26, 0x0a	; 10
    162c:	62 2f       	mov	r22, r18
    162e:	69 2b       	or	r22, r25
	}

	pinMapValue |= mode | _backlightStsMask;
	pulseEnable ( pinMapValue );
    1630:	64 2b       	or	r22, r20
    1632:	cd 01       	movw	r24, r26
    1634:	ca cf       	rjmp	.-108    	; 0x15ca <_ZN17LiquidCrystal_I2C11pulseEnableEh>
    1636:	08 95       	ret

00001638 <_ZN17LiquidCrystal_I2C4sendEhh>:
//----------------------------------------------------------------------------

//
// send - write either command or data
void LiquidCrystal_I2C::send(uint8_t value, uint8_t mode)
{
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	8c 01       	movw	r16, r24
    1642:	c6 2f       	mov	r28, r22
    1644:	d4 2f       	mov	r29, r20
	// No need to use the delay routines since the time taken to write takes
	// longer that what is needed both for toggling and enable pin an to execute
	// the command.

	if ( mode == FOUR_BITS )
    1646:	42 30       	cpi	r20, 0x02	; 2
    1648:	21 f4       	brne	.+8      	; 0x1652 <_ZN17LiquidCrystal_I2C4sendEhh+0x1a>
	{
		write4bits( (value & 0x0F), COMMAND );
    164a:	6f 70       	andi	r22, 0x0F	; 15
    164c:	40 e0       	ldi	r20, 0x00	; 0
    164e:	d9 df       	rcall	.-78     	; 0x1602 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
    1650:	0f c0       	rjmp	.+30     	; 0x1670 <_ZN17LiquidCrystal_I2C4sendEhh+0x38>
	}
	else
	{
		write4bits( (value >> 4), mode );
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	75 95       	asr	r23
    1656:	67 95       	ror	r22
    1658:	75 95       	asr	r23
    165a:	67 95       	ror	r22
    165c:	75 95       	asr	r23
    165e:	67 95       	ror	r22
    1660:	75 95       	asr	r23
    1662:	67 95       	ror	r22
    1664:	ce df       	rcall	.-100    	; 0x1602 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
		write4bits( (value & 0x0F), mode);
    1666:	6c 2f       	mov	r22, r28
    1668:	6f 70       	andi	r22, 0x0F	; 15
    166a:	4d 2f       	mov	r20, r29
    166c:	c8 01       	movw	r24, r16
    166e:	c9 df       	rcall	.-110    	; 0x1602 <_ZN17LiquidCrystal_I2C10write4bitsEhh>
	}
}
    1670:	df 91       	pop	r29
    1672:	cf 91       	pop	r28
    1674:	1f 91       	pop	r17
    1676:	0f 91       	pop	r16
    1678:	08 95       	ret

0000167a <_ZN17LiquidCrystal_I2C5beginEhhh>:
// ---------------------------------------------------------------------------

//
// begin
void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize)
{
    167a:	ff 92       	push	r15
    167c:	0f 93       	push	r16
    167e:	1f 93       	push	r17
    1680:	cf 93       	push	r28
    1682:	df 93       	push	r29
    1684:	ec 01       	movw	r28, r24
    1686:	16 2f       	mov	r17, r22
    1688:	04 2f       	mov	r16, r20
    168a:	f2 2e       	mov	r15, r18

	init();     // Initialise the I2C expander interface
    168c:	80 df       	rcall	.-256    	; 0x158e <_ZN17LiquidCrystal_I2C4initEv>
	LCD::begin ( cols, lines, dotsize );
    168e:	2f 2d       	mov	r18, r15
    1690:	40 2f       	mov	r20, r16
    1692:	61 2f       	mov	r22, r17
    1694:	ce 01       	movw	r24, r28
    1696:	33 de       	rcall	.-922    	; 0x12fe <_ZN3LCD5beginEhhh>
}
    1698:	df 91       	pop	r29
    169a:	cf 91       	pop	r28
    169c:	1f 91       	pop	r17
    169e:	0f 91       	pop	r16
    16a0:	ff 90       	pop	r15
    16a2:	08 95       	ret

000016a4 <_ZN20Adafruit_LEDBackpack13setBrightnessEh>:

void  Adafruit_7segment::println(unsigned char b, int base)
{
	print(b, base);
	println();
}
    16a4:	60 31       	cpi	r22, 0x10	; 16
    16a6:	08 f0       	brcs	.+2      	; 0x16aa <_ZN20Adafruit_LEDBackpack13setBrightnessEh+0x6>
    16a8:	6f e0       	ldi	r22, 0x0F	; 15
    16aa:	60 6e       	ori	r22, 0xE0	; 224
    16ac:	fc 01       	movw	r30, r24
    16ae:	60 a3       	std	Z+32, r22	; 0x20
    16b0:	bc 01       	movw	r22, r24
    16b2:	60 5e       	subi	r22, 0xE0	; 224
    16b4:	7f 4f       	sbci	r23, 0xFF	; 255
    16b6:	41 e0       	ldi	r20, 0x01	; 1
    16b8:	41 96       	adiw	r24, 0x11	; 17
    16ba:	80 cc       	rjmp	.-1792   	; 0xfbc <_ZN3I2C5writeEPhh>
    16bc:	08 95       	ret

000016be <_ZN20Adafruit_LEDBackpack9blinkRateEh>:
    16be:	64 30       	cpi	r22, 0x04	; 4
    16c0:	08 f0       	brcs	.+2      	; 0x16c4 <_ZN20Adafruit_LEDBackpack9blinkRateEh+0x6>
    16c2:	60 e0       	ldi	r22, 0x00	; 0
    16c4:	66 0f       	add	r22, r22
    16c6:	61 68       	ori	r22, 0x81	; 129
    16c8:	fc 01       	movw	r30, r24
    16ca:	60 a3       	std	Z+32, r22	; 0x20
    16cc:	bc 01       	movw	r22, r24
    16ce:	60 5e       	subi	r22, 0xE0	; 224
    16d0:	7f 4f       	sbci	r23, 0xFF	; 255
    16d2:	41 e0       	ldi	r20, 0x01	; 1
    16d4:	41 96       	adiw	r24, 0x11	; 17
    16d6:	72 cc       	rjmp	.-1820   	; 0xfbc <_ZN3I2C5writeEPhh>
    16d8:	08 95       	ret

000016da <_ZN20Adafruit_LEDBackpack5beginEh>:
    16da:	cf 93       	push	r28
    16dc:	df 93       	push	r29
    16de:	ec 01       	movw	r28, r24
    16e0:	68 8b       	std	Y+16, r22	; 0x10
    16e2:	81 e2       	ldi	r24, 0x21	; 33
    16e4:	88 a3       	std	Y+32, r24	; 0x20
    16e6:	be 01       	movw	r22, r28
    16e8:	60 5e       	subi	r22, 0xE0	; 224
    16ea:	7f 4f       	sbci	r23, 0xFF	; 255
    16ec:	41 e0       	ldi	r20, 0x01	; 1
    16ee:	ce 01       	movw	r24, r28
    16f0:	41 96       	adiw	r24, 0x11	; 17
    16f2:	64 dc       	rcall	.-1848   	; 0xfbc <_ZN3I2C5writeEPhh>
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	ce 01       	movw	r24, r28
    16f8:	e2 df       	rcall	.-60     	; 0x16be <_ZN20Adafruit_LEDBackpack9blinkRateEh>
    16fa:	62 e0       	ldi	r22, 0x02	; 2
    16fc:	ce 01       	movw	r24, r28
    16fe:	d2 df       	rcall	.-92     	; 0x16a4 <_ZN20Adafruit_LEDBackpack13setBrightnessEh>
    1700:	df 91       	pop	r29
    1702:	cf 91       	pop	r28
    1704:	08 95       	ret

00001706 <_ZN20Adafruit_LEDBackpack12writeDisplayEv>:
    1706:	dc 01       	movw	r26, r24
    1708:	90 96       	adiw	r26, 0x20	; 32
    170a:	1c 92       	st	X, r1
    170c:	90 97       	sbiw	r26, 0x20	; 32
    170e:	fc 01       	movw	r30, r24
    1710:	ac 01       	movw	r20, r24
    1712:	40 5f       	subi	r20, 0xF0	; 240
    1714:	5f 4f       	sbci	r21, 0xFF	; 255
    1716:	20 81       	ld	r18, Z
    1718:	91 81       	ldd	r25, Z+1	; 0x01
    171a:	32 96       	adiw	r30, 0x02	; 2
    171c:	27 8f       	std	Z+31, r18	; 0x1f
    171e:	90 a3       	std	Z+32, r25	; 0x20
    1720:	e4 17       	cp	r30, r20
    1722:	f5 07       	cpc	r31, r21
    1724:	c1 f7       	brne	.-16     	; 0x1716 <_ZN20Adafruit_LEDBackpack12writeDisplayEv+0x10>
    1726:	bd 01       	movw	r22, r26
    1728:	60 5e       	subi	r22, 0xE0	; 224
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	41 e1       	ldi	r20, 0x11	; 17
    172e:	cd 01       	movw	r24, r26
    1730:	41 96       	adiw	r24, 0x11	; 17
    1732:	44 cc       	rjmp	.-1912   	; 0xfbc <_ZN3I2C5writeEPhh>
    1734:	08 95       	ret

00001736 <_ZN17Adafruit_7segmentC1Eh>:
    1736:	fc 01       	movw	r30, r24
    1738:	e0 5c       	subi	r30, 0xC0	; 192
    173a:	ff 4f       	sbci	r31, 0xFF	; 255
    173c:	10 82       	st	Z, r1
    173e:	41 96       	adiw	r24, 0x11	; 17
    1740:	b9 cb       	rjmp	.-2190   	; 0xeb4 <_ZN3I2C11set_addressEh>
    1742:	08 95       	ret

00001744 <_ZN17Adafruit_7segment13writeDigitNumEhhb>:
    1744:	65 30       	cpi	r22, 0x05	; 5
    1746:	98 f4       	brcc	.+38     	; 0x176e <_ZN17Adafruit_7segment13writeDigitNumEhhb+0x2a>
    1748:	70 e0       	ldi	r23, 0x00	; 0
    174a:	66 0f       	add	r22, r22
    174c:	77 1f       	adc	r23, r23
    174e:	fc 01       	movw	r30, r24
    1750:	e6 0f       	add	r30, r22
    1752:	f7 1f       	adc	r31, r23
    1754:	a4 2f       	mov	r26, r20
    1756:	b0 e0       	ldi	r27, 0x00	; 0
    1758:	a5 56       	subi	r26, 0x65	; 101
    175a:	bd 4f       	sbci	r27, 0xFD	; 253
    175c:	80 e8       	ldi	r24, 0x80	; 128
    175e:	28 9f       	mul	r18, r24
    1760:	90 01       	movw	r18, r0
    1762:	11 24       	eor	r1, r1
    1764:	8c 91       	ld	r24, X
    1766:	28 2b       	or	r18, r24
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	31 83       	std	Z+1, r19	; 0x01
    176c:	20 83       	st	Z, r18
    176e:	08 95       	ret

00001770 <_ZN17Adafruit_7segment5writeEh>:
    1770:	cf 93       	push	r28
    1772:	df 93       	push	r29
    1774:	ec 01       	movw	r28, r24
    1776:	6a 30       	cpi	r22, 0x0A	; 10
    1778:	31 f4       	brne	.+12     	; 0x1786 <_ZN17Adafruit_7segment5writeEh+0x16>
    177a:	fc 01       	movw	r30, r24
    177c:	e0 5c       	subi	r30, 0xC0	; 192
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	10 82       	st	Z, r1
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	16 c0       	rjmp	.+44     	; 0x17b2 <_ZN17Adafruit_7segment5writeEh+0x42>
    1786:	6d 30       	cpi	r22, 0x0D	; 13
    1788:	39 f4       	brne	.+14     	; 0x1798 <_ZN17Adafruit_7segment5writeEh+0x28>
    178a:	fc 01       	movw	r30, r24
    178c:	e0 5c       	subi	r30, 0xC0	; 192
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	10 82       	st	Z, r1
    1792:	21 e0       	ldi	r18, 0x01	; 1
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	15 c0       	rjmp	.+42     	; 0x17c2 <_ZN17Adafruit_7segment5writeEh+0x52>
    1798:	40 ed       	ldi	r20, 0xD0	; 208
    179a:	46 0f       	add	r20, r22
    179c:	4a 30       	cpi	r20, 0x0A	; 10
    179e:	40 f4       	brcc	.+16     	; 0x17b0 <_ZN17Adafruit_7segment5writeEh+0x40>
    17a0:	20 e0       	ldi	r18, 0x00	; 0
    17a2:	fc 01       	movw	r30, r24
    17a4:	e0 5c       	subi	r30, 0xC0	; 192
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	60 81       	ld	r22, Z
    17aa:	cc df       	rcall	.-104    	; 0x1744 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	01 c0       	rjmp	.+2      	; 0x17b2 <_ZN17Adafruit_7segment5writeEh+0x42>
    17b0:	80 e0       	ldi	r24, 0x00	; 0
    17b2:	fe 01       	movw	r30, r28
    17b4:	e0 5c       	subi	r30, 0xC0	; 192
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	90 81       	ld	r25, Z
    17ba:	21 e0       	ldi	r18, 0x01	; 1
    17bc:	29 0f       	add	r18, r25
    17be:	22 30       	cpi	r18, 0x02	; 2
    17c0:	21 f0       	breq	.+8      	; 0x17ca <_ZN17Adafruit_7segment5writeEh+0x5a>
    17c2:	c0 5c       	subi	r28, 0xC0	; 192
    17c4:	df 4f       	sbci	r29, 0xFF	; 255
    17c6:	28 83       	st	Y, r18
    17c8:	04 c0       	rjmp	.+8      	; 0x17d2 <_ZN17Adafruit_7segment5writeEh+0x62>
    17ca:	c0 5c       	subi	r28, 0xC0	; 192
    17cc:	df 4f       	sbci	r29, 0xFF	; 255
    17ce:	9e 5f       	subi	r25, 0xFE	; 254
    17d0:	98 83       	st	Y, r25
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	08 95       	ret

000017da <_ZN17Adafruit_7segment10printErrorEv>:
    17da:	fc 01       	movw	r30, r24
    17dc:	80 e4       	ldi	r24, 0x40	; 64
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	91 83       	std	Z+1, r25	; 0x01
    17e2:	80 83       	st	Z, r24
    17e4:	93 83       	std	Z+3, r25	; 0x03
    17e6:	82 83       	std	Z+2, r24	; 0x02
    17e8:	15 82       	std	Z+5, r1	; 0x05
    17ea:	14 82       	std	Z+4, r1	; 0x04
    17ec:	97 83       	std	Z+7, r25	; 0x07
    17ee:	86 83       	std	Z+6, r24	; 0x06
    17f0:	91 87       	std	Z+9, r25	; 0x09
    17f2:	80 87       	std	Z+8, r24	; 0x08
    17f4:	08 95       	ret

000017f6 <_ZN17Adafruit_7segment10printFloatEdhh>:
    17f6:	2f 92       	push	r2
    17f8:	3f 92       	push	r3
    17fa:	4f 92       	push	r4
    17fc:	5f 92       	push	r5
    17fe:	6f 92       	push	r6
    1800:	7f 92       	push	r7
    1802:	8f 92       	push	r8
    1804:	9f 92       	push	r9
    1806:	af 92       	push	r10
    1808:	bf 92       	push	r11
    180a:	cf 92       	push	r12
    180c:	df 92       	push	r13
    180e:	ef 92       	push	r14
    1810:	ff 92       	push	r15
    1812:	0f 93       	push	r16
    1814:	1f 93       	push	r17
    1816:	cf 93       	push	r28
    1818:	df 93       	push	r29
    181a:	cd b7       	in	r28, 0x3d	; 61
    181c:	de b7       	in	r29, 0x3e	; 62
    181e:	2b 97       	sbiw	r28, 0x0b	; 11
    1820:	0f b6       	in	r0, 0x3f	; 63
    1822:	f8 94       	cli
    1824:	de bf       	out	0x3e, r29	; 62
    1826:	0f be       	out	0x3f, r0	; 63
    1828:	cd bf       	out	0x3d, r28	; 61
    182a:	1c 01       	movw	r2, r24
    182c:	4d 83       	std	Y+5, r20	; 0x05
    182e:	5e 83       	std	Y+6, r21	; 0x06
    1830:	6f 83       	std	Y+7, r22	; 0x07
    1832:	78 87       	std	Y+8, r23	; 0x08
    1834:	2b 87       	std	Y+11, r18	; 0x0b
    1836:	09 87       	std	Y+9, r16	; 0x09
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	a9 01       	movw	r20, r18
    183e:	6d 81       	ldd	r22, Y+5	; 0x05
    1840:	7e 81       	ldd	r23, Y+6	; 0x06
    1842:	8f 81       	ldd	r24, Y+7	; 0x07
    1844:	98 85       	ldd	r25, Y+8	; 0x08
    1846:	8a d6       	rcall	.+3348   	; 0x255c <__cmpsf2>
    1848:	88 23       	and	r24, r24
    184a:	0c f0       	brlt	.+2      	; 0x184e <_ZN17Adafruit_7segment10printFloatEdhh+0x58>
    184c:	2e c1       	rjmp	.+604    	; 0x1aaa <_ZN17Adafruit_7segment10printFloatEdhh+0x2b4>
    184e:	8d 81       	ldd	r24, Y+5	; 0x05
    1850:	9e 81       	ldd	r25, Y+6	; 0x06
    1852:	af 81       	ldd	r26, Y+7	; 0x07
    1854:	b8 85       	ldd	r27, Y+8	; 0x08
    1856:	b0 58       	subi	r27, 0x80	; 128
    1858:	8d 83       	std	Y+5, r24	; 0x05
    185a:	9e 83       	std	Y+6, r25	; 0x06
    185c:	af 83       	std	Y+7, r26	; 0x07
    185e:	b8 87       	std	Y+8, r27	; 0x08
    1860:	91 e0       	ldi	r25, 0x01	; 1
    1862:	9a 87       	std	Y+10, r25	; 0x0a
    1864:	a3 e0       	ldi	r26, 0x03	; 3
    1866:	a9 83       	std	Y+1, r26	; 0x01
    1868:	23 c1       	rjmp	.+582    	; 0x1ab0 <_ZN17Adafruit_7segment10printFloatEdhh+0x2ba>
    186a:	c3 01       	movw	r24, r6
    186c:	b2 01       	movw	r22, r4
    186e:	10 d7       	rcall	.+3616   	; 0x2690 <__floatsisf>
    1870:	9b 01       	movw	r18, r22
    1872:	ac 01       	movw	r20, r24
    1874:	c7 01       	movw	r24, r14
    1876:	b6 01       	movw	r22, r12
    1878:	bb d7       	rcall	.+3958   	; 0x27f0 <__mulsf3>
    187a:	6b 01       	movw	r12, r22
    187c:	7c 01       	movw	r14, r24
    187e:	0f 5f       	subi	r16, 0xFF	; 255
    1880:	1f 4f       	sbci	r17, 0xFF	; 255
    1882:	0a 15       	cp	r16, r10
    1884:	1b 05       	cpc	r17, r11
    1886:	89 f7       	brne	.-30     	; 0x186a <_ZN17Adafruit_7segment10printFloatEdhh+0x74>
    1888:	2d 81       	ldd	r18, Y+5	; 0x05
    188a:	3e 81       	ldd	r19, Y+6	; 0x06
    188c:	4f 81       	ldd	r20, Y+7	; 0x07
    188e:	58 85       	ldd	r21, Y+8	; 0x08
    1890:	c7 01       	movw	r24, r14
    1892:	b6 01       	movw	r22, r12
    1894:	ad d7       	rcall	.+3930   	; 0x27f0 <__mulsf3>
    1896:	20 e0       	ldi	r18, 0x00	; 0
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	40 e0       	ldi	r20, 0x00	; 0
    189c:	5f e3       	ldi	r21, 0x3F	; 63
    189e:	fa d5       	rcall	.+3060   	; 0x2494 <__addsf3>
    18a0:	c9 d6       	rcall	.+3474   	; 0x2634 <__fixunssfsi>
    18a2:	2b 01       	movw	r4, r22
    18a4:	3c 01       	movw	r6, r24
    18a6:	99 81       	ldd	r25, Y+1	; 0x01
    18a8:	e9 2f       	mov	r30, r25
    18aa:	f0 e0       	ldi	r31, 0x00	; 0
    18ac:	1e 16       	cp	r1, r30
    18ae:	1f 06       	cpc	r1, r31
    18b0:	a4 f0       	brlt	.+40     	; 0x18da <_ZN17Adafruit_7segment10printFloatEdhh+0xe4>
    18b2:	81 2c       	mov	r8, r1
    18b4:	91 2c       	mov	r9, r1
    18b6:	54 01       	movw	r10, r8
    18b8:	83 94       	inc	r8
    18ba:	48 14       	cp	r4, r8
    18bc:	59 04       	cpc	r5, r9
    18be:	6a 04       	cpc	r6, r10
    18c0:	7b 04       	cpc	r7, r11
    18c2:	08 f4       	brcc	.+2      	; 0x18c6 <_ZN17Adafruit_7segment10printFloatEdhh+0xd0>
    18c4:	49 c0       	rjmp	.+146    	; 0x1958 <_ZN17Adafruit_7segment10printFloatEdhh+0x162>
    18c6:	99 85       	ldd	r25, Y+9	; 0x09
    18c8:	89 2f       	mov	r24, r25
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	a0 e0       	ldi	r26, 0x00	; 0
    18ce:	b0 e0       	ldi	r27, 0x00	; 0
    18d0:	89 83       	std	Y+1, r24	; 0x01
    18d2:	9a 83       	std	Y+2, r25	; 0x02
    18d4:	ab 83       	std	Y+3, r26	; 0x03
    18d6:	bc 83       	std	Y+4, r27	; 0x04
    18d8:	1e c0       	rjmp	.+60     	; 0x1916 <_ZN17Adafruit_7segment10printFloatEdhh+0x120>
    18da:	00 e0       	ldi	r16, 0x00	; 0
    18dc:	10 e0       	ldi	r17, 0x00	; 0
    18de:	81 2c       	mov	r8, r1
    18e0:	91 2c       	mov	r9, r1
    18e2:	54 01       	movw	r10, r8
    18e4:	83 94       	inc	r8
    18e6:	99 85       	ldd	r25, Y+9	; 0x09
    18e8:	89 2f       	mov	r24, r25
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	a0 e0       	ldi	r26, 0x00	; 0
    18ee:	b0 e0       	ldi	r27, 0x00	; 0
    18f0:	89 83       	std	Y+1, r24	; 0x01
    18f2:	9a 83       	std	Y+2, r25	; 0x02
    18f4:	ab 83       	std	Y+3, r26	; 0x03
    18f6:	bc 83       	std	Y+4, r27	; 0x04
    18f8:	a5 01       	movw	r20, r10
    18fa:	94 01       	movw	r18, r8
    18fc:	69 81       	ldd	r22, Y+1	; 0x01
    18fe:	7a 81       	ldd	r23, Y+2	; 0x02
    1900:	8b 81       	ldd	r24, Y+3	; 0x03
    1902:	9c 81       	ldd	r25, Y+4	; 0x04
    1904:	d8 d7       	rcall	.+4016   	; 0x28b6 <__mulsi3>
    1906:	4b 01       	movw	r8, r22
    1908:	5c 01       	movw	r10, r24
    190a:	0f 5f       	subi	r16, 0xFF	; 255
    190c:	1f 4f       	sbci	r17, 0xFF	; 255
    190e:	0e 17       	cp	r16, r30
    1910:	1f 07       	cpc	r17, r31
    1912:	94 f3       	brlt	.-28     	; 0x18f8 <_ZN17Adafruit_7segment10printFloatEdhh+0x102>
    1914:	d2 cf       	rjmp	.-92     	; 0x18ba <_ZN17Adafruit_7segment10printFloatEdhh+0xc4>
    1916:	8b 85       	ldd	r24, Y+11	; 0x0b
    1918:	81 50       	subi	r24, 0x01	; 1
    191a:	8b 87       	std	Y+11, r24	; 0x0b
    191c:	69 81       	ldd	r22, Y+1	; 0x01
    191e:	7a 81       	ldd	r23, Y+2	; 0x02
    1920:	8b 81       	ldd	r24, Y+3	; 0x03
    1922:	9c 81       	ldd	r25, Y+4	; 0x04
    1924:	b5 d6       	rcall	.+3434   	; 0x2690 <__floatsisf>
    1926:	9b 01       	movw	r18, r22
    1928:	ac 01       	movw	r20, r24
    192a:	c7 01       	movw	r24, r14
    192c:	b6 01       	movw	r22, r12
    192e:	1a d6       	rcall	.+3124   	; 0x2564 <__divsf3>
    1930:	6b 01       	movw	r12, r22
    1932:	7c 01       	movw	r14, r24
    1934:	2d 81       	ldd	r18, Y+5	; 0x05
    1936:	3e 81       	ldd	r19, Y+6	; 0x06
    1938:	4f 81       	ldd	r20, Y+7	; 0x07
    193a:	58 85       	ldd	r21, Y+8	; 0x08
    193c:	59 d7       	rcall	.+3762   	; 0x27f0 <__mulsf3>
    193e:	20 e0       	ldi	r18, 0x00	; 0
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	40 e0       	ldi	r20, 0x00	; 0
    1944:	5f e3       	ldi	r21, 0x3F	; 63
    1946:	a6 d5       	rcall	.+2892   	; 0x2494 <__addsf3>
    1948:	75 d6       	rcall	.+3306   	; 0x2634 <__fixunssfsi>
    194a:	2b 01       	movw	r4, r22
    194c:	3c 01       	movw	r6, r24
    194e:	68 15       	cp	r22, r8
    1950:	79 05       	cpc	r23, r9
    1952:	8a 05       	cpc	r24, r10
    1954:	9b 05       	cpc	r25, r11
    1956:	f8 f6       	brcc	.-66     	; 0x1916 <_ZN17Adafruit_7segment10printFloatEdhh+0x120>
    1958:	20 e0       	ldi	r18, 0x00	; 0
    195a:	30 e0       	ldi	r19, 0x00	; 0
    195c:	40 e8       	ldi	r20, 0x80	; 128
    195e:	5f e3       	ldi	r21, 0x3F	; 63
    1960:	c7 01       	movw	r24, r14
    1962:	b6 01       	movw	r22, r12
    1964:	fb d5       	rcall	.+3062   	; 0x255c <__cmpsf2>
    1966:	88 23       	and	r24, r24
    1968:	1c f4       	brge	.+6      	; 0x1970 <_ZN17Adafruit_7segment10printFloatEdhh+0x17a>
    196a:	c1 01       	movw	r24, r2
    196c:	36 df       	rcall	.-404    	; 0x17da <_ZN17Adafruit_7segment10printErrorEv>
    196e:	b6 c0       	rjmp	.+364    	; 0x1adc <_ZN17Adafruit_7segment10printFloatEdhh+0x2e6>
    1970:	41 14       	cp	r4, r1
    1972:	51 04       	cpc	r5, r1
    1974:	61 04       	cpc	r6, r1
    1976:	71 04       	cpc	r7, r1
    1978:	29 f4       	brne	.+10     	; 0x1984 <_ZN17Adafruit_7segment10printFloatEdhh+0x18e>
    197a:	46 c0       	rjmp	.+140    	; 0x1a08 <_ZN17Adafruit_7segment10printFloatEdhh+0x212>
    197c:	ab 85       	ldd	r26, Y+11	; 0x0b
    197e:	a1 17       	cp	r26, r17
    1980:	60 f4       	brcc	.+24     	; 0x199a <_ZN17Adafruit_7segment10printFloatEdhh+0x1a4>
    1982:	4d c0       	rjmp	.+154    	; 0x1a1e <_ZN17Adafruit_7segment10printFloatEdhh+0x228>
    1984:	10 e0       	ldi	r17, 0x00	; 0
    1986:	84 e0       	ldi	r24, 0x04	; 4
    1988:	99 24       	eor	r9, r9
    198a:	93 94       	inc	r9
    198c:	a1 2c       	mov	r10, r1
    198e:	99 85       	ldd	r25, Y+9	; 0x09
    1990:	c9 2e       	mov	r12, r25
    1992:	d1 2c       	mov	r13, r1
    1994:	e1 2c       	mov	r14, r1
    1996:	f1 2c       	mov	r15, r1
    1998:	89 83       	std	Y+1, r24	; 0x01
    199a:	bb 85       	ldd	r27, Y+11	; 0x0b
    199c:	bb 23       	and	r27, r27
    199e:	29 f0       	breq	.+10     	; 0x19aa <_ZN17Adafruit_7segment10printFloatEdhh+0x1b4>
    19a0:	09 2d       	mov	r16, r9
    19a2:	b1 17       	cp	r27, r17
    19a4:	19 f0       	breq	.+6      	; 0x19ac <_ZN17Adafruit_7segment10printFloatEdhh+0x1b6>
    19a6:	0a 2d       	mov	r16, r10
    19a8:	01 c0       	rjmp	.+2      	; 0x19ac <_ZN17Adafruit_7segment10printFloatEdhh+0x1b6>
    19aa:	0a 2d       	mov	r16, r10
    19ac:	b9 80       	ldd	r11, Y+1	; 0x01
    19ae:	8b 2d       	mov	r24, r11
    19b0:	81 50       	subi	r24, 0x01	; 1
    19b2:	89 83       	std	Y+1, r24	; 0x01
    19b4:	88 2e       	mov	r8, r24
    19b6:	c3 01       	movw	r24, r6
    19b8:	b2 01       	movw	r22, r4
    19ba:	a7 01       	movw	r20, r14
    19bc:	96 01       	movw	r18, r12
    19be:	8a d7       	rcall	.+3860   	; 0x28d4 <__udivmodsi4>
    19c0:	46 2f       	mov	r20, r22
    19c2:	20 2f       	mov	r18, r16
    19c4:	6b 2d       	mov	r22, r11
    19c6:	c1 01       	movw	r24, r2
    19c8:	bd de       	rcall	.-646    	; 0x1744 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    19ca:	99 81       	ldd	r25, Y+1	; 0x01
    19cc:	92 30       	cpi	r25, 0x02	; 2
    19ce:	71 f4       	brne	.+28     	; 0x19ec <_ZN17Adafruit_7segment10printFloatEdhh+0x1f6>
    19d0:	ba 94       	dec	r11
    19d2:	ba 94       	dec	r11
    19d4:	b9 82       	std	Y+1, r11	; 0x01
    19d6:	a4 e0       	ldi	r26, 0x04	; 4
    19d8:	a8 15       	cp	r26, r8
    19da:	40 f0       	brcs	.+16     	; 0x19ec <_ZN17Adafruit_7segment10printFloatEdhh+0x1f6>
    19dc:	e8 2d       	mov	r30, r8
    19de:	f0 e0       	ldi	r31, 0x00	; 0
    19e0:	ee 0f       	add	r30, r30
    19e2:	ff 1f       	adc	r31, r31
    19e4:	e2 0d       	add	r30, r2
    19e6:	f3 1d       	adc	r31, r3
    19e8:	11 82       	std	Z+1, r1	; 0x01
    19ea:	10 82       	st	Z, r1
    19ec:	c3 01       	movw	r24, r6
    19ee:	b2 01       	movw	r22, r4
    19f0:	a7 01       	movw	r20, r14
    19f2:	96 01       	movw	r18, r12
    19f4:	6f d7       	rcall	.+3806   	; 0x28d4 <__udivmodsi4>
    19f6:	29 01       	movw	r4, r18
    19f8:	3a 01       	movw	r6, r20
    19fa:	1f 5f       	subi	r17, 0xFF	; 255
    19fc:	23 2b       	or	r18, r19
    19fe:	24 2b       	or	r18, r20
    1a00:	25 2b       	or	r18, r21
    1a02:	09 f4       	brne	.+2      	; 0x1a06 <_ZN17Adafruit_7segment10printFloatEdhh+0x210>
    1a04:	bb cf       	rjmp	.-138    	; 0x197c <_ZN17Adafruit_7segment10printFloatEdhh+0x186>
    1a06:	c9 cf       	rjmp	.-110    	; 0x199a <_ZN17Adafruit_7segment10printFloatEdhh+0x1a4>
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	40 e0       	ldi	r20, 0x00	; 0
    1a0c:	64 e0       	ldi	r22, 0x04	; 4
    1a0e:	c1 01       	movw	r24, r2
    1a10:	99 de       	rcall	.-718    	; 0x1744 <_ZN17Adafruit_7segment13writeDigitNumEhhb>
    1a12:	ba 85       	ldd	r27, Y+10	; 0x0a
    1a14:	b1 11       	cpse	r27, r1
    1a16:	0e c0       	rjmp	.+28     	; 0x1a34 <_ZN17Adafruit_7segment10printFloatEdhh+0x23e>
    1a18:	83 e0       	ldi	r24, 0x03	; 3
    1a1a:	89 83       	std	Y+1, r24	; 0x01
    1a1c:	1b c0       	rjmp	.+54     	; 0x1a54 <_ZN17Adafruit_7segment10printFloatEdhh+0x25e>
    1a1e:	b9 81       	ldd	r27, Y+1	; 0x01
    1a20:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a22:	99 23       	and	r25, r25
    1a24:	99 f0       	breq	.+38     	; 0x1a4c <_ZN17Adafruit_7segment10printFloatEdhh+0x256>
    1a26:	eb 2f       	mov	r30, r27
    1a28:	ab 2f       	mov	r26, r27
    1a2a:	a1 50       	subi	r26, 0x01	; 1
    1a2c:	a9 83       	std	Y+1, r26	; 0x01
    1a2e:	b5 30       	cpi	r27, 0x05	; 5
    1a30:	68 f4       	brcc	.+26     	; 0x1a4c <_ZN17Adafruit_7segment10printFloatEdhh+0x256>
    1a32:	03 c0       	rjmp	.+6      	; 0x1a3a <_ZN17Adafruit_7segment10printFloatEdhh+0x244>
    1a34:	b2 e0       	ldi	r27, 0x02	; 2
    1a36:	b9 83       	std	Y+1, r27	; 0x01
    1a38:	e3 e0       	ldi	r30, 0x03	; 3
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	ee 0f       	add	r30, r30
    1a3e:	ff 1f       	adc	r31, r31
    1a40:	e2 0d       	add	r30, r2
    1a42:	f3 1d       	adc	r31, r3
    1a44:	80 e4       	ldi	r24, 0x40	; 64
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	91 83       	std	Z+1, r25	; 0x01
    1a4a:	80 83       	st	Z, r24
    1a4c:	89 81       	ldd	r24, Y+1	; 0x01
    1a4e:	88 23       	and	r24, r24
    1a50:	0c f4       	brge	.+2      	; 0x1a54 <_ZN17Adafruit_7segment10printFloatEdhh+0x25e>
    1a52:	44 c0       	rjmp	.+136    	; 0x1adc <_ZN17Adafruit_7segment10printFloatEdhh+0x2e6>
    1a54:	06 c0       	rjmp	.+12     	; 0x1a62 <_ZN17Adafruit_7segment10printFloatEdhh+0x26c>
    1a56:	a9 81       	ldd	r26, Y+1	; 0x01
    1a58:	a1 50       	subi	r26, 0x01	; 1
    1a5a:	a9 83       	std	Y+1, r26	; 0x01
    1a5c:	aa 23       	and	r26, r26
    1a5e:	0c f4       	brge	.+2      	; 0x1a62 <_ZN17Adafruit_7segment10printFloatEdhh+0x26c>
    1a60:	3d c0       	rjmp	.+122    	; 0x1adc <_ZN17Adafruit_7segment10printFloatEdhh+0x2e6>
    1a62:	b9 81       	ldd	r27, Y+1	; 0x01
    1a64:	b5 30       	cpi	r27, 0x05	; 5
    1a66:	b8 f7       	brcc	.-18     	; 0x1a56 <_ZN17Adafruit_7segment10printFloatEdhh+0x260>
    1a68:	eb 2f       	mov	r30, r27
    1a6a:	f0 e0       	ldi	r31, 0x00	; 0
    1a6c:	ee 0f       	add	r30, r30
    1a6e:	ff 1f       	adc	r31, r31
    1a70:	e2 0d       	add	r30, r2
    1a72:	f3 1d       	adc	r31, r3
    1a74:	11 82       	std	Z+1, r1	; 0x01
    1a76:	10 82       	st	Z, r1
    1a78:	ee cf       	rjmp	.-36     	; 0x1a56 <_ZN17Adafruit_7segment10printFloatEdhh+0x260>
    1a7a:	20 e0       	ldi	r18, 0x00	; 0
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
    1a7e:	40 e0       	ldi	r20, 0x00	; 0
    1a80:	5f e3       	ldi	r21, 0x3F	; 63
    1a82:	6d 81       	ldd	r22, Y+5	; 0x05
    1a84:	7e 81       	ldd	r23, Y+6	; 0x06
    1a86:	8f 81       	ldd	r24, Y+7	; 0x07
    1a88:	98 85       	ldd	r25, Y+8	; 0x08
    1a8a:	04 d5       	rcall	.+2568   	; 0x2494 <__addsf3>
    1a8c:	d3 d5       	rcall	.+2982   	; 0x2634 <__fixunssfsi>
    1a8e:	2b 01       	movw	r4, r22
    1a90:	3c 01       	movw	r6, r24
    1a92:	89 81       	ldd	r24, Y+1	; 0x01
    1a94:	e8 2f       	mov	r30, r24
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	0f 2e       	mov	r0, r31
    1a9a:	c1 2c       	mov	r12, r1
    1a9c:	d1 2c       	mov	r13, r1
    1a9e:	f0 e8       	ldi	r31, 0x80	; 128
    1aa0:	ef 2e       	mov	r14, r31
    1aa2:	ff e3       	ldi	r31, 0x3F	; 63
    1aa4:	ff 2e       	mov	r15, r31
    1aa6:	f0 2d       	mov	r31, r0
    1aa8:	18 cf       	rjmp	.-464    	; 0x18da <_ZN17Adafruit_7segment10printFloatEdhh+0xe4>
    1aaa:	1a 86       	std	Y+10, r1	; 0x0a
    1aac:	94 e0       	ldi	r25, 0x04	; 4
    1aae:	99 83       	std	Y+1, r25	; 0x01
    1ab0:	ab 85       	ldd	r26, Y+11	; 0x0b
    1ab2:	aa 2e       	mov	r10, r26
    1ab4:	b1 2c       	mov	r11, r1
    1ab6:	1a 14       	cp	r1, r10
    1ab8:	1b 04       	cpc	r1, r11
    1aba:	fc f6       	brge	.-66     	; 0x1a7a <_ZN17Adafruit_7segment10printFloatEdhh+0x284>
    1abc:	00 e0       	ldi	r16, 0x00	; 0
    1abe:	10 e0       	ldi	r17, 0x00	; 0
    1ac0:	0f 2e       	mov	r0, r31
    1ac2:	c1 2c       	mov	r12, r1
    1ac4:	d1 2c       	mov	r13, r1
    1ac6:	f0 e8       	ldi	r31, 0x80	; 128
    1ac8:	ef 2e       	mov	r14, r31
    1aca:	ff e3       	ldi	r31, 0x3F	; 63
    1acc:	ff 2e       	mov	r15, r31
    1ace:	f0 2d       	mov	r31, r0
    1ad0:	b9 85       	ldd	r27, Y+9	; 0x09
    1ad2:	4b 2e       	mov	r4, r27
    1ad4:	51 2c       	mov	r5, r1
    1ad6:	61 2c       	mov	r6, r1
    1ad8:	71 2c       	mov	r7, r1
    1ada:	c7 ce       	rjmp	.-626    	; 0x186a <_ZN17Adafruit_7segment10printFloatEdhh+0x74>
    1adc:	2b 96       	adiw	r28, 0x0b	; 11
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	de bf       	out	0x3e, r29	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	cd bf       	out	0x3d, r28	; 61
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	ef 90       	pop	r14
    1af4:	df 90       	pop	r13
    1af6:	cf 90       	pop	r12
    1af8:	bf 90       	pop	r11
    1afa:	af 90       	pop	r10
    1afc:	9f 90       	pop	r9
    1afe:	8f 90       	pop	r8
    1b00:	7f 90       	pop	r7
    1b02:	6f 90       	pop	r6
    1b04:	5f 90       	pop	r5
    1b06:	4f 90       	pop	r4
    1b08:	3f 90       	pop	r3
    1b0a:	2f 90       	pop	r2
    1b0c:	08 95       	ret

00001b0e <_ZN17Adafruit_7segment11printNumberElh>:
    1b0e:	0f 93       	push	r16
    1b10:	cf 93       	push	r28
    1b12:	df 93       	push	r29
    1b14:	ec 01       	movw	r28, r24
    1b16:	02 2f       	mov	r16, r18
    1b18:	cb 01       	movw	r24, r22
    1b1a:	ba 01       	movw	r22, r20
    1b1c:	b9 d5       	rcall	.+2930   	; 0x2690 <__floatsisf>
    1b1e:	ab 01       	movw	r20, r22
    1b20:	bc 01       	movw	r22, r24
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	ce 01       	movw	r24, r28
    1b26:	67 de       	rcall	.-818    	; 0x17f6 <_ZN17Adafruit_7segment10printFloatEdhh>
    1b28:	df 91       	pop	r29
    1b2a:	cf 91       	pop	r28
    1b2c:	0f 91       	pop	r16
    1b2e:	08 95       	ret

00001b30 <_ZN17Adafruit_7segment5printEmi>:
    1b30:	21 15       	cp	r18, r1
    1b32:	31 05       	cpc	r19, r1
    1b34:	19 f4       	brne	.+6      	; 0x1b3c <_ZN17Adafruit_7segment5printEmi+0xc>
    1b36:	64 2f       	mov	r22, r20
    1b38:	1b ce       	rjmp	.-970    	; 0x1770 <_ZN17Adafruit_7segment5writeEh>
    1b3a:	08 95       	ret
    1b3c:	e8 cf       	rjmp	.-48     	; 0x1b0e <_ZN17Adafruit_7segment11printNumberElh>
    1b3e:	08 95       	ret

00001b40 <_ZN17Adafruit_7segment5printEji>:
{
	print((long) n, base);
}

void Adafruit_7segment::print(unsigned int n, int base)
{
    1b40:	9a 01       	movw	r18, r20
	print((unsigned long) n, base);
    1b42:	ab 01       	movw	r20, r22
    1b44:	60 e0       	ldi	r22, 0x00	; 0
    1b46:	70 e0       	ldi	r23, 0x00	; 0
    1b48:	f3 cf       	rjmp	.-26     	; 0x1b30 <_ZN17Adafruit_7segment5printEmi>
    1b4a:	08 95       	ret

00001b4c <main>:

#define F_CPU 16000000UL
#include <util/delay.h>

int main ()
{
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	cb 56       	subi	r28, 0x6B	; 107
    1b56:	d2 40       	sbci	r29, 0x02	; 2
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b62:	2f ef       	ldi	r18, 0xFF	; 255
    1b64:	83 ed       	ldi	r24, 0xD3	; 211
    1b66:	90 e3       	ldi	r25, 0x30	; 48
    1b68:	21 50       	subi	r18, 0x01	; 1
    1b6a:	80 40       	sbci	r24, 0x00	; 0
    1b6c:	90 40       	sbci	r25, 0x00	; 0
    1b6e:	e1 f7       	brne	.-8      	; 0x1b68 <main+0x1c>
    1b70:	00 c0       	rjmp	.+0      	; 0x1b72 <main+0x26>
    1b72:	00 00       	nop
#include "../memory/memory.hpp"
#include "../uart/uart_module.hpp"
#include "request.hpp"
#include "../timer/Clock.hpp"

class Communications
    1b74:	ce 01       	movw	r24, r28
    1b76:	04 96       	adiw	r24, 0x04	; 4
    1b78:	0e 94 a0 01 	call	0x340	; 0x340 <_ZN12MessageQueueC1Ev>
    1b7c:	ce 01       	movw	r24, r28
    1b7e:	83 56       	subi	r24, 0x63	; 99
    1b80:	9f 4f       	sbci	r25, 0xFF	; 255
    1b82:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <_ZN18FastTransferParserC1Ev>
    1b86:	ce 01       	movw	r24, r28
    1b88:	80 53       	subi	r24, 0x30	; 48
    1b8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b8c:	e3 d0       	rcall	.+454    	; 0x1d54 <_ZN6ClocksC1Ev>
  _delay_ms(1000);
  ControlBoxEngine box;
  box.initialize();
    1b8e:	ce 01       	movw	r24, r28
    1b90:	01 96       	adiw	r24, 0x01	; 1
    1b92:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_ZN16ControlBoxEngine10initializeEv>
  box.loop();
    1b96:	ce 01       	movw	r24, r28
    1b98:	01 96       	adiw	r24, 0x01	; 1
    1b9a:	0e 94 96 02 	call	0x52c	; 0x52c <_ZN16ControlBoxEngine4loopEv>
  return 0;
    1b9e:	80 e0       	ldi	r24, 0x00	; 0
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	c5 59       	subi	r28, 0x95	; 149
    1ba4:	dd 4f       	sbci	r29, 0xFD	; 253
    1ba6:	0f b6       	in	r0, 0x3f	; 63
    1ba8:	f8 94       	cli
    1baa:	de bf       	out	0x3e, r29	; 62
    1bac:	0f be       	out	0x3f, r0	; 63
    1bae:	cd bf       	out	0x3d, r28	; 61
    1bb0:	df 91       	pop	r29
    1bb2:	cf 91       	pop	r28
    1bb4:	08 95       	ret

00001bb6 <_ZN6Memory10initializeEv>:
    1bb6:	ed eb       	ldi	r30, 0xBD	; 189
    1bb8:	f3 e0       	ldi	r31, 0x03	; 3
    1bba:	8d eb       	ldi	r24, 0xBD	; 189
    1bbc:	96 e0       	ldi	r25, 0x06	; 6
    1bbe:	11 82       	std	Z+1, r1	; 0x01
    1bc0:	10 82       	st	Z, r1
    1bc2:	13 82       	std	Z+3, r1	; 0x03
    1bc4:	12 82       	std	Z+2, r1	; 0x02
    1bc6:	15 82       	std	Z+5, r1	; 0x05
    1bc8:	14 82       	std	Z+4, r1	; 0x04
    1bca:	36 96       	adiw	r30, 0x06	; 6
    1bcc:	e8 17       	cp	r30, r24
    1bce:	f9 07       	cpc	r31, r25
    1bd0:	b1 f7       	brne	.-20     	; 0x1bbe <_ZN6Memory10initializeEv+0x8>
    1bd2:	08 95       	ret

00001bd4 <_ZN6Memory5writeEhj>:
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	fc 01       	movw	r30, r24
    1bd8:	ee 0f       	add	r30, r30
    1bda:	ff 1f       	adc	r31, r31
    1bdc:	e8 0f       	add	r30, r24
    1bde:	f9 1f       	adc	r31, r25
    1be0:	ee 0f       	add	r30, r30
    1be2:	ff 1f       	adc	r31, r31
    1be4:	e3 54       	subi	r30, 0x43	; 67
    1be6:	fc 4f       	sbci	r31, 0xFC	; 252
    1be8:	01 c0       	rjmp	.+2      	; 0x1bec <_ZN6Memory5writeEhj+0x18>
    1bea:	fc 01       	movw	r30, r24
    1bec:	84 81       	ldd	r24, Z+4	; 0x04
    1bee:	95 81       	ldd	r25, Z+5	; 0x05
    1bf0:	00 97       	sbiw	r24, 0x00	; 0
    1bf2:	d9 f7       	brne	.-10     	; 0x1bea <_ZN6Memory5writeEhj+0x16>
    1bf4:	30 97       	sbiw	r30, 0x00	; 0
    1bf6:	39 f0       	breq	.+14     	; 0x1c06 <_ZN6Memory5writeEhj+0x32>
    1bf8:	71 83       	std	Z+1, r23	; 0x01
    1bfa:	60 83       	st	Z, r22
    1bfc:	02 80       	ldd	r0, Z+2	; 0x02
    1bfe:	f3 81       	ldd	r31, Z+3	; 0x03
    1c00:	e0 2d       	mov	r30, r0
    1c02:	30 97       	sbiw	r30, 0x00	; 0
    1c04:	c9 f7       	brne	.-14     	; 0x1bf8 <_ZN6Memory5writeEhj+0x24>
    1c06:	08 95       	ret

00001c08 <_ZN6Memory4readEh>:
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	fc 01       	movw	r30, r24
    1c0c:	ee 0f       	add	r30, r30
    1c0e:	ff 1f       	adc	r31, r31
    1c10:	e8 0f       	add	r30, r24
    1c12:	f9 1f       	adc	r31, r25
    1c14:	ee 0f       	add	r30, r30
    1c16:	ff 1f       	adc	r31, r31
    1c18:	e3 54       	subi	r30, 0x43	; 67
    1c1a:	fc 4f       	sbci	r31, 0xFC	; 252
    1c1c:	80 81       	ld	r24, Z
    1c1e:	91 81       	ldd	r25, Z+1	; 0x01
    1c20:	08 95       	ret

00001c22 <_ZN6Memory13valid_addressEh>:
    1c22:	80 95       	com	r24
    1c24:	88 1f       	adc	r24, r24
    1c26:	88 27       	eor	r24, r24
    1c28:	88 1f       	adc	r24, r24
    1c2a:	08 95       	ret

00001c2c <_ZN11TouchScreen14assign_objectsEv>:
			printf("Fail:!!\r\n");
//      good_screen_coms = false;
		return success;
	}
	return false;
}
    1c2c:	fc 01       	movw	r30, r24
    1c2e:	36 96       	adiw	r30, 0x06	; 6
    1c30:	9c 01       	movw	r18, r24
    1c32:	2a 5f       	subi	r18, 0xFA	; 250
    1c34:	3e 4f       	sbci	r19, 0xFE	; 254
    1c36:	11 92       	st	Z+, r1
    1c38:	11 92       	st	Z+, r1
    1c3a:	e2 17       	cp	r30, r18
    1c3c:	f3 07       	cpc	r31, r19
    1c3e:	d9 f7       	brne	.-10     	; 0x1c36 <_ZN11TouchScreen14assign_objectsEv+0xa>
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	3f e0       	ldi	r19, 0x0F	; 15
    1c44:	fc 01       	movw	r30, r24
    1c46:	33 8f       	std	Z+27, r19	; 0x1b
    1c48:	22 8f       	std	Z+26, r18	; 0x1a
    1c4a:	08 95       	ret

00001c4c <_ZN11TouchScreen10initializeEP6Memoryj>:
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	ea 01       	movw	r28, r20
    1c52:	fc 01       	movw	r30, r24
    1c54:	11 82       	std	Z+1, r1	; 0x01
    1c56:	10 82       	st	Z, r1
    1c58:	73 83       	std	Z+3, r23	; 0x03
    1c5a:	62 83       	std	Z+2, r22	; 0x02
    1c5c:	55 83       	std	Z+5, r21	; 0x05
    1c5e:	44 83       	std	Z+4, r20	; 0x04
    1c60:	e5 df       	rcall	.-54     	; 0x1c2c <_ZN11TouchScreen14assign_objectsEv>
    1c62:	c1 30       	cpi	r28, 0x01	; 1
    1c64:	d1 05       	cpc	r29, r1
    1c66:	49 f0       	breq	.+18     	; 0x1c7a <_ZN11TouchScreen10initializeEP6Memoryj+0x2e>
    1c68:	20 f0       	brcs	.+8      	; 0x1c72 <_ZN11TouchScreen10initializeEP6Memoryj+0x26>
    1c6a:	c2 30       	cpi	r28, 0x02	; 2
    1c6c:	d1 05       	cpc	r29, r1
    1c6e:	49 f0       	breq	.+18     	; 0x1c82 <_ZN11TouchScreen10initializeEP6Memoryj+0x36>
    1c70:	0c c0       	rjmp	.+24     	; 0x1c8a <_ZN11TouchScreen10initializeEP6Memoryj+0x3e>
    1c72:	87 e6       	ldi	r24, 0x67	; 103
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	5b d2       	rcall	.+1206   	; 0x212e <_Z16uart0_initializej>
    1c78:	0b c0       	rjmp	.+22     	; 0x1c90 <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1c7a:	87 e6       	ldi	r24, 0x67	; 103
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	c9 d2       	rcall	.+1426   	; 0x2212 <_Z16uart1_initializej>
    1c80:	07 c0       	rjmp	.+14     	; 0x1c90 <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1c82:	87 e6       	ldi	r24, 0x67	; 103
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	56 d3       	rcall	.+1708   	; 0x2334 <_Z16uart2_initializej>
    1c88:	03 c0       	rjmp	.+6      	; 0x1c90 <_ZN11TouchScreen10initializeEP6Memoryj+0x44>
    1c8a:	87 e6       	ldi	r24, 0x67	; 103
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	ed d3       	rcall	.+2010   	; 0x246a <_Z16uart3_initializej>
    1c90:	df 93       	push	r29
    1c92:	cf 93       	push	r28
    1c94:	8b ea       	ldi	r24, 0xAB	; 171
    1c96:	92 e0       	ldi	r25, 0x02	; 2
    1c98:	9f 93       	push	r25
    1c9a:	8f 93       	push	r24
    1c9c:	a9 d6       	rcall	.+3410   	; 0x29f0 <printf>
    1c9e:	0f 90       	pop	r0
    1ca0:	0f 90       	pop	r0
    1ca2:	0f 90       	pop	r0
    1ca4:	0f 90       	pop	r0
    1ca6:	df 91       	pop	r29
    1ca8:	cf 91       	pop	r28
    1caa:	08 95       	ret

00001cac <_ZNK11TouchScreen13update_objectEj>:
    1cac:	9b 01       	movw	r18, r22
    1cae:	2d 5f       	subi	r18, 0xFD	; 253
    1cb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb2:	22 0f       	add	r18, r18
    1cb4:	33 1f       	adc	r19, r19
    1cb6:	82 0f       	add	r24, r18
    1cb8:	93 1f       	adc	r25, r19
    1cba:	fc 01       	movw	r30, r24
    1cbc:	80 81       	ld	r24, Z
    1cbe:	91 81       	ldd	r25, Z+1	; 0x01
    1cc0:	89 2b       	or	r24, r25
    1cc2:	11 f0       	breq	.+4      	; 0x1cc8 <_ZNK11TouchScreen13update_objectEj+0x1c>
    1cc4:	cb 01       	movw	r24, r22
    1cc6:	a0 cf       	rjmp	.-192    	; 0x1c08 <_ZN6Memory4readEh>
    1cc8:	08 95       	ret

00001cca <_ZNK11TouchScreen7refreshEv>:
    1cca:	0f 93       	push	r16
    1ccc:	1f 93       	push	r17
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	8c 01       	movw	r16, r24
    1cd4:	8f eb       	ldi	r24, 0xBF	; 191
    1cd6:	96 e0       	ldi	r25, 0x06	; 6
    1cd8:	8a d0       	rcall	.+276    	; 0x1dee <_ZN6Clocks6isDoneEv>
    1cda:	88 23       	and	r24, r24
    1cdc:	e9 f0       	breq	.+58     	; 0x1d18 <_ZNK11TouchScreen7refreshEv+0x4e>
    1cde:	80 91 bd 06 	lds	r24, 0x06BD	; 0x8006bd <_ZZNK11TouchScreen7refreshEvE5count>
    1ce2:	90 91 be 06 	lds	r25, 0x06BE	; 0x8006be <_ZZNK11TouchScreen7refreshEvE5count+0x1>
    1ce6:	8a 30       	cpi	r24, 0x0A	; 10
    1ce8:	91 05       	cpc	r25, r1
    1cea:	2c f0       	brlt	.+10     	; 0x1cf6 <_ZNK11TouchScreen7refreshEv+0x2c>
    1cec:	10 92 be 06 	sts	0x06BE, r1	; 0x8006be <_ZZNK11TouchScreen7refreshEvE5count+0x1>
    1cf0:	10 92 bd 06 	sts	0x06BD, r1	; 0x8006bd <_ZZNK11TouchScreen7refreshEvE5count>
    1cf4:	11 c0       	rjmp	.+34     	; 0x1d18 <_ZNK11TouchScreen7refreshEv+0x4e>
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	90 93 be 06 	sts	0x06BE, r25	; 0x8006be <_ZZNK11TouchScreen7refreshEvE5count+0x1>
    1cfc:	80 93 bd 06 	sts	0x06BD, r24	; 0x8006bd <_ZZNK11TouchScreen7refreshEvE5count>
    1d00:	c0 e0       	ldi	r28, 0x00	; 0
    1d02:	d0 e0       	ldi	r29, 0x00	; 0
    1d04:	be 01       	movw	r22, r28
    1d06:	c8 01       	movw	r24, r16
    1d08:	d1 df       	rcall	.-94     	; 0x1cac <_ZNK11TouchScreen13update_objectEj>
    1d0a:	21 96       	adiw	r28, 0x01	; 1
    1d0c:	c0 38       	cpi	r28, 0x80	; 128
    1d0e:	d1 05       	cpc	r29, r1
    1d10:	c9 f7       	brne	.-14     	; 0x1d04 <_ZNK11TouchScreen7refreshEv+0x3a>
    1d12:	8f eb       	ldi	r24, 0xBF	; 191
    1d14:	96 e0       	ldi	r25, 0x06	; 6
    1d16:	0d d0       	rcall	.+26     	; 0x1d32 <_ZN6Clocks5resetEv>
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	1f 91       	pop	r17
    1d1e:	0f 91       	pop	r16
    1d20:	08 95       	ret

00001d22 <_GLOBAL__sub_I__ZN11TouchScreen10initializeEP6Memoryj>:
	//objects[JOYSTICK_RIGHT_Y] = Gauge4;
//  objects[SLIDER_RIGHT] = Gauge5;
}

/*----------------------------- Updating Screen ------------------------------*/
Clocks screenRefreshTimer(500);
    1d22:	44 ef       	ldi	r20, 0xF4	; 244
    1d24:	51 e0       	ldi	r21, 0x01	; 1
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	8f eb       	ldi	r24, 0xBF	; 191
    1d2c:	96 e0       	ldi	r25, 0x06	; 6
    1d2e:	2c c0       	rjmp	.+88     	; 0x1d88 <_ZN6ClocksC1El>
    1d30:	08 95       	ret

00001d32 <_ZN6Clocks5resetEv>:
{
	update();

	return abs(currentTime-startTime) / length;

}
    1d32:	cf 93       	push	r28
    1d34:	df 93       	push	r29
    1d36:	ec 01       	movw	r28, r24
    1d38:	8b ec       	ldi	r24, 0xCB	; 203
    1d3a:	96 e0       	ldi	r25, 0x06	; 6
    1d3c:	3b d1       	rcall	.+630    	; 0x1fb4 <_ZN12SimpleTimer16millisEv>
    1d3e:	6c 83       	std	Y+4, r22	; 0x04
    1d40:	7d 83       	std	Y+5, r23	; 0x05
    1d42:	8e 83       	std	Y+6, r24	; 0x06
    1d44:	9f 83       	std	Y+7, r25	; 0x07
    1d46:	68 83       	st	Y, r22
    1d48:	79 83       	std	Y+1, r23	; 0x01
    1d4a:	8a 83       	std	Y+2, r24	; 0x02
    1d4c:	9b 83       	std	Y+3, r25	; 0x03
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	08 95       	ret

00001d54 <_ZN6ClocksC1Ev>:
    1d54:	cf 93       	push	r28
    1d56:	df 93       	push	r29
    1d58:	ec 01       	movw	r28, r24
    1d5a:	41 e0       	ldi	r20, 0x01	; 1
    1d5c:	50 e0       	ldi	r21, 0x00	; 0
    1d5e:	60 e0       	ldi	r22, 0x00	; 0
    1d60:	70 e0       	ldi	r23, 0x00	; 0
    1d62:	8b ec       	ldi	r24, 0xCB	; 203
    1d64:	96 e0       	ldi	r25, 0x06	; 6
    1d66:	3c d1       	rcall	.+632    	; 0x1fe0 <_ZN12SimpleTimer112set_durationEm>
    1d68:	8b ec       	ldi	r24, 0xCB	; 203
    1d6a:	96 e0       	ldi	r25, 0x06	; 6
    1d6c:	2c d1       	rcall	.+600    	; 0x1fc6 <_ZN12SimpleTimer15startEv>
    1d6e:	82 e3       	ldi	r24, 0x32	; 50
    1d70:	90 e0       	ldi	r25, 0x00	; 0
    1d72:	a0 e0       	ldi	r26, 0x00	; 0
    1d74:	b0 e0       	ldi	r27, 0x00	; 0
    1d76:	88 87       	std	Y+8, r24	; 0x08
    1d78:	99 87       	std	Y+9, r25	; 0x09
    1d7a:	aa 87       	std	Y+10, r26	; 0x0a
    1d7c:	bb 87       	std	Y+11, r27	; 0x0b
    1d7e:	ce 01       	movw	r24, r28
    1d80:	d8 df       	rcall	.-80     	; 0x1d32 <_ZN6Clocks5resetEv>
    1d82:	df 91       	pop	r29
    1d84:	cf 91       	pop	r28
    1d86:	08 95       	ret

00001d88 <_ZN6ClocksC1El>:
    1d88:	cf 92       	push	r12
    1d8a:	df 92       	push	r13
    1d8c:	ef 92       	push	r14
    1d8e:	ff 92       	push	r15
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	ec 01       	movw	r28, r24
    1d96:	6a 01       	movw	r12, r20
    1d98:	7b 01       	movw	r14, r22
    1d9a:	41 e0       	ldi	r20, 0x01	; 1
    1d9c:	50 e0       	ldi	r21, 0x00	; 0
    1d9e:	60 e0       	ldi	r22, 0x00	; 0
    1da0:	70 e0       	ldi	r23, 0x00	; 0
    1da2:	8b ec       	ldi	r24, 0xCB	; 203
    1da4:	96 e0       	ldi	r25, 0x06	; 6
    1da6:	1c d1       	rcall	.+568    	; 0x1fe0 <_ZN12SimpleTimer112set_durationEm>
    1da8:	8b ec       	ldi	r24, 0xCB	; 203
    1daa:	96 e0       	ldi	r25, 0x06	; 6
    1dac:	0c d1       	rcall	.+536    	; 0x1fc6 <_ZN12SimpleTimer15startEv>
    1dae:	c8 86       	std	Y+8, r12	; 0x08
    1db0:	d9 86       	std	Y+9, r13	; 0x09
    1db2:	ea 86       	std	Y+10, r14	; 0x0a
    1db4:	fb 86       	std	Y+11, r15	; 0x0b
    1db6:	ce 01       	movw	r24, r28
    1db8:	bc df       	rcall	.-136    	; 0x1d32 <_ZN6Clocks5resetEv>
    1dba:	df 91       	pop	r29
    1dbc:	cf 91       	pop	r28
    1dbe:	ff 90       	pop	r15
    1dc0:	ef 90       	pop	r14
    1dc2:	df 90       	pop	r13
    1dc4:	cf 90       	pop	r12
    1dc6:	08 95       	ret

00001dc8 <_ZN6Clocks11setIntervalEl>:
    1dc8:	fc 01       	movw	r30, r24
    1dca:	40 87       	std	Z+8, r20	; 0x08
    1dcc:	51 87       	std	Z+9, r21	; 0x09
    1dce:	62 87       	std	Z+10, r22	; 0x0a
    1dd0:	73 87       	std	Z+11, r23	; 0x0b
    1dd2:	08 95       	ret

00001dd4 <_ZN6Clocks6updateEv>:
    1dd4:	cf 93       	push	r28
    1dd6:	df 93       	push	r29
    1dd8:	ec 01       	movw	r28, r24
    1dda:	8b ec       	ldi	r24, 0xCB	; 203
    1ddc:	96 e0       	ldi	r25, 0x06	; 6
    1dde:	ea d0       	rcall	.+468    	; 0x1fb4 <_ZN12SimpleTimer16millisEv>
    1de0:	68 83       	st	Y, r22
    1de2:	79 83       	std	Y+1, r23	; 0x01
    1de4:	8a 83       	std	Y+2, r24	; 0x02
    1de6:	9b 83       	std	Y+3, r25	; 0x03
    1de8:	df 91       	pop	r29
    1dea:	cf 91       	pop	r28
    1dec:	08 95       	ret

00001dee <_ZN6Clocks6isDoneEv>:
    1dee:	cf 93       	push	r28
    1df0:	df 93       	push	r29
    1df2:	ec 01       	movw	r28, r24
    1df4:	ef df       	rcall	.-34     	; 0x1dd4 <_ZN6Clocks6updateEv>
    1df6:	28 81       	ld	r18, Y
    1df8:	39 81       	ldd	r19, Y+1	; 0x01
    1dfa:	8c 81       	ldd	r24, Y+4	; 0x04
    1dfc:	9d 81       	ldd	r25, Y+5	; 0x05
    1dfe:	28 1b       	sub	r18, r24
    1e00:	39 0b       	sbc	r19, r25
    1e02:	c9 01       	movw	r24, r18
    1e04:	99 23       	and	r25, r25
    1e06:	24 f4       	brge	.+8      	; 0x1e10 <_ZN6Clocks6isDoneEv+0x22>
    1e08:	88 27       	eor	r24, r24
    1e0a:	99 27       	eor	r25, r25
    1e0c:	82 1b       	sub	r24, r18
    1e0e:	93 0b       	sbc	r25, r19
    1e10:	09 2e       	mov	r0, r25
    1e12:	00 0c       	add	r0, r0
    1e14:	aa 0b       	sbc	r26, r26
    1e16:	bb 0b       	sbc	r27, r27
    1e18:	48 85       	ldd	r20, Y+8	; 0x08
    1e1a:	59 85       	ldd	r21, Y+9	; 0x09
    1e1c:	6a 85       	ldd	r22, Y+10	; 0x0a
    1e1e:	7b 85       	ldd	r23, Y+11	; 0x0b
    1e20:	48 17       	cp	r20, r24
    1e22:	59 07       	cpc	r21, r25
    1e24:	6a 07       	cpc	r22, r26
    1e26:	7b 07       	cpc	r23, r27
    1e28:	24 f4       	brge	.+8      	; 0x1e32 <_ZN6Clocks6isDoneEv+0x44>
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	82 df       	rcall	.-252    	; 0x1d32 <_ZN6Clocks5resetEv>
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	01 c0       	rjmp	.+2      	; 0x1e34 <_ZN6Clocks6isDoneEv+0x46>
    1e32:	80 e0       	ldi	r24, 0x00	; 0
    1e34:	df 91       	pop	r29
    1e36:	cf 91       	pop	r28
    1e38:	08 95       	ret

00001e3a <_GLOBAL__sub_I__ZN6ClocksC2Ev>:

#include "../timer/SimpleTimer1.hpp"
#include "../uart/uart_2.hpp"
#include "../uart/uart_3.hpp"

static SimpleTimer1 ClockTimer;
    1e3a:	8b ec       	ldi	r24, 0xCB	; 203
    1e3c:	96 e0       	ldi	r25, 0x06	; 6
    1e3e:	ce c0       	rjmp	.+412    	; 0x1fdc <_ZN12SimpleTimer1C1Ev>
    1e40:	08 95       	ret

00001e42 <_Z5resetv>:
    1e42:	10 92 d0 06 	sts	0x06D0, r1	; 0x8006d0 <_ZL5count>
    1e46:	10 92 d1 06 	sts	0x06D1, r1	; 0x8006d1 <_ZL5count+0x1>
    1e4a:	10 92 d2 06 	sts	0x06D2, r1	; 0x8006d2 <_ZL5count+0x2>
    1e4e:	10 92 d3 06 	sts	0x06D3, r1	; 0x8006d3 <_ZL5count+0x3>
    1e52:	07 d1       	rcall	.+526    	; 0x2062 <_Z36timer0_disableTimerOverflowInterruptv>
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	d7 c0       	rjmp	.+430    	; 0x2006 <_Z21timer0_setClockSource12CLOCK_SOURCE>
    1e58:	08 95       	ret

00001e5a <__vector_23>:
    1e5a:	1f 92       	push	r1
    1e5c:	0f 92       	push	r0
    1e5e:	0f b6       	in	r0, 0x3f	; 63
    1e60:	0f 92       	push	r0
    1e62:	11 24       	eor	r1, r1
    1e64:	0b b6       	in	r0, 0x3b	; 59
    1e66:	0f 92       	push	r0
    1e68:	2f 93       	push	r18
    1e6a:	3f 93       	push	r19
    1e6c:	4f 93       	push	r20
    1e6e:	5f 93       	push	r21
    1e70:	6f 93       	push	r22
    1e72:	7f 93       	push	r23
    1e74:	8f 93       	push	r24
    1e76:	9f 93       	push	r25
    1e78:	af 93       	push	r26
    1e7a:	bf 93       	push	r27
    1e7c:	ef 93       	push	r30
    1e7e:	ff 93       	push	r31
    1e80:	80 91 d0 06 	lds	r24, 0x06D0	; 0x8006d0 <_ZL5count>
    1e84:	90 91 d1 06 	lds	r25, 0x06D1	; 0x8006d1 <_ZL5count+0x1>
    1e88:	a0 91 d2 06 	lds	r26, 0x06D2	; 0x8006d2 <_ZL5count+0x2>
    1e8c:	b0 91 d3 06 	lds	r27, 0x06D3	; 0x8006d3 <_ZL5count+0x3>
    1e90:	01 96       	adiw	r24, 0x01	; 1
    1e92:	a1 1d       	adc	r26, r1
    1e94:	b1 1d       	adc	r27, r1
    1e96:	80 93 d0 06 	sts	0x06D0, r24	; 0x8006d0 <_ZL5count>
    1e9a:	90 93 d1 06 	sts	0x06D1, r25	; 0x8006d1 <_ZL5count+0x1>
    1e9e:	a0 93 d2 06 	sts	0x06D2, r26	; 0x8006d2 <_ZL5count+0x2>
    1ea2:	b0 93 d3 06 	sts	0x06D3, r27	; 0x8006d3 <_ZL5count+0x3>
    1ea6:	40 91 d0 06 	lds	r20, 0x06D0	; 0x8006d0 <_ZL5count>
    1eaa:	50 91 d1 06 	lds	r21, 0x06D1	; 0x8006d1 <_ZL5count+0x1>
    1eae:	60 91 d2 06 	lds	r22, 0x06D2	; 0x8006d2 <_ZL5count+0x2>
    1eb2:	70 91 d3 06 	lds	r23, 0x06D3	; 0x8006d3 <_ZL5count+0x3>
    1eb6:	80 91 cc 06 	lds	r24, 0x06CC	; 0x8006cc <_ZL9max_count>
    1eba:	90 91 cd 06 	lds	r25, 0x06CD	; 0x8006cd <_ZL9max_count+0x1>
    1ebe:	a0 91 ce 06 	lds	r26, 0x06CE	; 0x8006ce <_ZL9max_count+0x2>
    1ec2:	b0 91 cf 06 	lds	r27, 0x06CF	; 0x8006cf <_ZL9max_count+0x3>
    1ec6:	84 17       	cp	r24, r20
    1ec8:	95 07       	cpc	r25, r21
    1eca:	a6 07       	cpc	r26, r22
    1ecc:	b7 07       	cpc	r27, r23
    1ece:	08 f4       	brcc	.+2      	; 0x1ed2 <__vector_23+0x78>
    1ed0:	b8 df       	rcall	.-144    	; 0x1e42 <_Z5resetv>
    1ed2:	ff 91       	pop	r31
    1ed4:	ef 91       	pop	r30
    1ed6:	bf 91       	pop	r27
    1ed8:	af 91       	pop	r26
    1eda:	9f 91       	pop	r25
    1edc:	8f 91       	pop	r24
    1ede:	7f 91       	pop	r23
    1ee0:	6f 91       	pop	r22
    1ee2:	5f 91       	pop	r21
    1ee4:	4f 91       	pop	r20
    1ee6:	3f 91       	pop	r19
    1ee8:	2f 91       	pop	r18
    1eea:	0f 90       	pop	r0
    1eec:	0b be       	out	0x3b, r0	; 59
    1eee:	0f 90       	pop	r0
    1ef0:	0f be       	out	0x3f, r0	; 63
    1ef2:	0f 90       	pop	r0
    1ef4:	1f 90       	pop	r1
    1ef6:	18 95       	reti

00001ef8 <__vector_20>:
    1ef8:	1f 92       	push	r1
    1efa:	0f 92       	push	r0
    1efc:	0f b6       	in	r0, 0x3f	; 63
    1efe:	0f 92       	push	r0
    1f00:	11 24       	eor	r1, r1
    1f02:	4f 93       	push	r20
    1f04:	5f 93       	push	r21
    1f06:	6f 93       	push	r22
    1f08:	7f 93       	push	r23
    1f0a:	8f 93       	push	r24
    1f0c:	9f 93       	push	r25
    1f0e:	af 93       	push	r26
    1f10:	bf 93       	push	r27
    1f12:	80 91 dc 06 	lds	r24, 0x06DC	; 0x8006dc <_ZL5count>
    1f16:	90 91 dd 06 	lds	r25, 0x06DD	; 0x8006dd <_ZL5count+0x1>
    1f1a:	a0 91 de 06 	lds	r26, 0x06DE	; 0x8006de <_ZL5count+0x2>
    1f1e:	b0 91 df 06 	lds	r27, 0x06DF	; 0x8006df <_ZL5count+0x3>
    1f22:	01 96       	adiw	r24, 0x01	; 1
    1f24:	a1 1d       	adc	r26, r1
    1f26:	b1 1d       	adc	r27, r1
    1f28:	80 93 dc 06 	sts	0x06DC, r24	; 0x8006dc <_ZL5count>
    1f2c:	90 93 dd 06 	sts	0x06DD, r25	; 0x8006dd <_ZL5count+0x1>
    1f30:	a0 93 de 06 	sts	0x06DE, r26	; 0x8006de <_ZL5count+0x2>
    1f34:	b0 93 df 06 	sts	0x06DF, r27	; 0x8006df <_ZL5count+0x3>
    1f38:	40 91 dc 06 	lds	r20, 0x06DC	; 0x8006dc <_ZL5count>
    1f3c:	50 91 dd 06 	lds	r21, 0x06DD	; 0x8006dd <_ZL5count+0x1>
    1f40:	60 91 de 06 	lds	r22, 0x06DE	; 0x8006de <_ZL5count+0x2>
    1f44:	70 91 df 06 	lds	r23, 0x06DF	; 0x8006df <_ZL5count+0x3>
    1f48:	80 91 d4 06 	lds	r24, 0x06D4	; 0x8006d4 <_ZL9max_count>
    1f4c:	90 91 d5 06 	lds	r25, 0x06D5	; 0x8006d5 <_ZL9max_count+0x1>
    1f50:	a0 91 d6 06 	lds	r26, 0x06D6	; 0x8006d6 <_ZL9max_count+0x2>
    1f54:	b0 91 d7 06 	lds	r27, 0x06D7	; 0x8006d7 <_ZL9max_count+0x3>
    1f58:	84 17       	cp	r24, r20
    1f5a:	95 07       	cpc	r25, r21
    1f5c:	a6 07       	cpc	r26, r22
    1f5e:	b7 07       	cpc	r27, r23
    1f60:	d8 f4       	brcc	.+54     	; 0x1f98 <__vector_20+0xa0>
    1f62:	80 91 d8 06 	lds	r24, 0x06D8	; 0x8006d8 <_ZL11GlobalCount>
    1f66:	90 91 d9 06 	lds	r25, 0x06D9	; 0x8006d9 <_ZL11GlobalCount+0x1>
    1f6a:	a0 91 da 06 	lds	r26, 0x06DA	; 0x8006da <_ZL11GlobalCount+0x2>
    1f6e:	b0 91 db 06 	lds	r27, 0x06DB	; 0x8006db <_ZL11GlobalCount+0x3>
    1f72:	04 96       	adiw	r24, 0x04	; 4
    1f74:	a1 1d       	adc	r26, r1
    1f76:	b1 1d       	adc	r27, r1
    1f78:	80 93 d8 06 	sts	0x06D8, r24	; 0x8006d8 <_ZL11GlobalCount>
    1f7c:	90 93 d9 06 	sts	0x06D9, r25	; 0x8006d9 <_ZL11GlobalCount+0x1>
    1f80:	a0 93 da 06 	sts	0x06DA, r26	; 0x8006da <_ZL11GlobalCount+0x2>
    1f84:	b0 93 db 06 	sts	0x06DB, r27	; 0x8006db <_ZL11GlobalCount+0x3>
    1f88:	10 92 dc 06 	sts	0x06DC, r1	; 0x8006dc <_ZL5count>
    1f8c:	10 92 dd 06 	sts	0x06DD, r1	; 0x8006dd <_ZL5count+0x1>
    1f90:	10 92 de 06 	sts	0x06DE, r1	; 0x8006de <_ZL5count+0x2>
    1f94:	10 92 df 06 	sts	0x06DF, r1	; 0x8006df <_ZL5count+0x3>
    1f98:	16 ba       	out	0x16, r1	; 22
    1f9a:	bf 91       	pop	r27
    1f9c:	af 91       	pop	r26
    1f9e:	9f 91       	pop	r25
    1fa0:	8f 91       	pop	r24
    1fa2:	7f 91       	pop	r23
    1fa4:	6f 91       	pop	r22
    1fa6:	5f 91       	pop	r21
    1fa8:	4f 91       	pop	r20
    1faa:	0f 90       	pop	r0
    1fac:	0f be       	out	0x3f, r0	; 63
    1fae:	0f 90       	pop	r0
    1fb0:	1f 90       	pop	r1
    1fb2:	18 95       	reti

00001fb4 <_ZN12SimpleTimer16millisEv>:
    1fb4:	60 91 d8 06 	lds	r22, 0x06D8	; 0x8006d8 <_ZL11GlobalCount>
    1fb8:	70 91 d9 06 	lds	r23, 0x06D9	; 0x8006d9 <_ZL11GlobalCount+0x1>
    1fbc:	80 91 da 06 	lds	r24, 0x06DA	; 0x8006da <_ZL11GlobalCount+0x2>
    1fc0:	90 91 db 06 	lds	r25, 0x06DB	; 0x8006db <_ZL11GlobalCount+0x3>
    1fc4:	08 95       	ret

00001fc6 <_ZN12SimpleTimer15startEv>:
    1fc6:	ef e6       	ldi	r30, 0x6F	; 111
    1fc8:	f0 e0       	ldi	r31, 0x00	; 0
    1fca:	80 81       	ld	r24, Z
    1fcc:	81 60       	ori	r24, 0x01	; 1
    1fce:	80 83       	st	Z, r24
    1fd0:	e1 e8       	ldi	r30, 0x81	; 129
    1fd2:	f0 e0       	ldi	r31, 0x00	; 0
    1fd4:	80 81       	ld	r24, Z
    1fd6:	81 60       	ori	r24, 0x01	; 1
    1fd8:	80 83       	st	Z, r24
    1fda:	08 95       	ret

00001fdc <_ZN12SimpleTimer1C1Ev>:
    1fdc:	f4 cf       	rjmp	.-24     	; 0x1fc6 <_ZN12SimpleTimer15startEv>
    1fde:	08 95       	ret

00001fe0 <_ZN12SimpleTimer112set_durationEm>:
    1fe0:	a0 e8       	ldi	r26, 0x80	; 128
    1fe2:	be e3       	ldi	r27, 0x3E	; 62
    1fe4:	9a 01       	movw	r18, r20
    1fe6:	ab 01       	movw	r20, r22
    1fe8:	a0 d4       	rcall	.+2368   	; 0x292a <__muluhisi3>
    1fea:	2f ef       	ldi	r18, 0xFF	; 255
    1fec:	3f ef       	ldi	r19, 0xFF	; 255
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	50 e0       	ldi	r21, 0x00	; 0
    1ff2:	70 d4       	rcall	.+2272   	; 0x28d4 <__udivmodsi4>
    1ff4:	20 93 d4 06 	sts	0x06D4, r18	; 0x8006d4 <_ZL9max_count>
    1ff8:	30 93 d5 06 	sts	0x06D5, r19	; 0x8006d5 <_ZL9max_count+0x1>
    1ffc:	40 93 d6 06 	sts	0x06D6, r20	; 0x8006d6 <_ZL9max_count+0x2>
    2000:	50 93 d7 06 	sts	0x06D7, r21	; 0x8006d7 <_ZL9max_count+0x3>
    2004:	08 95       	ret

00002006 <_Z21timer0_setClockSource12CLOCK_SOURCE>:
    2006:	e8 2f       	mov	r30, r24
    2008:	80 93 e0 06 	sts	0x06E0, r24	; 0x8006e0 <_ZL2cs>
    200c:	85 b5       	in	r24, 0x25	; 37
    200e:	88 7f       	andi	r24, 0xF8	; 248
    2010:	85 bd       	out	0x25, r24	; 37
    2012:	8e 2f       	mov	r24, r30
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	88 30       	cpi	r24, 0x08	; 8
    2018:	91 05       	cpc	r25, r1
    201a:	10 f5       	brcc	.+68     	; 0x2060 <_Z21timer0_setClockSource12CLOCK_SOURCE+0x5a>
    201c:	fc 01       	movw	r30, r24
    201e:	e8 56       	subi	r30, 0x68	; 104
    2020:	ff 4f       	sbci	r31, 0xFF	; 255
    2022:	7a c4       	rjmp	.+2292   	; 0x2918 <__tablejump2__>
    2024:	85 b5       	in	r24, 0x25	; 37
    2026:	85 bd       	out	0x25, r24	; 37
    2028:	08 95       	ret
    202a:	85 b5       	in	r24, 0x25	; 37
    202c:	81 60       	ori	r24, 0x01	; 1
    202e:	85 bd       	out	0x25, r24	; 37
    2030:	08 95       	ret
    2032:	85 b5       	in	r24, 0x25	; 37
    2034:	82 60       	ori	r24, 0x02	; 2
    2036:	85 bd       	out	0x25, r24	; 37
    2038:	08 95       	ret
    203a:	85 b5       	in	r24, 0x25	; 37
    203c:	83 60       	ori	r24, 0x03	; 3
    203e:	85 bd       	out	0x25, r24	; 37
    2040:	08 95       	ret
    2042:	85 b5       	in	r24, 0x25	; 37
    2044:	84 60       	ori	r24, 0x04	; 4
    2046:	85 bd       	out	0x25, r24	; 37
    2048:	08 95       	ret
    204a:	85 b5       	in	r24, 0x25	; 37
    204c:	85 60       	ori	r24, 0x05	; 5
    204e:	85 bd       	out	0x25, r24	; 37
    2050:	08 95       	ret
    2052:	85 b5       	in	r24, 0x25	; 37
    2054:	86 60       	ori	r24, 0x06	; 6
    2056:	85 bd       	out	0x25, r24	; 37
    2058:	08 95       	ret
    205a:	85 b5       	in	r24, 0x25	; 37
    205c:	87 60       	ori	r24, 0x07	; 7
    205e:	85 bd       	out	0x25, r24	; 37
    2060:	08 95       	ret

00002062 <_Z36timer0_disableTimerOverflowInterruptv>:
    2062:	ee e6       	ldi	r30, 0x6E	; 110
    2064:	f0 e0       	ldi	r31, 0x00	; 0
    2066:	80 81       	ld	r24, Z
    2068:	8e 7f       	andi	r24, 0xFE	; 254
    206a:	80 83       	st	Z, r24
    206c:	08 95       	ret

0000206e <__vector_25>:
    206e:	1f 92       	push	r1
    2070:	0f 92       	push	r0
    2072:	0f b6       	in	r0, 0x3f	; 63
    2074:	0f 92       	push	r0
    2076:	11 24       	eor	r1, r1
    2078:	0b b6       	in	r0, 0x3b	; 59
    207a:	0f 92       	push	r0
    207c:	2f 93       	push	r18
    207e:	8f 93       	push	r24
    2080:	9f 93       	push	r25
    2082:	ef 93       	push	r30
    2084:	ff 93       	push	r31
    2086:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    208a:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    208e:	8c 71       	andi	r24, 0x1C	; 28
    2090:	e0 91 e3 06 	lds	r30, 0x06E3	; 0x8006e3 <_ZL12receive_head>
    2094:	ef 5f       	subi	r30, 0xFF	; 255
    2096:	ef 71       	andi	r30, 0x1F	; 31
    2098:	90 91 e2 06 	lds	r25, 0x06E2	; 0x8006e2 <_ZL12receive_tail>
    209c:	e9 17       	cp	r30, r25
    209e:	39 f0       	breq	.+14     	; 0x20ae <__vector_25+0x40>
    20a0:	e0 93 e3 06 	sts	0x06E3, r30	; 0x8006e3 <_ZL12receive_head>
    20a4:	f0 e0       	ldi	r31, 0x00	; 0
    20a6:	ec 51       	subi	r30, 0x1C	; 28
    20a8:	f9 4f       	sbci	r31, 0xF9	; 249
    20aa:	20 83       	st	Z, r18
    20ac:	01 c0       	rjmp	.+2      	; 0x20b0 <__vector_25+0x42>
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	90 91 e1 06 	lds	r25, 0x06E1	; 0x8006e1 <_ZL18last_receive_error>
    20b4:	89 2b       	or	r24, r25
    20b6:	80 93 e1 06 	sts	0x06E1, r24	; 0x8006e1 <_ZL18last_receive_error>
    20ba:	ff 91       	pop	r31
    20bc:	ef 91       	pop	r30
    20be:	9f 91       	pop	r25
    20c0:	8f 91       	pop	r24
    20c2:	2f 91       	pop	r18
    20c4:	0f 90       	pop	r0
    20c6:	0b be       	out	0x3b, r0	; 59
    20c8:	0f 90       	pop	r0
    20ca:	0f be       	out	0x3f, r0	; 63
    20cc:	0f 90       	pop	r0
    20ce:	1f 90       	pop	r1
    20d0:	18 95       	reti

000020d2 <__vector_26>:
    20d2:	1f 92       	push	r1
    20d4:	0f 92       	push	r0
    20d6:	0f b6       	in	r0, 0x3f	; 63
    20d8:	0f 92       	push	r0
    20da:	11 24       	eor	r1, r1
    20dc:	0b b6       	in	r0, 0x3b	; 59
    20de:	0f 92       	push	r0
    20e0:	8f 93       	push	r24
    20e2:	9f 93       	push	r25
    20e4:	ef 93       	push	r30
    20e6:	ff 93       	push	r31
    20e8:	90 91 05 07 	lds	r25, 0x0705	; 0x800705 <_ZL13transmit_head>
    20ec:	80 91 04 07 	lds	r24, 0x0704	; 0x800704 <_ZL13transmit_tail>
    20f0:	98 17       	cp	r25, r24
    20f2:	69 f0       	breq	.+26     	; 0x210e <__vector_26+0x3c>
    20f4:	e0 91 04 07 	lds	r30, 0x0704	; 0x800704 <_ZL13transmit_tail>
    20f8:	ef 5f       	subi	r30, 0xFF	; 255
    20fa:	ef 71       	andi	r30, 0x1F	; 31
    20fc:	e0 93 04 07 	sts	0x0704, r30	; 0x800704 <_ZL13transmit_tail>
    2100:	f0 e0       	ldi	r31, 0x00	; 0
    2102:	ea 5f       	subi	r30, 0xFA	; 250
    2104:	f8 4f       	sbci	r31, 0xF8	; 248
    2106:	80 81       	ld	r24, Z
    2108:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    210c:	05 c0       	rjmp	.+10     	; 0x2118 <__vector_26+0x46>
    210e:	e1 ec       	ldi	r30, 0xC1	; 193
    2110:	f0 e0       	ldi	r31, 0x00	; 0
    2112:	80 81       	ld	r24, Z
    2114:	8f 7d       	andi	r24, 0xDF	; 223
    2116:	80 83       	st	Z, r24
    2118:	ff 91       	pop	r31
    211a:	ef 91       	pop	r30
    211c:	9f 91       	pop	r25
    211e:	8f 91       	pop	r24
    2120:	0f 90       	pop	r0
    2122:	0b be       	out	0x3b, r0	; 59
    2124:	0f 90       	pop	r0
    2126:	0f be       	out	0x3f, r0	; 63
    2128:	0f 90       	pop	r0
    212a:	1f 90       	pop	r1
    212c:	18 95       	reti

0000212e <_Z16uart0_initializej>:
    212e:	10 92 05 07 	sts	0x0705, r1	; 0x800705 <_ZL13transmit_head>
    2132:	10 92 04 07 	sts	0x0704, r1	; 0x800704 <_ZL13transmit_tail>
    2136:	10 92 e3 06 	sts	0x06E3, r1	; 0x8006e3 <_ZL12receive_head>
    213a:	10 92 e2 06 	sts	0x06E2, r1	; 0x8006e2 <_ZL12receive_tail>
    213e:	90 78       	andi	r25, 0x80	; 128
    2140:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    2144:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    2148:	88 e9       	ldi	r24, 0x98	; 152
    214a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    214e:	86 e0       	ldi	r24, 0x06	; 6
    2150:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    2154:	08 95       	ret

00002156 <__vector_36>:
    2156:	1f 92       	push	r1
    2158:	0f 92       	push	r0
    215a:	0f b6       	in	r0, 0x3f	; 63
    215c:	0f 92       	push	r0
    215e:	11 24       	eor	r1, r1
    2160:	0b b6       	in	r0, 0x3b	; 59
    2162:	0f 92       	push	r0
    2164:	2f 93       	push	r18
    2166:	8f 93       	push	r24
    2168:	9f 93       	push	r25
    216a:	ef 93       	push	r30
    216c:	ff 93       	push	r31
    216e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    2172:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    2176:	8c 71       	andi	r24, 0x1C	; 28
    2178:	e0 91 28 07 	lds	r30, 0x0728	; 0x800728 <_ZL12receive_head>
    217c:	ef 5f       	subi	r30, 0xFF	; 255
    217e:	90 91 27 07 	lds	r25, 0x0727	; 0x800727 <_ZL12receive_tail>
    2182:	e9 17       	cp	r30, r25
    2184:	39 f0       	breq	.+14     	; 0x2194 <__vector_36+0x3e>
    2186:	e0 93 28 07 	sts	0x0728, r30	; 0x800728 <_ZL12receive_head>
    218a:	f0 e0       	ldi	r31, 0x00	; 0
    218c:	e7 5d       	subi	r30, 0xD7	; 215
    218e:	f8 4f       	sbci	r31, 0xF8	; 248
    2190:	20 83       	st	Z, r18
    2192:	01 c0       	rjmp	.+2      	; 0x2196 <__vector_36+0x40>
    2194:	82 e0       	ldi	r24, 0x02	; 2
    2196:	90 91 26 07 	lds	r25, 0x0726	; 0x800726 <_ZL18last_receive_error>
    219a:	89 2b       	or	r24, r25
    219c:	80 93 26 07 	sts	0x0726, r24	; 0x800726 <_ZL18last_receive_error>
    21a0:	ff 91       	pop	r31
    21a2:	ef 91       	pop	r30
    21a4:	9f 91       	pop	r25
    21a6:	8f 91       	pop	r24
    21a8:	2f 91       	pop	r18
    21aa:	0f 90       	pop	r0
    21ac:	0b be       	out	0x3b, r0	; 59
    21ae:	0f 90       	pop	r0
    21b0:	0f be       	out	0x3f, r0	; 63
    21b2:	0f 90       	pop	r0
    21b4:	1f 90       	pop	r1
    21b6:	18 95       	reti

000021b8 <__vector_37>:
    21b8:	1f 92       	push	r1
    21ba:	0f 92       	push	r0
    21bc:	0f b6       	in	r0, 0x3f	; 63
    21be:	0f 92       	push	r0
    21c0:	11 24       	eor	r1, r1
    21c2:	0b b6       	in	r0, 0x3b	; 59
    21c4:	0f 92       	push	r0
    21c6:	8f 93       	push	r24
    21c8:	9f 93       	push	r25
    21ca:	ef 93       	push	r30
    21cc:	ff 93       	push	r31
    21ce:	90 91 2a 08 	lds	r25, 0x082A	; 0x80082a <_ZL13transmit_head>
    21d2:	80 91 29 08 	lds	r24, 0x0829	; 0x800829 <_ZL13transmit_tail>
    21d6:	98 17       	cp	r25, r24
    21d8:	61 f0       	breq	.+24     	; 0x21f2 <__vector_37+0x3a>
    21da:	e0 91 29 08 	lds	r30, 0x0829	; 0x800829 <_ZL13transmit_tail>
    21de:	ef 5f       	subi	r30, 0xFF	; 255
    21e0:	e0 93 29 08 	sts	0x0829, r30	; 0x800829 <_ZL13transmit_tail>
    21e4:	f0 e0       	ldi	r31, 0x00	; 0
    21e6:	e5 5d       	subi	r30, 0xD5	; 213
    21e8:	f7 4f       	sbci	r31, 0xF7	; 247
    21ea:	80 81       	ld	r24, Z
    21ec:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    21f0:	05 c0       	rjmp	.+10     	; 0x21fc <__vector_37+0x44>
    21f2:	e9 ec       	ldi	r30, 0xC9	; 201
    21f4:	f0 e0       	ldi	r31, 0x00	; 0
    21f6:	80 81       	ld	r24, Z
    21f8:	8f 7d       	andi	r24, 0xDF	; 223
    21fa:	80 83       	st	Z, r24
    21fc:	ff 91       	pop	r31
    21fe:	ef 91       	pop	r30
    2200:	9f 91       	pop	r25
    2202:	8f 91       	pop	r24
    2204:	0f 90       	pop	r0
    2206:	0b be       	out	0x3b, r0	; 59
    2208:	0f 90       	pop	r0
    220a:	0f be       	out	0x3f, r0	; 63
    220c:	0f 90       	pop	r0
    220e:	1f 90       	pop	r1
    2210:	18 95       	reti

00002212 <_Z16uart1_initializej>:
    2212:	10 92 2a 08 	sts	0x082A, r1	; 0x80082a <_ZL13transmit_head>
    2216:	10 92 29 08 	sts	0x0829, r1	; 0x800829 <_ZL13transmit_tail>
    221a:	10 92 28 07 	sts	0x0728, r1	; 0x800728 <_ZL12receive_head>
    221e:	10 92 27 07 	sts	0x0727, r1	; 0x800727 <_ZL12receive_tail>
    2222:	90 78       	andi	r25, 0x80	; 128
    2224:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    2228:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    222c:	88 e9       	ldi	r24, 0x98	; 152
    222e:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    2232:	86 e0       	ldi	r24, 0x06	; 6
    2234:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>
    2238:	08 95       	ret

0000223a <_Z15uart1_read_bytev>:
    223a:	90 91 28 07 	lds	r25, 0x0728	; 0x800728 <_ZL12receive_head>
    223e:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <_ZL12receive_tail>
    2242:	98 17       	cp	r25, r24
    2244:	a1 f0       	breq	.+40     	; 0x226e <_Z15uart1_read_bytev+0x34>
    2246:	80 91 27 07 	lds	r24, 0x0727	; 0x800727 <_ZL12receive_tail>
    224a:	8f 5f       	subi	r24, 0xFF	; 255
    224c:	e8 2f       	mov	r30, r24
    224e:	f0 e0       	ldi	r31, 0x00	; 0
    2250:	e7 5d       	subi	r30, 0xD7	; 215
    2252:	f8 4f       	sbci	r31, 0xF8	; 248
    2254:	20 81       	ld	r18, Z
    2256:	80 93 27 07 	sts	0x0727, r24	; 0x800727 <_ZL12receive_tail>
    225a:	80 91 26 07 	lds	r24, 0x0726	; 0x800726 <_ZL18last_receive_error>
    225e:	10 92 26 07 	sts	0x0726, r1	; 0x800726 <_ZL18last_receive_error>
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	98 2f       	mov	r25, r24
    2266:	88 27       	eor	r24, r24
    2268:	82 0f       	add	r24, r18
    226a:	91 1d       	adc	r25, r1
    226c:	08 95       	ret
    226e:	80 e0       	ldi	r24, 0x00	; 0
    2270:	91 e0       	ldi	r25, 0x01	; 1
    2272:	08 95       	ret

00002274 <__vector_51>:
	data = receive_buffer[new_tail];
	receive_tail = new_tail;
	error = last_receive_error;
	last_receive_error = 0;
	return (error << 8) + data;
}
    2274:	1f 92       	push	r1
    2276:	0f 92       	push	r0
    2278:	0f b6       	in	r0, 0x3f	; 63
    227a:	0f 92       	push	r0
    227c:	11 24       	eor	r1, r1
    227e:	0b b6       	in	r0, 0x3b	; 59
    2280:	0f 92       	push	r0
    2282:	2f 93       	push	r18
    2284:	8f 93       	push	r24
    2286:	9f 93       	push	r25
    2288:	ef 93       	push	r30
    228a:	ff 93       	push	r31
    228c:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7e00d0>
    2290:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
    2294:	8c 71       	andi	r24, 0x1C	; 28
    2296:	e0 91 2d 09 	lds	r30, 0x092D	; 0x80092d <_ZL12receive_head>
    229a:	ef 5f       	subi	r30, 0xFF	; 255
    229c:	ef 71       	andi	r30, 0x1F	; 31
    229e:	90 91 2c 09 	lds	r25, 0x092C	; 0x80092c <_ZL12receive_tail>
    22a2:	e9 17       	cp	r30, r25
    22a4:	39 f0       	breq	.+14     	; 0x22b4 <__vector_51+0x40>
    22a6:	e0 93 2d 09 	sts	0x092D, r30	; 0x80092d <_ZL12receive_head>
    22aa:	f0 e0       	ldi	r31, 0x00	; 0
    22ac:	e2 5d       	subi	r30, 0xD2	; 210
    22ae:	f6 4f       	sbci	r31, 0xF6	; 246
    22b0:	20 83       	st	Z, r18
    22b2:	01 c0       	rjmp	.+2      	; 0x22b6 <__vector_51+0x42>
    22b4:	82 e0       	ldi	r24, 0x02	; 2
    22b6:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <_ZL18last_receive_error>
    22ba:	89 2b       	or	r24, r25
    22bc:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_ZL18last_receive_error>
    22c0:	ff 91       	pop	r31
    22c2:	ef 91       	pop	r30
    22c4:	9f 91       	pop	r25
    22c6:	8f 91       	pop	r24
    22c8:	2f 91       	pop	r18
    22ca:	0f 90       	pop	r0
    22cc:	0b be       	out	0x3b, r0	; 59
    22ce:	0f 90       	pop	r0
    22d0:	0f be       	out	0x3f, r0	; 63
    22d2:	0f 90       	pop	r0
    22d4:	1f 90       	pop	r1
    22d6:	18 95       	reti

000022d8 <__vector_52>:
    22d8:	1f 92       	push	r1
    22da:	0f 92       	push	r0
    22dc:	0f b6       	in	r0, 0x3f	; 63
    22de:	0f 92       	push	r0
    22e0:	11 24       	eor	r1, r1
    22e2:	0b b6       	in	r0, 0x3b	; 59
    22e4:	0f 92       	push	r0
    22e6:	8f 93       	push	r24
    22e8:	9f 93       	push	r25
    22ea:	ef 93       	push	r30
    22ec:	ff 93       	push	r31
    22ee:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <_ZL13transmit_head>
    22f2:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <_ZL13transmit_tail>
    22f6:	98 17       	cp	r25, r24
    22f8:	69 f0       	breq	.+26     	; 0x2314 <__vector_52+0x3c>
    22fa:	e0 91 4e 09 	lds	r30, 0x094E	; 0x80094e <_ZL13transmit_tail>
    22fe:	ef 5f       	subi	r30, 0xFF	; 255
    2300:	ef 71       	andi	r30, 0x1F	; 31
    2302:	e0 93 4e 09 	sts	0x094E, r30	; 0x80094e <_ZL13transmit_tail>
    2306:	f0 e0       	ldi	r31, 0x00	; 0
    2308:	e0 5b       	subi	r30, 0xB0	; 176
    230a:	f6 4f       	sbci	r31, 0xF6	; 246
    230c:	80 81       	ld	r24, Z
    230e:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
    2312:	05 c0       	rjmp	.+10     	; 0x231e <__vector_52+0x46>
    2314:	e1 ed       	ldi	r30, 0xD1	; 209
    2316:	f0 e0       	ldi	r31, 0x00	; 0
    2318:	80 81       	ld	r24, Z
    231a:	8f 7d       	andi	r24, 0xDF	; 223
    231c:	80 83       	st	Z, r24
    231e:	ff 91       	pop	r31
    2320:	ef 91       	pop	r30
    2322:	9f 91       	pop	r25
    2324:	8f 91       	pop	r24
    2326:	0f 90       	pop	r0
    2328:	0b be       	out	0x3b, r0	; 59
    232a:	0f 90       	pop	r0
    232c:	0f be       	out	0x3f, r0	; 63
    232e:	0f 90       	pop	r0
    2330:	1f 90       	pop	r1
    2332:	18 95       	reti

00002334 <_Z16uart2_initializej>:
    2334:	10 92 4f 09 	sts	0x094F, r1	; 0x80094f <_ZL13transmit_head>
    2338:	10 92 4e 09 	sts	0x094E, r1	; 0x80094e <_ZL13transmit_tail>
    233c:	10 92 2d 09 	sts	0x092D, r1	; 0x80092d <_ZL12receive_head>
    2340:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_ZL12receive_tail>
    2344:	90 78       	andi	r25, 0x80	; 128
    2346:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7e00d5>
    234a:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7e00d4>
    234e:	88 e9       	ldi	r24, 0x98	; 152
    2350:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7e00d1>
    2354:	86 e0       	ldi	r24, 0x06	; 6
    2356:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7e00d2>
    235a:	60 e0       	ldi	r22, 0x00	; 0
    235c:	70 e0       	ldi	r23, 0x00	; 0
    235e:	8c ec       	ldi	r24, 0xCC	; 204
    2360:	91 e1       	ldi	r25, 0x11	; 17
    2362:	fc d2       	rcall	.+1528   	; 0x295c <fdevopen>
    2364:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <__iob+0x3>
    2368:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <__iob+0x2>
    236c:	08 95       	ret

0000236e <_Z15uart2_send_byteh>:
/*--------------------- Functions for Writing to Buffer ----------------------*/

void uart2_send_byte (uint8_t data)
{
	uint8_t new_head;
	new_head  = (transmit_head + 1) & UART2_BUFFER_MASK;
    236e:	20 91 4f 09 	lds	r18, 0x094F	; 0x80094f <_ZL13transmit_head>
    2372:	2f 5f       	subi	r18, 0xFF	; 255
    2374:	2f 71       	andi	r18, 0x1F	; 31
	while (new_head == transmit_tail) {} // wait for free space in buffer
    2376:	90 91 4e 09 	lds	r25, 0x094E	; 0x80094e <_ZL13transmit_tail>
    237a:	29 17       	cp	r18, r25
    237c:	e1 f3       	breq	.-8      	; 0x2376 <_Z15uart2_send_byteh+0x8>
	transmit_buffer[new_head] = data;
    237e:	e2 2f       	mov	r30, r18
    2380:	f0 e0       	ldi	r31, 0x00	; 0
    2382:	e0 5b       	subi	r30, 0xB0	; 176
    2384:	f6 4f       	sbci	r31, 0xF6	; 246
    2386:	80 83       	st	Z, r24
	transmit_head = new_head;
    2388:	20 93 4f 09 	sts	0x094F, r18	; 0x80094f <_ZL13transmit_head>
	UART2_CONTROL_B |= (1 << UDRIE2); // enable data register interrupt
    238c:	e1 ed       	ldi	r30, 0xD1	; 209
    238e:	f0 e0       	ldi	r31, 0x00	; 0
    2390:	80 81       	ld	r24, Z
    2392:	80 62       	ori	r24, 0x20	; 32
    2394:	80 83       	st	Z, r24
    2396:	08 95       	ret

00002398 <uart_putchar>:


int uart_putchar(char c, FILE *stream)
{

	if (c != '\n') {
    2398:	8a 30       	cpi	r24, 0x0A	; 10
    239a:	11 f0       	breq	.+4      	; 0x23a0 <uart_putchar+0x8>
		uart2_send_byte(c);
    239c:	e8 df       	rcall	.-48     	; 0x236e <_Z15uart2_send_byteh>
    239e:	02 c0       	rjmp	.+4      	; 0x23a4 <uart_putchar+0xc>
	} else {
		uart2_send_byte('\r');
    23a0:	8d e0       	ldi	r24, 0x0D	; 13
    23a2:	e5 df       	rcall	.-54     	; 0x236e <_Z15uart2_send_byteh>
	}

	return 0;
    23a4:	80 e0       	ldi	r24, 0x00	; 0
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	08 95       	ret

000023aa <__vector_54>:
static volatile uint8_t last_receive_error;

/*------------------------ Interrupt Service Routines ------------------------*/

ISR (UART3_RECEIVE_INTERRUPT)
{
    23aa:	1f 92       	push	r1
    23ac:	0f 92       	push	r0
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	0f 92       	push	r0
    23b2:	11 24       	eor	r1, r1
    23b4:	0b b6       	in	r0, 0x3b	; 59
    23b6:	0f 92       	push	r0
    23b8:	2f 93       	push	r18
    23ba:	8f 93       	push	r24
    23bc:	9f 93       	push	r25
    23be:	ef 93       	push	r30
    23c0:	ff 93       	push	r31
	uint8_t new_head, data, status, error;
	status = UART3_STATUS;
    23c2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__DATA_REGION_ORIGIN__+0x30>
	data = UART3_DATA;
    23c6:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__DATA_REGION_ORIGIN__+0x36>

	// detect frame error, data overrun, or parity error
	error = status & ((1 << FE3) | (1 << DOR3)| (1 << UPE3));
    23ca:	8c 71       	andi	r24, 0x1C	; 28

	new_head = (receive_head + 1) & UART3_BUFFER_MASK;
    23cc:	e0 91 72 09 	lds	r30, 0x0972	; 0x800972 <_ZL12receive_head>
    23d0:	ef 5f       	subi	r30, 0xFF	; 255
    23d2:	ef 71       	andi	r30, 0x1F	; 31
	if (new_head == receive_tail)
    23d4:	90 91 71 09 	lds	r25, 0x0971	; 0x800971 <_ZL12receive_tail>
    23d8:	e9 17       	cp	r30, r25
    23da:	39 f0       	breq	.+14     	; 0x23ea <__vector_54+0x40>
		error = UART3_BUFFER_OVERFLOW >> 8;
	else
	{
		receive_head = new_head;
    23dc:	e0 93 72 09 	sts	0x0972, r30	; 0x800972 <_ZL12receive_head>
		receive_buffer[new_head] = data;
    23e0:	f0 e0       	ldi	r31, 0x00	; 0
    23e2:	ed 58       	subi	r30, 0x8D	; 141
    23e4:	f6 4f       	sbci	r31, 0xF6	; 246
    23e6:	20 83       	st	Z, r18
    23e8:	01 c0       	rjmp	.+2      	; 0x23ec <__vector_54+0x42>
	// detect frame error, data overrun, or parity error
	error = status & ((1 << FE3) | (1 << DOR3)| (1 << UPE3));

	new_head = (receive_head + 1) & UART3_BUFFER_MASK;
	if (new_head == receive_tail)
		error = UART3_BUFFER_OVERFLOW >> 8;
    23ea:	82 e0       	ldi	r24, 0x02	; 2
	else
	{
		receive_head = new_head;
		receive_buffer[new_head] = data;
	}
	last_receive_error |= error;
    23ec:	90 91 70 09 	lds	r25, 0x0970	; 0x800970 <_ZL18last_receive_error>
    23f0:	89 2b       	or	r24, r25
    23f2:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <_ZL18last_receive_error>
}
    23f6:	ff 91       	pop	r31
    23f8:	ef 91       	pop	r30
    23fa:	9f 91       	pop	r25
    23fc:	8f 91       	pop	r24
    23fe:	2f 91       	pop	r18
    2400:	0f 90       	pop	r0
    2402:	0b be       	out	0x3b, r0	; 59
    2404:	0f 90       	pop	r0
    2406:	0f be       	out	0x3f, r0	; 63
    2408:	0f 90       	pop	r0
    240a:	1f 90       	pop	r1
    240c:	18 95       	reti

0000240e <__vector_55>:

ISR (UART3_TRANSMIT_INTERRUPT)
{
    240e:	1f 92       	push	r1
    2410:	0f 92       	push	r0
    2412:	0f b6       	in	r0, 0x3f	; 63
    2414:	0f 92       	push	r0
    2416:	11 24       	eor	r1, r1
    2418:	0b b6       	in	r0, 0x3b	; 59
    241a:	0f 92       	push	r0
    241c:	8f 93       	push	r24
    241e:	9f 93       	push	r25
    2420:	ef 93       	push	r30
    2422:	ff 93       	push	r31
	uint8_t new_tail;
	if (transmit_head != transmit_tail)
    2424:	90 91 94 09 	lds	r25, 0x0994	; 0x800994 <_ZL13transmit_head>
    2428:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <_ZL13transmit_tail>
    242c:	98 17       	cp	r25, r24
    242e:	69 f0       	breq	.+26     	; 0x244a <__vector_55+0x3c>
	{
		new_tail = (transmit_tail + 1) & UART3_BUFFER_MASK;
    2430:	e0 91 93 09 	lds	r30, 0x0993	; 0x800993 <_ZL13transmit_tail>
    2434:	ef 5f       	subi	r30, 0xFF	; 255
    2436:	ef 71       	andi	r30, 0x1F	; 31
		transmit_tail = new_tail;
    2438:	e0 93 93 09 	sts	0x0993, r30	; 0x800993 <_ZL13transmit_tail>
		UART3_DATA = transmit_buffer[new_tail]; // transmit
    243c:	f0 e0       	ldi	r31, 0x00	; 0
    243e:	eb 56       	subi	r30, 0x6B	; 107
    2440:	f6 4f       	sbci	r31, 0xF6	; 246
    2442:	80 81       	ld	r24, Z
    2444:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__DATA_REGION_ORIGIN__+0x36>
    2448:	05 c0       	rjmp	.+10     	; 0x2454 <__vector_55+0x46>
	}
	else
		UART3_CONTROL_B &= ~(1 << UDRIE3); // buffer empty so end transmission
    244a:	e1 e3       	ldi	r30, 0x31	; 49
    244c:	f1 e0       	ldi	r31, 0x01	; 1
    244e:	80 81       	ld	r24, Z
    2450:	8f 7d       	andi	r24, 0xDF	; 223
    2452:	80 83       	st	Z, r24
}
    2454:	ff 91       	pop	r31
    2456:	ef 91       	pop	r30
    2458:	9f 91       	pop	r25
    245a:	8f 91       	pop	r24
    245c:	0f 90       	pop	r0
    245e:	0b be       	out	0x3b, r0	; 59
    2460:	0f 90       	pop	r0
    2462:	0f be       	out	0x3f, r0	; 63
    2464:	0f 90       	pop	r0
    2466:	1f 90       	pop	r1
    2468:	18 95       	reti

0000246a <_Z16uart3_initializej>:

/*------------------------------ Initialization ------------------------------*/

void uart3_initialize (uint16_t baudrate)
{
	transmit_head = 0;
    246a:	10 92 94 09 	sts	0x0994, r1	; 0x800994 <_ZL13transmit_head>
	transmit_tail = 0;
    246e:	10 92 93 09 	sts	0x0993, r1	; 0x800993 <_ZL13transmit_tail>
	receive_head = 0;
    2472:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <_ZL12receive_head>
	receive_tail = 0;
    2476:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <_ZL12receive_tail>

	UBRR3H = (uint8_t)((baudrate >> 8) & 0x80) ;
    247a:	90 78       	andi	r25, 0x80	; 128
    247c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__DATA_REGION_ORIGIN__+0x35>
	UBRR3L = (uint8_t)(baudrate & 0x00FF);
    2480:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__DATA_REGION_ORIGIN__+0x34>

	// set enable bits
	UART3_CONTROL_B = (1 << RXCIE3) | (1 << RXEN3) | (1 << TXEN3);
    2484:	88 e9       	ldi	r24, 0x98	; 152
    2486:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__DATA_REGION_ORIGIN__+0x31>

	// set frame format (asynchronous, 8 bits of data, no parity bit, 1 stop bit)
	UART3_CONTROL_C = (1 << UCSZ31) | (1 << UCSZ30);
    248a:	86 e0       	ldi	r24, 0x06	; 6
    248c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__DATA_REGION_ORIGIN__+0x32>
    2490:	08 95       	ret

00002492 <__subsf3>:
    2492:	50 58       	subi	r21, 0x80	; 128

00002494 <__addsf3>:
    2494:	bb 27       	eor	r27, r27
    2496:	aa 27       	eor	r26, r26
    2498:	0e d0       	rcall	.+28     	; 0x24b6 <__addsf3x>
    249a:	70 c1       	rjmp	.+736    	; 0x277c <__fp_round>
    249c:	61 d1       	rcall	.+706    	; 0x2760 <__fp_pscA>
    249e:	30 f0       	brcs	.+12     	; 0x24ac <__addsf3+0x18>
    24a0:	66 d1       	rcall	.+716    	; 0x276e <__fp_pscB>
    24a2:	20 f0       	brcs	.+8      	; 0x24ac <__addsf3+0x18>
    24a4:	31 f4       	brne	.+12     	; 0x24b2 <__addsf3+0x1e>
    24a6:	9f 3f       	cpi	r25, 0xFF	; 255
    24a8:	11 f4       	brne	.+4      	; 0x24ae <__addsf3+0x1a>
    24aa:	1e f4       	brtc	.+6      	; 0x24b2 <__addsf3+0x1e>
    24ac:	56 c1       	rjmp	.+684    	; 0x275a <__fp_nan>
    24ae:	0e f4       	brtc	.+2      	; 0x24b2 <__addsf3+0x1e>
    24b0:	e0 95       	com	r30
    24b2:	e7 fb       	bst	r30, 7
    24b4:	4c c1       	rjmp	.+664    	; 0x274e <__fp_inf>

000024b6 <__addsf3x>:
    24b6:	e9 2f       	mov	r30, r25
    24b8:	72 d1       	rcall	.+740    	; 0x279e <__fp_split3>
    24ba:	80 f3       	brcs	.-32     	; 0x249c <__addsf3+0x8>
    24bc:	ba 17       	cp	r27, r26
    24be:	62 07       	cpc	r22, r18
    24c0:	73 07       	cpc	r23, r19
    24c2:	84 07       	cpc	r24, r20
    24c4:	95 07       	cpc	r25, r21
    24c6:	18 f0       	brcs	.+6      	; 0x24ce <__addsf3x+0x18>
    24c8:	71 f4       	brne	.+28     	; 0x24e6 <__addsf3x+0x30>
    24ca:	9e f5       	brtc	.+102    	; 0x2532 <__addsf3x+0x7c>
    24cc:	8a c1       	rjmp	.+788    	; 0x27e2 <__fp_zero>
    24ce:	0e f4       	brtc	.+2      	; 0x24d2 <__addsf3x+0x1c>
    24d0:	e0 95       	com	r30
    24d2:	0b 2e       	mov	r0, r27
    24d4:	ba 2f       	mov	r27, r26
    24d6:	a0 2d       	mov	r26, r0
    24d8:	0b 01       	movw	r0, r22
    24da:	b9 01       	movw	r22, r18
    24dc:	90 01       	movw	r18, r0
    24de:	0c 01       	movw	r0, r24
    24e0:	ca 01       	movw	r24, r20
    24e2:	a0 01       	movw	r20, r0
    24e4:	11 24       	eor	r1, r1
    24e6:	ff 27       	eor	r31, r31
    24e8:	59 1b       	sub	r21, r25
    24ea:	99 f0       	breq	.+38     	; 0x2512 <__addsf3x+0x5c>
    24ec:	59 3f       	cpi	r21, 0xF9	; 249
    24ee:	50 f4       	brcc	.+20     	; 0x2504 <__addsf3x+0x4e>
    24f0:	50 3e       	cpi	r21, 0xE0	; 224
    24f2:	68 f1       	brcs	.+90     	; 0x254e <__addsf3x+0x98>
    24f4:	1a 16       	cp	r1, r26
    24f6:	f0 40       	sbci	r31, 0x00	; 0
    24f8:	a2 2f       	mov	r26, r18
    24fa:	23 2f       	mov	r18, r19
    24fc:	34 2f       	mov	r19, r20
    24fe:	44 27       	eor	r20, r20
    2500:	58 5f       	subi	r21, 0xF8	; 248
    2502:	f3 cf       	rjmp	.-26     	; 0x24ea <__addsf3x+0x34>
    2504:	46 95       	lsr	r20
    2506:	37 95       	ror	r19
    2508:	27 95       	ror	r18
    250a:	a7 95       	ror	r26
    250c:	f0 40       	sbci	r31, 0x00	; 0
    250e:	53 95       	inc	r21
    2510:	c9 f7       	brne	.-14     	; 0x2504 <__addsf3x+0x4e>
    2512:	7e f4       	brtc	.+30     	; 0x2532 <__addsf3x+0x7c>
    2514:	1f 16       	cp	r1, r31
    2516:	ba 0b       	sbc	r27, r26
    2518:	62 0b       	sbc	r22, r18
    251a:	73 0b       	sbc	r23, r19
    251c:	84 0b       	sbc	r24, r20
    251e:	ba f0       	brmi	.+46     	; 0x254e <__addsf3x+0x98>
    2520:	91 50       	subi	r25, 0x01	; 1
    2522:	a1 f0       	breq	.+40     	; 0x254c <__addsf3x+0x96>
    2524:	ff 0f       	add	r31, r31
    2526:	bb 1f       	adc	r27, r27
    2528:	66 1f       	adc	r22, r22
    252a:	77 1f       	adc	r23, r23
    252c:	88 1f       	adc	r24, r24
    252e:	c2 f7       	brpl	.-16     	; 0x2520 <__addsf3x+0x6a>
    2530:	0e c0       	rjmp	.+28     	; 0x254e <__addsf3x+0x98>
    2532:	ba 0f       	add	r27, r26
    2534:	62 1f       	adc	r22, r18
    2536:	73 1f       	adc	r23, r19
    2538:	84 1f       	adc	r24, r20
    253a:	48 f4       	brcc	.+18     	; 0x254e <__addsf3x+0x98>
    253c:	87 95       	ror	r24
    253e:	77 95       	ror	r23
    2540:	67 95       	ror	r22
    2542:	b7 95       	ror	r27
    2544:	f7 95       	ror	r31
    2546:	9e 3f       	cpi	r25, 0xFE	; 254
    2548:	08 f0       	brcs	.+2      	; 0x254c <__addsf3x+0x96>
    254a:	b3 cf       	rjmp	.-154    	; 0x24b2 <__addsf3+0x1e>
    254c:	93 95       	inc	r25
    254e:	88 0f       	add	r24, r24
    2550:	08 f0       	brcs	.+2      	; 0x2554 <__addsf3x+0x9e>
    2552:	99 27       	eor	r25, r25
    2554:	ee 0f       	add	r30, r30
    2556:	97 95       	ror	r25
    2558:	87 95       	ror	r24
    255a:	08 95       	ret

0000255c <__cmpsf2>:
    255c:	d4 d0       	rcall	.+424    	; 0x2706 <__fp_cmp>
    255e:	08 f4       	brcc	.+2      	; 0x2562 <__cmpsf2+0x6>
    2560:	81 e0       	ldi	r24, 0x01	; 1
    2562:	08 95       	ret

00002564 <__divsf3>:
    2564:	0c d0       	rcall	.+24     	; 0x257e <__divsf3x>
    2566:	0a c1       	rjmp	.+532    	; 0x277c <__fp_round>
    2568:	02 d1       	rcall	.+516    	; 0x276e <__fp_pscB>
    256a:	40 f0       	brcs	.+16     	; 0x257c <__divsf3+0x18>
    256c:	f9 d0       	rcall	.+498    	; 0x2760 <__fp_pscA>
    256e:	30 f0       	brcs	.+12     	; 0x257c <__divsf3+0x18>
    2570:	21 f4       	brne	.+8      	; 0x257a <__divsf3+0x16>
    2572:	5f 3f       	cpi	r21, 0xFF	; 255
    2574:	19 f0       	breq	.+6      	; 0x257c <__divsf3+0x18>
    2576:	eb c0       	rjmp	.+470    	; 0x274e <__fp_inf>
    2578:	51 11       	cpse	r21, r1
    257a:	34 c1       	rjmp	.+616    	; 0x27e4 <__fp_szero>
    257c:	ee c0       	rjmp	.+476    	; 0x275a <__fp_nan>

0000257e <__divsf3x>:
    257e:	0f d1       	rcall	.+542    	; 0x279e <__fp_split3>
    2580:	98 f3       	brcs	.-26     	; 0x2568 <__divsf3+0x4>

00002582 <__divsf3_pse>:
    2582:	99 23       	and	r25, r25
    2584:	c9 f3       	breq	.-14     	; 0x2578 <__divsf3+0x14>
    2586:	55 23       	and	r21, r21
    2588:	b1 f3       	breq	.-20     	; 0x2576 <__divsf3+0x12>
    258a:	95 1b       	sub	r25, r21
    258c:	55 0b       	sbc	r21, r21
    258e:	bb 27       	eor	r27, r27
    2590:	aa 27       	eor	r26, r26
    2592:	62 17       	cp	r22, r18
    2594:	73 07       	cpc	r23, r19
    2596:	84 07       	cpc	r24, r20
    2598:	38 f0       	brcs	.+14     	; 0x25a8 <__divsf3_pse+0x26>
    259a:	9f 5f       	subi	r25, 0xFF	; 255
    259c:	5f 4f       	sbci	r21, 0xFF	; 255
    259e:	22 0f       	add	r18, r18
    25a0:	33 1f       	adc	r19, r19
    25a2:	44 1f       	adc	r20, r20
    25a4:	aa 1f       	adc	r26, r26
    25a6:	a9 f3       	breq	.-22     	; 0x2592 <__divsf3_pse+0x10>
    25a8:	33 d0       	rcall	.+102    	; 0x2610 <__divsf3_pse+0x8e>
    25aa:	0e 2e       	mov	r0, r30
    25ac:	3a f0       	brmi	.+14     	; 0x25bc <__divsf3_pse+0x3a>
    25ae:	e0 e8       	ldi	r30, 0x80	; 128
    25b0:	30 d0       	rcall	.+96     	; 0x2612 <__divsf3_pse+0x90>
    25b2:	91 50       	subi	r25, 0x01	; 1
    25b4:	50 40       	sbci	r21, 0x00	; 0
    25b6:	e6 95       	lsr	r30
    25b8:	00 1c       	adc	r0, r0
    25ba:	ca f7       	brpl	.-14     	; 0x25ae <__divsf3_pse+0x2c>
    25bc:	29 d0       	rcall	.+82     	; 0x2610 <__divsf3_pse+0x8e>
    25be:	fe 2f       	mov	r31, r30
    25c0:	27 d0       	rcall	.+78     	; 0x2610 <__divsf3_pse+0x8e>
    25c2:	66 0f       	add	r22, r22
    25c4:	77 1f       	adc	r23, r23
    25c6:	88 1f       	adc	r24, r24
    25c8:	bb 1f       	adc	r27, r27
    25ca:	26 17       	cp	r18, r22
    25cc:	37 07       	cpc	r19, r23
    25ce:	48 07       	cpc	r20, r24
    25d0:	ab 07       	cpc	r26, r27
    25d2:	b0 e8       	ldi	r27, 0x80	; 128
    25d4:	09 f0       	breq	.+2      	; 0x25d8 <__divsf3_pse+0x56>
    25d6:	bb 0b       	sbc	r27, r27
    25d8:	80 2d       	mov	r24, r0
    25da:	bf 01       	movw	r22, r30
    25dc:	ff 27       	eor	r31, r31
    25de:	93 58       	subi	r25, 0x83	; 131
    25e0:	5f 4f       	sbci	r21, 0xFF	; 255
    25e2:	2a f0       	brmi	.+10     	; 0x25ee <__divsf3_pse+0x6c>
    25e4:	9e 3f       	cpi	r25, 0xFE	; 254
    25e6:	51 05       	cpc	r21, r1
    25e8:	68 f0       	brcs	.+26     	; 0x2604 <__divsf3_pse+0x82>
    25ea:	b1 c0       	rjmp	.+354    	; 0x274e <__fp_inf>
    25ec:	fb c0       	rjmp	.+502    	; 0x27e4 <__fp_szero>
    25ee:	5f 3f       	cpi	r21, 0xFF	; 255
    25f0:	ec f3       	brlt	.-6      	; 0x25ec <__divsf3_pse+0x6a>
    25f2:	98 3e       	cpi	r25, 0xE8	; 232
    25f4:	dc f3       	brlt	.-10     	; 0x25ec <__divsf3_pse+0x6a>
    25f6:	86 95       	lsr	r24
    25f8:	77 95       	ror	r23
    25fa:	67 95       	ror	r22
    25fc:	b7 95       	ror	r27
    25fe:	f7 95       	ror	r31
    2600:	9f 5f       	subi	r25, 0xFF	; 255
    2602:	c9 f7       	brne	.-14     	; 0x25f6 <__divsf3_pse+0x74>
    2604:	88 0f       	add	r24, r24
    2606:	91 1d       	adc	r25, r1
    2608:	96 95       	lsr	r25
    260a:	87 95       	ror	r24
    260c:	97 f9       	bld	r25, 7
    260e:	08 95       	ret
    2610:	e1 e0       	ldi	r30, 0x01	; 1
    2612:	66 0f       	add	r22, r22
    2614:	77 1f       	adc	r23, r23
    2616:	88 1f       	adc	r24, r24
    2618:	bb 1f       	adc	r27, r27
    261a:	62 17       	cp	r22, r18
    261c:	73 07       	cpc	r23, r19
    261e:	84 07       	cpc	r24, r20
    2620:	ba 07       	cpc	r27, r26
    2622:	20 f0       	brcs	.+8      	; 0x262c <__divsf3_pse+0xaa>
    2624:	62 1b       	sub	r22, r18
    2626:	73 0b       	sbc	r23, r19
    2628:	84 0b       	sbc	r24, r20
    262a:	ba 0b       	sbc	r27, r26
    262c:	ee 1f       	adc	r30, r30
    262e:	88 f7       	brcc	.-30     	; 0x2612 <__divsf3_pse+0x90>
    2630:	e0 95       	com	r30
    2632:	08 95       	ret

00002634 <__fixunssfsi>:
    2634:	bc d0       	rcall	.+376    	; 0x27ae <__fp_splitA>
    2636:	88 f0       	brcs	.+34     	; 0x265a <__fixunssfsi+0x26>
    2638:	9f 57       	subi	r25, 0x7F	; 127
    263a:	90 f0       	brcs	.+36     	; 0x2660 <__fixunssfsi+0x2c>
    263c:	b9 2f       	mov	r27, r25
    263e:	99 27       	eor	r25, r25
    2640:	b7 51       	subi	r27, 0x17	; 23
    2642:	a0 f0       	brcs	.+40     	; 0x266c <__fixunssfsi+0x38>
    2644:	d1 f0       	breq	.+52     	; 0x267a <__fixunssfsi+0x46>
    2646:	66 0f       	add	r22, r22
    2648:	77 1f       	adc	r23, r23
    264a:	88 1f       	adc	r24, r24
    264c:	99 1f       	adc	r25, r25
    264e:	1a f0       	brmi	.+6      	; 0x2656 <__fixunssfsi+0x22>
    2650:	ba 95       	dec	r27
    2652:	c9 f7       	brne	.-14     	; 0x2646 <__fixunssfsi+0x12>
    2654:	12 c0       	rjmp	.+36     	; 0x267a <__fixunssfsi+0x46>
    2656:	b1 30       	cpi	r27, 0x01	; 1
    2658:	81 f0       	breq	.+32     	; 0x267a <__fixunssfsi+0x46>
    265a:	c3 d0       	rcall	.+390    	; 0x27e2 <__fp_zero>
    265c:	b1 e0       	ldi	r27, 0x01	; 1
    265e:	08 95       	ret
    2660:	c0 c0       	rjmp	.+384    	; 0x27e2 <__fp_zero>
    2662:	67 2f       	mov	r22, r23
    2664:	78 2f       	mov	r23, r24
    2666:	88 27       	eor	r24, r24
    2668:	b8 5f       	subi	r27, 0xF8	; 248
    266a:	39 f0       	breq	.+14     	; 0x267a <__fixunssfsi+0x46>
    266c:	b9 3f       	cpi	r27, 0xF9	; 249
    266e:	cc f3       	brlt	.-14     	; 0x2662 <__fixunssfsi+0x2e>
    2670:	86 95       	lsr	r24
    2672:	77 95       	ror	r23
    2674:	67 95       	ror	r22
    2676:	b3 95       	inc	r27
    2678:	d9 f7       	brne	.-10     	; 0x2670 <__fixunssfsi+0x3c>
    267a:	3e f4       	brtc	.+14     	; 0x268a <__fixunssfsi+0x56>
    267c:	90 95       	com	r25
    267e:	80 95       	com	r24
    2680:	70 95       	com	r23
    2682:	61 95       	neg	r22
    2684:	7f 4f       	sbci	r23, 0xFF	; 255
    2686:	8f 4f       	sbci	r24, 0xFF	; 255
    2688:	9f 4f       	sbci	r25, 0xFF	; 255
    268a:	08 95       	ret

0000268c <__floatunsisf>:
    268c:	e8 94       	clt
    268e:	09 c0       	rjmp	.+18     	; 0x26a2 <__floatsisf+0x12>

00002690 <__floatsisf>:
    2690:	97 fb       	bst	r25, 7
    2692:	3e f4       	brtc	.+14     	; 0x26a2 <__floatsisf+0x12>
    2694:	90 95       	com	r25
    2696:	80 95       	com	r24
    2698:	70 95       	com	r23
    269a:	61 95       	neg	r22
    269c:	7f 4f       	sbci	r23, 0xFF	; 255
    269e:	8f 4f       	sbci	r24, 0xFF	; 255
    26a0:	9f 4f       	sbci	r25, 0xFF	; 255
    26a2:	99 23       	and	r25, r25
    26a4:	a9 f0       	breq	.+42     	; 0x26d0 <__floatsisf+0x40>
    26a6:	f9 2f       	mov	r31, r25
    26a8:	96 e9       	ldi	r25, 0x96	; 150
    26aa:	bb 27       	eor	r27, r27
    26ac:	93 95       	inc	r25
    26ae:	f6 95       	lsr	r31
    26b0:	87 95       	ror	r24
    26b2:	77 95       	ror	r23
    26b4:	67 95       	ror	r22
    26b6:	b7 95       	ror	r27
    26b8:	f1 11       	cpse	r31, r1
    26ba:	f8 cf       	rjmp	.-16     	; 0x26ac <__floatsisf+0x1c>
    26bc:	fa f4       	brpl	.+62     	; 0x26fc <__floatsisf+0x6c>
    26be:	bb 0f       	add	r27, r27
    26c0:	11 f4       	brne	.+4      	; 0x26c6 <__floatsisf+0x36>
    26c2:	60 ff       	sbrs	r22, 0
    26c4:	1b c0       	rjmp	.+54     	; 0x26fc <__floatsisf+0x6c>
    26c6:	6f 5f       	subi	r22, 0xFF	; 255
    26c8:	7f 4f       	sbci	r23, 0xFF	; 255
    26ca:	8f 4f       	sbci	r24, 0xFF	; 255
    26cc:	9f 4f       	sbci	r25, 0xFF	; 255
    26ce:	16 c0       	rjmp	.+44     	; 0x26fc <__floatsisf+0x6c>
    26d0:	88 23       	and	r24, r24
    26d2:	11 f0       	breq	.+4      	; 0x26d8 <__floatsisf+0x48>
    26d4:	96 e9       	ldi	r25, 0x96	; 150
    26d6:	11 c0       	rjmp	.+34     	; 0x26fa <__floatsisf+0x6a>
    26d8:	77 23       	and	r23, r23
    26da:	21 f0       	breq	.+8      	; 0x26e4 <__floatsisf+0x54>
    26dc:	9e e8       	ldi	r25, 0x8E	; 142
    26de:	87 2f       	mov	r24, r23
    26e0:	76 2f       	mov	r23, r22
    26e2:	05 c0       	rjmp	.+10     	; 0x26ee <__floatsisf+0x5e>
    26e4:	66 23       	and	r22, r22
    26e6:	71 f0       	breq	.+28     	; 0x2704 <__floatsisf+0x74>
    26e8:	96 e8       	ldi	r25, 0x86	; 134
    26ea:	86 2f       	mov	r24, r22
    26ec:	70 e0       	ldi	r23, 0x00	; 0
    26ee:	60 e0       	ldi	r22, 0x00	; 0
    26f0:	2a f0       	brmi	.+10     	; 0x26fc <__floatsisf+0x6c>
    26f2:	9a 95       	dec	r25
    26f4:	66 0f       	add	r22, r22
    26f6:	77 1f       	adc	r23, r23
    26f8:	88 1f       	adc	r24, r24
    26fa:	da f7       	brpl	.-10     	; 0x26f2 <__floatsisf+0x62>
    26fc:	88 0f       	add	r24, r24
    26fe:	96 95       	lsr	r25
    2700:	87 95       	ror	r24
    2702:	97 f9       	bld	r25, 7
    2704:	08 95       	ret

00002706 <__fp_cmp>:
    2706:	99 0f       	add	r25, r25
    2708:	00 08       	sbc	r0, r0
    270a:	55 0f       	add	r21, r21
    270c:	aa 0b       	sbc	r26, r26
    270e:	e0 e8       	ldi	r30, 0x80	; 128
    2710:	fe ef       	ldi	r31, 0xFE	; 254
    2712:	16 16       	cp	r1, r22
    2714:	17 06       	cpc	r1, r23
    2716:	e8 07       	cpc	r30, r24
    2718:	f9 07       	cpc	r31, r25
    271a:	c0 f0       	brcs	.+48     	; 0x274c <__fp_cmp+0x46>
    271c:	12 16       	cp	r1, r18
    271e:	13 06       	cpc	r1, r19
    2720:	e4 07       	cpc	r30, r20
    2722:	f5 07       	cpc	r31, r21
    2724:	98 f0       	brcs	.+38     	; 0x274c <__fp_cmp+0x46>
    2726:	62 1b       	sub	r22, r18
    2728:	73 0b       	sbc	r23, r19
    272a:	84 0b       	sbc	r24, r20
    272c:	95 0b       	sbc	r25, r21
    272e:	39 f4       	brne	.+14     	; 0x273e <__fp_cmp+0x38>
    2730:	0a 26       	eor	r0, r26
    2732:	61 f0       	breq	.+24     	; 0x274c <__fp_cmp+0x46>
    2734:	23 2b       	or	r18, r19
    2736:	24 2b       	or	r18, r20
    2738:	25 2b       	or	r18, r21
    273a:	21 f4       	brne	.+8      	; 0x2744 <__fp_cmp+0x3e>
    273c:	08 95       	ret
    273e:	0a 26       	eor	r0, r26
    2740:	09 f4       	brne	.+2      	; 0x2744 <__fp_cmp+0x3e>
    2742:	a1 40       	sbci	r26, 0x01	; 1
    2744:	a6 95       	lsr	r26
    2746:	8f ef       	ldi	r24, 0xFF	; 255
    2748:	81 1d       	adc	r24, r1
    274a:	81 1d       	adc	r24, r1
    274c:	08 95       	ret

0000274e <__fp_inf>:
    274e:	97 f9       	bld	r25, 7
    2750:	9f 67       	ori	r25, 0x7F	; 127
    2752:	80 e8       	ldi	r24, 0x80	; 128
    2754:	70 e0       	ldi	r23, 0x00	; 0
    2756:	60 e0       	ldi	r22, 0x00	; 0
    2758:	08 95       	ret

0000275a <__fp_nan>:
    275a:	9f ef       	ldi	r25, 0xFF	; 255
    275c:	80 ec       	ldi	r24, 0xC0	; 192
    275e:	08 95       	ret

00002760 <__fp_pscA>:
    2760:	00 24       	eor	r0, r0
    2762:	0a 94       	dec	r0
    2764:	16 16       	cp	r1, r22
    2766:	17 06       	cpc	r1, r23
    2768:	18 06       	cpc	r1, r24
    276a:	09 06       	cpc	r0, r25
    276c:	08 95       	ret

0000276e <__fp_pscB>:
    276e:	00 24       	eor	r0, r0
    2770:	0a 94       	dec	r0
    2772:	12 16       	cp	r1, r18
    2774:	13 06       	cpc	r1, r19
    2776:	14 06       	cpc	r1, r20
    2778:	05 06       	cpc	r0, r21
    277a:	08 95       	ret

0000277c <__fp_round>:
    277c:	09 2e       	mov	r0, r25
    277e:	03 94       	inc	r0
    2780:	00 0c       	add	r0, r0
    2782:	11 f4       	brne	.+4      	; 0x2788 <__fp_round+0xc>
    2784:	88 23       	and	r24, r24
    2786:	52 f0       	brmi	.+20     	; 0x279c <__fp_round+0x20>
    2788:	bb 0f       	add	r27, r27
    278a:	40 f4       	brcc	.+16     	; 0x279c <__fp_round+0x20>
    278c:	bf 2b       	or	r27, r31
    278e:	11 f4       	brne	.+4      	; 0x2794 <__fp_round+0x18>
    2790:	60 ff       	sbrs	r22, 0
    2792:	04 c0       	rjmp	.+8      	; 0x279c <__fp_round+0x20>
    2794:	6f 5f       	subi	r22, 0xFF	; 255
    2796:	7f 4f       	sbci	r23, 0xFF	; 255
    2798:	8f 4f       	sbci	r24, 0xFF	; 255
    279a:	9f 4f       	sbci	r25, 0xFF	; 255
    279c:	08 95       	ret

0000279e <__fp_split3>:
    279e:	57 fd       	sbrc	r21, 7
    27a0:	90 58       	subi	r25, 0x80	; 128
    27a2:	44 0f       	add	r20, r20
    27a4:	55 1f       	adc	r21, r21
    27a6:	59 f0       	breq	.+22     	; 0x27be <__fp_splitA+0x10>
    27a8:	5f 3f       	cpi	r21, 0xFF	; 255
    27aa:	71 f0       	breq	.+28     	; 0x27c8 <__fp_splitA+0x1a>
    27ac:	47 95       	ror	r20

000027ae <__fp_splitA>:
    27ae:	88 0f       	add	r24, r24
    27b0:	97 fb       	bst	r25, 7
    27b2:	99 1f       	adc	r25, r25
    27b4:	61 f0       	breq	.+24     	; 0x27ce <__fp_splitA+0x20>
    27b6:	9f 3f       	cpi	r25, 0xFF	; 255
    27b8:	79 f0       	breq	.+30     	; 0x27d8 <__fp_splitA+0x2a>
    27ba:	87 95       	ror	r24
    27bc:	08 95       	ret
    27be:	12 16       	cp	r1, r18
    27c0:	13 06       	cpc	r1, r19
    27c2:	14 06       	cpc	r1, r20
    27c4:	55 1f       	adc	r21, r21
    27c6:	f2 cf       	rjmp	.-28     	; 0x27ac <__fp_split3+0xe>
    27c8:	46 95       	lsr	r20
    27ca:	f1 df       	rcall	.-30     	; 0x27ae <__fp_splitA>
    27cc:	08 c0       	rjmp	.+16     	; 0x27de <__fp_splitA+0x30>
    27ce:	16 16       	cp	r1, r22
    27d0:	17 06       	cpc	r1, r23
    27d2:	18 06       	cpc	r1, r24
    27d4:	99 1f       	adc	r25, r25
    27d6:	f1 cf       	rjmp	.-30     	; 0x27ba <__fp_splitA+0xc>
    27d8:	86 95       	lsr	r24
    27da:	71 05       	cpc	r23, r1
    27dc:	61 05       	cpc	r22, r1
    27de:	08 94       	sec
    27e0:	08 95       	ret

000027e2 <__fp_zero>:
    27e2:	e8 94       	clt

000027e4 <__fp_szero>:
    27e4:	bb 27       	eor	r27, r27
    27e6:	66 27       	eor	r22, r22
    27e8:	77 27       	eor	r23, r23
    27ea:	cb 01       	movw	r24, r22
    27ec:	97 f9       	bld	r25, 7
    27ee:	08 95       	ret

000027f0 <__mulsf3>:
    27f0:	0b d0       	rcall	.+22     	; 0x2808 <__mulsf3x>
    27f2:	c4 cf       	rjmp	.-120    	; 0x277c <__fp_round>
    27f4:	b5 df       	rcall	.-150    	; 0x2760 <__fp_pscA>
    27f6:	28 f0       	brcs	.+10     	; 0x2802 <__mulsf3+0x12>
    27f8:	ba df       	rcall	.-140    	; 0x276e <__fp_pscB>
    27fa:	18 f0       	brcs	.+6      	; 0x2802 <__mulsf3+0x12>
    27fc:	95 23       	and	r25, r21
    27fe:	09 f0       	breq	.+2      	; 0x2802 <__mulsf3+0x12>
    2800:	a6 cf       	rjmp	.-180    	; 0x274e <__fp_inf>
    2802:	ab cf       	rjmp	.-170    	; 0x275a <__fp_nan>
    2804:	11 24       	eor	r1, r1
    2806:	ee cf       	rjmp	.-36     	; 0x27e4 <__fp_szero>

00002808 <__mulsf3x>:
    2808:	ca df       	rcall	.-108    	; 0x279e <__fp_split3>
    280a:	a0 f3       	brcs	.-24     	; 0x27f4 <__mulsf3+0x4>

0000280c <__mulsf3_pse>:
    280c:	95 9f       	mul	r25, r21
    280e:	d1 f3       	breq	.-12     	; 0x2804 <__mulsf3+0x14>
    2810:	95 0f       	add	r25, r21
    2812:	50 e0       	ldi	r21, 0x00	; 0
    2814:	55 1f       	adc	r21, r21
    2816:	62 9f       	mul	r22, r18
    2818:	f0 01       	movw	r30, r0
    281a:	72 9f       	mul	r23, r18
    281c:	bb 27       	eor	r27, r27
    281e:	f0 0d       	add	r31, r0
    2820:	b1 1d       	adc	r27, r1
    2822:	63 9f       	mul	r22, r19
    2824:	aa 27       	eor	r26, r26
    2826:	f0 0d       	add	r31, r0
    2828:	b1 1d       	adc	r27, r1
    282a:	aa 1f       	adc	r26, r26
    282c:	64 9f       	mul	r22, r20
    282e:	66 27       	eor	r22, r22
    2830:	b0 0d       	add	r27, r0
    2832:	a1 1d       	adc	r26, r1
    2834:	66 1f       	adc	r22, r22
    2836:	82 9f       	mul	r24, r18
    2838:	22 27       	eor	r18, r18
    283a:	b0 0d       	add	r27, r0
    283c:	a1 1d       	adc	r26, r1
    283e:	62 1f       	adc	r22, r18
    2840:	73 9f       	mul	r23, r19
    2842:	b0 0d       	add	r27, r0
    2844:	a1 1d       	adc	r26, r1
    2846:	62 1f       	adc	r22, r18
    2848:	83 9f       	mul	r24, r19
    284a:	a0 0d       	add	r26, r0
    284c:	61 1d       	adc	r22, r1
    284e:	22 1f       	adc	r18, r18
    2850:	74 9f       	mul	r23, r20
    2852:	33 27       	eor	r19, r19
    2854:	a0 0d       	add	r26, r0
    2856:	61 1d       	adc	r22, r1
    2858:	23 1f       	adc	r18, r19
    285a:	84 9f       	mul	r24, r20
    285c:	60 0d       	add	r22, r0
    285e:	21 1d       	adc	r18, r1
    2860:	82 2f       	mov	r24, r18
    2862:	76 2f       	mov	r23, r22
    2864:	6a 2f       	mov	r22, r26
    2866:	11 24       	eor	r1, r1
    2868:	9f 57       	subi	r25, 0x7F	; 127
    286a:	50 40       	sbci	r21, 0x00	; 0
    286c:	8a f0       	brmi	.+34     	; 0x2890 <__mulsf3_pse+0x84>
    286e:	e1 f0       	breq	.+56     	; 0x28a8 <__mulsf3_pse+0x9c>
    2870:	88 23       	and	r24, r24
    2872:	4a f0       	brmi	.+18     	; 0x2886 <__mulsf3_pse+0x7a>
    2874:	ee 0f       	add	r30, r30
    2876:	ff 1f       	adc	r31, r31
    2878:	bb 1f       	adc	r27, r27
    287a:	66 1f       	adc	r22, r22
    287c:	77 1f       	adc	r23, r23
    287e:	88 1f       	adc	r24, r24
    2880:	91 50       	subi	r25, 0x01	; 1
    2882:	50 40       	sbci	r21, 0x00	; 0
    2884:	a9 f7       	brne	.-22     	; 0x2870 <__mulsf3_pse+0x64>
    2886:	9e 3f       	cpi	r25, 0xFE	; 254
    2888:	51 05       	cpc	r21, r1
    288a:	70 f0       	brcs	.+28     	; 0x28a8 <__mulsf3_pse+0x9c>
    288c:	60 cf       	rjmp	.-320    	; 0x274e <__fp_inf>
    288e:	aa cf       	rjmp	.-172    	; 0x27e4 <__fp_szero>
    2890:	5f 3f       	cpi	r21, 0xFF	; 255
    2892:	ec f3       	brlt	.-6      	; 0x288e <__mulsf3_pse+0x82>
    2894:	98 3e       	cpi	r25, 0xE8	; 232
    2896:	dc f3       	brlt	.-10     	; 0x288e <__mulsf3_pse+0x82>
    2898:	86 95       	lsr	r24
    289a:	77 95       	ror	r23
    289c:	67 95       	ror	r22
    289e:	b7 95       	ror	r27
    28a0:	f7 95       	ror	r31
    28a2:	e7 95       	ror	r30
    28a4:	9f 5f       	subi	r25, 0xFF	; 255
    28a6:	c1 f7       	brne	.-16     	; 0x2898 <__mulsf3_pse+0x8c>
    28a8:	fe 2b       	or	r31, r30
    28aa:	88 0f       	add	r24, r24
    28ac:	91 1d       	adc	r25, r1
    28ae:	96 95       	lsr	r25
    28b0:	87 95       	ror	r24
    28b2:	97 f9       	bld	r25, 7
    28b4:	08 95       	ret

000028b6 <__mulsi3>:
    28b6:	db 01       	movw	r26, r22
    28b8:	8f 93       	push	r24
    28ba:	9f 93       	push	r25
    28bc:	36 d0       	rcall	.+108    	; 0x292a <__muluhisi3>
    28be:	bf 91       	pop	r27
    28c0:	af 91       	pop	r26
    28c2:	a2 9f       	mul	r26, r18
    28c4:	80 0d       	add	r24, r0
    28c6:	91 1d       	adc	r25, r1
    28c8:	a3 9f       	mul	r26, r19
    28ca:	90 0d       	add	r25, r0
    28cc:	b2 9f       	mul	r27, r18
    28ce:	90 0d       	add	r25, r0
    28d0:	11 24       	eor	r1, r1
    28d2:	08 95       	ret

000028d4 <__udivmodsi4>:
    28d4:	a1 e2       	ldi	r26, 0x21	; 33
    28d6:	1a 2e       	mov	r1, r26
    28d8:	aa 1b       	sub	r26, r26
    28da:	bb 1b       	sub	r27, r27
    28dc:	fd 01       	movw	r30, r26
    28de:	0d c0       	rjmp	.+26     	; 0x28fa <__udivmodsi4_ep>

000028e0 <__udivmodsi4_loop>:
    28e0:	aa 1f       	adc	r26, r26
    28e2:	bb 1f       	adc	r27, r27
    28e4:	ee 1f       	adc	r30, r30
    28e6:	ff 1f       	adc	r31, r31
    28e8:	a2 17       	cp	r26, r18
    28ea:	b3 07       	cpc	r27, r19
    28ec:	e4 07       	cpc	r30, r20
    28ee:	f5 07       	cpc	r31, r21
    28f0:	20 f0       	brcs	.+8      	; 0x28fa <__udivmodsi4_ep>
    28f2:	a2 1b       	sub	r26, r18
    28f4:	b3 0b       	sbc	r27, r19
    28f6:	e4 0b       	sbc	r30, r20
    28f8:	f5 0b       	sbc	r31, r21

000028fa <__udivmodsi4_ep>:
    28fa:	66 1f       	adc	r22, r22
    28fc:	77 1f       	adc	r23, r23
    28fe:	88 1f       	adc	r24, r24
    2900:	99 1f       	adc	r25, r25
    2902:	1a 94       	dec	r1
    2904:	69 f7       	brne	.-38     	; 0x28e0 <__udivmodsi4_loop>
    2906:	60 95       	com	r22
    2908:	70 95       	com	r23
    290a:	80 95       	com	r24
    290c:	90 95       	com	r25
    290e:	9b 01       	movw	r18, r22
    2910:	ac 01       	movw	r20, r24
    2912:	bd 01       	movw	r22, r26
    2914:	cf 01       	movw	r24, r30
    2916:	08 95       	ret

00002918 <__tablejump2__>:
    2918:	ee 0f       	add	r30, r30
    291a:	ff 1f       	adc	r31, r31
    291c:	00 24       	eor	r0, r0
    291e:	00 1c       	adc	r0, r0
    2920:	0b be       	out	0x3b, r0	; 59
    2922:	07 90       	elpm	r0, Z+
    2924:	f6 91       	elpm	r31, Z
    2926:	e0 2d       	mov	r30, r0
    2928:	09 94       	ijmp

0000292a <__muluhisi3>:
    292a:	09 d0       	rcall	.+18     	; 0x293e <__umulhisi3>
    292c:	a5 9f       	mul	r26, r21
    292e:	90 0d       	add	r25, r0
    2930:	b4 9f       	mul	r27, r20
    2932:	90 0d       	add	r25, r0
    2934:	a4 9f       	mul	r26, r20
    2936:	80 0d       	add	r24, r0
    2938:	91 1d       	adc	r25, r1
    293a:	11 24       	eor	r1, r1
    293c:	08 95       	ret

0000293e <__umulhisi3>:
    293e:	a2 9f       	mul	r26, r18
    2940:	b0 01       	movw	r22, r0
    2942:	b3 9f       	mul	r27, r19
    2944:	c0 01       	movw	r24, r0
    2946:	a3 9f       	mul	r26, r19
    2948:	70 0d       	add	r23, r0
    294a:	81 1d       	adc	r24, r1
    294c:	11 24       	eor	r1, r1
    294e:	91 1d       	adc	r25, r1
    2950:	b2 9f       	mul	r27, r18
    2952:	70 0d       	add	r23, r0
    2954:	81 1d       	adc	r24, r1
    2956:	11 24       	eor	r1, r1
    2958:	91 1d       	adc	r25, r1
    295a:	08 95       	ret

0000295c <fdevopen>:
    295c:	0f 93       	push	r16
    295e:	1f 93       	push	r17
    2960:	cf 93       	push	r28
    2962:	df 93       	push	r29
    2964:	00 97       	sbiw	r24, 0x00	; 0
    2966:	31 f4       	brne	.+12     	; 0x2974 <fdevopen+0x18>
    2968:	61 15       	cp	r22, r1
    296a:	71 05       	cpc	r23, r1
    296c:	19 f4       	brne	.+6      	; 0x2974 <fdevopen+0x18>
    296e:	80 e0       	ldi	r24, 0x00	; 0
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	39 c0       	rjmp	.+114    	; 0x29e6 <fdevopen+0x8a>
    2974:	8b 01       	movw	r16, r22
    2976:	ec 01       	movw	r28, r24
    2978:	6e e0       	ldi	r22, 0x0E	; 14
    297a:	70 e0       	ldi	r23, 0x00	; 0
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	75 d2       	rcall	.+1258   	; 0x2e6c <calloc>
    2982:	fc 01       	movw	r30, r24
    2984:	89 2b       	or	r24, r25
    2986:	99 f3       	breq	.-26     	; 0x296e <fdevopen+0x12>
    2988:	80 e8       	ldi	r24, 0x80	; 128
    298a:	83 83       	std	Z+3, r24	; 0x03
    298c:	01 15       	cp	r16, r1
    298e:	11 05       	cpc	r17, r1
    2990:	71 f0       	breq	.+28     	; 0x29ae <fdevopen+0x52>
    2992:	13 87       	std	Z+11, r17	; 0x0b
    2994:	02 87       	std	Z+10, r16	; 0x0a
    2996:	81 e8       	ldi	r24, 0x81	; 129
    2998:	83 83       	std	Z+3, r24	; 0x03
    299a:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <__iob>
    299e:	90 91 b6 09 	lds	r25, 0x09B6	; 0x8009b6 <__iob+0x1>
    29a2:	89 2b       	or	r24, r25
    29a4:	21 f4       	brne	.+8      	; 0x29ae <fdevopen+0x52>
    29a6:	f0 93 b6 09 	sts	0x09B6, r31	; 0x8009b6 <__iob+0x1>
    29aa:	e0 93 b5 09 	sts	0x09B5, r30	; 0x8009b5 <__iob>
    29ae:	20 97       	sbiw	r28, 0x00	; 0
    29b0:	c9 f0       	breq	.+50     	; 0x29e4 <fdevopen+0x88>
    29b2:	d1 87       	std	Z+9, r29	; 0x09
    29b4:	c0 87       	std	Z+8, r28	; 0x08
    29b6:	83 81       	ldd	r24, Z+3	; 0x03
    29b8:	82 60       	ori	r24, 0x02	; 2
    29ba:	83 83       	std	Z+3, r24	; 0x03
    29bc:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <__iob+0x2>
    29c0:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <__iob+0x3>
    29c4:	89 2b       	or	r24, r25
    29c6:	71 f4       	brne	.+28     	; 0x29e4 <fdevopen+0x88>
    29c8:	f0 93 b8 09 	sts	0x09B8, r31	; 0x8009b8 <__iob+0x3>
    29cc:	e0 93 b7 09 	sts	0x09B7, r30	; 0x8009b7 <__iob+0x2>
    29d0:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <__iob+0x4>
    29d4:	90 91 ba 09 	lds	r25, 0x09BA	; 0x8009ba <__iob+0x5>
    29d8:	89 2b       	or	r24, r25
    29da:	21 f4       	brne	.+8      	; 0x29e4 <fdevopen+0x88>
    29dc:	f0 93 ba 09 	sts	0x09BA, r31	; 0x8009ba <__iob+0x5>
    29e0:	e0 93 b9 09 	sts	0x09B9, r30	; 0x8009b9 <__iob+0x4>
    29e4:	cf 01       	movw	r24, r30
    29e6:	df 91       	pop	r29
    29e8:	cf 91       	pop	r28
    29ea:	1f 91       	pop	r17
    29ec:	0f 91       	pop	r16
    29ee:	08 95       	ret

000029f0 <printf>:
    29f0:	cf 93       	push	r28
    29f2:	df 93       	push	r29
    29f4:	cd b7       	in	r28, 0x3d	; 61
    29f6:	de b7       	in	r29, 0x3e	; 62
    29f8:	ae 01       	movw	r20, r28
    29fa:	4b 5f       	subi	r20, 0xFB	; 251
    29fc:	5f 4f       	sbci	r21, 0xFF	; 255
    29fe:	fa 01       	movw	r30, r20
    2a00:	61 91       	ld	r22, Z+
    2a02:	71 91       	ld	r23, Z+
    2a04:	af 01       	movw	r20, r30
    2a06:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <__iob+0x2>
    2a0a:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <__iob+0x3>
    2a0e:	31 d0       	rcall	.+98     	; 0x2a72 <vfprintf>
    2a10:	df 91       	pop	r29
    2a12:	cf 91       	pop	r28
    2a14:	08 95       	ret

00002a16 <sprintf>:
    2a16:	0f 93       	push	r16
    2a18:	1f 93       	push	r17
    2a1a:	cf 93       	push	r28
    2a1c:	df 93       	push	r29
    2a1e:	cd b7       	in	r28, 0x3d	; 61
    2a20:	de b7       	in	r29, 0x3e	; 62
    2a22:	2e 97       	sbiw	r28, 0x0e	; 14
    2a24:	0f b6       	in	r0, 0x3f	; 63
    2a26:	f8 94       	cli
    2a28:	de bf       	out	0x3e, r29	; 62
    2a2a:	0f be       	out	0x3f, r0	; 63
    2a2c:	cd bf       	out	0x3d, r28	; 61
    2a2e:	0d 89       	ldd	r16, Y+21	; 0x15
    2a30:	1e 89       	ldd	r17, Y+22	; 0x16
    2a32:	86 e0       	ldi	r24, 0x06	; 6
    2a34:	8c 83       	std	Y+4, r24	; 0x04
    2a36:	1a 83       	std	Y+2, r17	; 0x02
    2a38:	09 83       	std	Y+1, r16	; 0x01
    2a3a:	8f ef       	ldi	r24, 0xFF	; 255
    2a3c:	9f e7       	ldi	r25, 0x7F	; 127
    2a3e:	9e 83       	std	Y+6, r25	; 0x06
    2a40:	8d 83       	std	Y+5, r24	; 0x05
    2a42:	ae 01       	movw	r20, r28
    2a44:	47 5e       	subi	r20, 0xE7	; 231
    2a46:	5f 4f       	sbci	r21, 0xFF	; 255
    2a48:	6f 89       	ldd	r22, Y+23	; 0x17
    2a4a:	78 8d       	ldd	r23, Y+24	; 0x18
    2a4c:	ce 01       	movw	r24, r28
    2a4e:	01 96       	adiw	r24, 0x01	; 1
    2a50:	10 d0       	rcall	.+32     	; 0x2a72 <vfprintf>
    2a52:	ef 81       	ldd	r30, Y+7	; 0x07
    2a54:	f8 85       	ldd	r31, Y+8	; 0x08
    2a56:	e0 0f       	add	r30, r16
    2a58:	f1 1f       	adc	r31, r17
    2a5a:	10 82       	st	Z, r1
    2a5c:	2e 96       	adiw	r28, 0x0e	; 14
    2a5e:	0f b6       	in	r0, 0x3f	; 63
    2a60:	f8 94       	cli
    2a62:	de bf       	out	0x3e, r29	; 62
    2a64:	0f be       	out	0x3f, r0	; 63
    2a66:	cd bf       	out	0x3d, r28	; 61
    2a68:	df 91       	pop	r29
    2a6a:	cf 91       	pop	r28
    2a6c:	1f 91       	pop	r17
    2a6e:	0f 91       	pop	r16
    2a70:	08 95       	ret

00002a72 <vfprintf>:
    2a72:	2f 92       	push	r2
    2a74:	3f 92       	push	r3
    2a76:	4f 92       	push	r4
    2a78:	5f 92       	push	r5
    2a7a:	6f 92       	push	r6
    2a7c:	7f 92       	push	r7
    2a7e:	8f 92       	push	r8
    2a80:	9f 92       	push	r9
    2a82:	af 92       	push	r10
    2a84:	bf 92       	push	r11
    2a86:	cf 92       	push	r12
    2a88:	df 92       	push	r13
    2a8a:	ef 92       	push	r14
    2a8c:	ff 92       	push	r15
    2a8e:	0f 93       	push	r16
    2a90:	1f 93       	push	r17
    2a92:	cf 93       	push	r28
    2a94:	df 93       	push	r29
    2a96:	cd b7       	in	r28, 0x3d	; 61
    2a98:	de b7       	in	r29, 0x3e	; 62
    2a9a:	2b 97       	sbiw	r28, 0x0b	; 11
    2a9c:	0f b6       	in	r0, 0x3f	; 63
    2a9e:	f8 94       	cli
    2aa0:	de bf       	out	0x3e, r29	; 62
    2aa2:	0f be       	out	0x3f, r0	; 63
    2aa4:	cd bf       	out	0x3d, r28	; 61
    2aa6:	6c 01       	movw	r12, r24
    2aa8:	7b 01       	movw	r14, r22
    2aaa:	8a 01       	movw	r16, r20
    2aac:	fc 01       	movw	r30, r24
    2aae:	17 82       	std	Z+7, r1	; 0x07
    2ab0:	16 82       	std	Z+6, r1	; 0x06
    2ab2:	83 81       	ldd	r24, Z+3	; 0x03
    2ab4:	81 ff       	sbrs	r24, 1
    2ab6:	bf c1       	rjmp	.+894    	; 0x2e36 <vfprintf+0x3c4>
    2ab8:	ce 01       	movw	r24, r28
    2aba:	01 96       	adiw	r24, 0x01	; 1
    2abc:	3c 01       	movw	r6, r24
    2abe:	f6 01       	movw	r30, r12
    2ac0:	93 81       	ldd	r25, Z+3	; 0x03
    2ac2:	f7 01       	movw	r30, r14
    2ac4:	93 fd       	sbrc	r25, 3
    2ac6:	85 91       	lpm	r24, Z+
    2ac8:	93 ff       	sbrs	r25, 3
    2aca:	81 91       	ld	r24, Z+
    2acc:	7f 01       	movw	r14, r30
    2ace:	88 23       	and	r24, r24
    2ad0:	09 f4       	brne	.+2      	; 0x2ad4 <vfprintf+0x62>
    2ad2:	ad c1       	rjmp	.+858    	; 0x2e2e <vfprintf+0x3bc>
    2ad4:	85 32       	cpi	r24, 0x25	; 37
    2ad6:	39 f4       	brne	.+14     	; 0x2ae6 <vfprintf+0x74>
    2ad8:	93 fd       	sbrc	r25, 3
    2ada:	85 91       	lpm	r24, Z+
    2adc:	93 ff       	sbrs	r25, 3
    2ade:	81 91       	ld	r24, Z+
    2ae0:	7f 01       	movw	r14, r30
    2ae2:	85 32       	cpi	r24, 0x25	; 37
    2ae4:	21 f4       	brne	.+8      	; 0x2aee <vfprintf+0x7c>
    2ae6:	b6 01       	movw	r22, r12
    2ae8:	90 e0       	ldi	r25, 0x00	; 0
    2aea:	18 d3       	rcall	.+1584   	; 0x311c <fputc>
    2aec:	e8 cf       	rjmp	.-48     	; 0x2abe <vfprintf+0x4c>
    2aee:	91 2c       	mov	r9, r1
    2af0:	21 2c       	mov	r2, r1
    2af2:	31 2c       	mov	r3, r1
    2af4:	ff e1       	ldi	r31, 0x1F	; 31
    2af6:	f3 15       	cp	r31, r3
    2af8:	d8 f0       	brcs	.+54     	; 0x2b30 <vfprintf+0xbe>
    2afa:	8b 32       	cpi	r24, 0x2B	; 43
    2afc:	79 f0       	breq	.+30     	; 0x2b1c <vfprintf+0xaa>
    2afe:	38 f4       	brcc	.+14     	; 0x2b0e <vfprintf+0x9c>
    2b00:	80 32       	cpi	r24, 0x20	; 32
    2b02:	79 f0       	breq	.+30     	; 0x2b22 <vfprintf+0xb0>
    2b04:	83 32       	cpi	r24, 0x23	; 35
    2b06:	a1 f4       	brne	.+40     	; 0x2b30 <vfprintf+0xbe>
    2b08:	23 2d       	mov	r18, r3
    2b0a:	20 61       	ori	r18, 0x10	; 16
    2b0c:	1d c0       	rjmp	.+58     	; 0x2b48 <vfprintf+0xd6>
    2b0e:	8d 32       	cpi	r24, 0x2D	; 45
    2b10:	61 f0       	breq	.+24     	; 0x2b2a <vfprintf+0xb8>
    2b12:	80 33       	cpi	r24, 0x30	; 48
    2b14:	69 f4       	brne	.+26     	; 0x2b30 <vfprintf+0xbe>
    2b16:	23 2d       	mov	r18, r3
    2b18:	21 60       	ori	r18, 0x01	; 1
    2b1a:	16 c0       	rjmp	.+44     	; 0x2b48 <vfprintf+0xd6>
    2b1c:	83 2d       	mov	r24, r3
    2b1e:	82 60       	ori	r24, 0x02	; 2
    2b20:	38 2e       	mov	r3, r24
    2b22:	e3 2d       	mov	r30, r3
    2b24:	e4 60       	ori	r30, 0x04	; 4
    2b26:	3e 2e       	mov	r3, r30
    2b28:	2a c0       	rjmp	.+84     	; 0x2b7e <vfprintf+0x10c>
    2b2a:	f3 2d       	mov	r31, r3
    2b2c:	f8 60       	ori	r31, 0x08	; 8
    2b2e:	1d c0       	rjmp	.+58     	; 0x2b6a <vfprintf+0xf8>
    2b30:	37 fc       	sbrc	r3, 7
    2b32:	2d c0       	rjmp	.+90     	; 0x2b8e <vfprintf+0x11c>
    2b34:	20 ed       	ldi	r18, 0xD0	; 208
    2b36:	28 0f       	add	r18, r24
    2b38:	2a 30       	cpi	r18, 0x0A	; 10
    2b3a:	40 f0       	brcs	.+16     	; 0x2b4c <vfprintf+0xda>
    2b3c:	8e 32       	cpi	r24, 0x2E	; 46
    2b3e:	b9 f4       	brne	.+46     	; 0x2b6e <vfprintf+0xfc>
    2b40:	36 fc       	sbrc	r3, 6
    2b42:	75 c1       	rjmp	.+746    	; 0x2e2e <vfprintf+0x3bc>
    2b44:	23 2d       	mov	r18, r3
    2b46:	20 64       	ori	r18, 0x40	; 64
    2b48:	32 2e       	mov	r3, r18
    2b4a:	19 c0       	rjmp	.+50     	; 0x2b7e <vfprintf+0x10c>
    2b4c:	36 fe       	sbrs	r3, 6
    2b4e:	06 c0       	rjmp	.+12     	; 0x2b5c <vfprintf+0xea>
    2b50:	8a e0       	ldi	r24, 0x0A	; 10
    2b52:	98 9e       	mul	r9, r24
    2b54:	20 0d       	add	r18, r0
    2b56:	11 24       	eor	r1, r1
    2b58:	92 2e       	mov	r9, r18
    2b5a:	11 c0       	rjmp	.+34     	; 0x2b7e <vfprintf+0x10c>
    2b5c:	ea e0       	ldi	r30, 0x0A	; 10
    2b5e:	2e 9e       	mul	r2, r30
    2b60:	20 0d       	add	r18, r0
    2b62:	11 24       	eor	r1, r1
    2b64:	22 2e       	mov	r2, r18
    2b66:	f3 2d       	mov	r31, r3
    2b68:	f0 62       	ori	r31, 0x20	; 32
    2b6a:	3f 2e       	mov	r3, r31
    2b6c:	08 c0       	rjmp	.+16     	; 0x2b7e <vfprintf+0x10c>
    2b6e:	8c 36       	cpi	r24, 0x6C	; 108
    2b70:	21 f4       	brne	.+8      	; 0x2b7a <vfprintf+0x108>
    2b72:	83 2d       	mov	r24, r3
    2b74:	80 68       	ori	r24, 0x80	; 128
    2b76:	38 2e       	mov	r3, r24
    2b78:	02 c0       	rjmp	.+4      	; 0x2b7e <vfprintf+0x10c>
    2b7a:	88 36       	cpi	r24, 0x68	; 104
    2b7c:	41 f4       	brne	.+16     	; 0x2b8e <vfprintf+0x11c>
    2b7e:	f7 01       	movw	r30, r14
    2b80:	93 fd       	sbrc	r25, 3
    2b82:	85 91       	lpm	r24, Z+
    2b84:	93 ff       	sbrs	r25, 3
    2b86:	81 91       	ld	r24, Z+
    2b88:	7f 01       	movw	r14, r30
    2b8a:	81 11       	cpse	r24, r1
    2b8c:	b3 cf       	rjmp	.-154    	; 0x2af4 <vfprintf+0x82>
    2b8e:	98 2f       	mov	r25, r24
    2b90:	9f 7d       	andi	r25, 0xDF	; 223
    2b92:	95 54       	subi	r25, 0x45	; 69
    2b94:	93 30       	cpi	r25, 0x03	; 3
    2b96:	28 f4       	brcc	.+10     	; 0x2ba2 <vfprintf+0x130>
    2b98:	0c 5f       	subi	r16, 0xFC	; 252
    2b9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b9c:	9f e3       	ldi	r25, 0x3F	; 63
    2b9e:	99 83       	std	Y+1, r25	; 0x01
    2ba0:	0d c0       	rjmp	.+26     	; 0x2bbc <vfprintf+0x14a>
    2ba2:	83 36       	cpi	r24, 0x63	; 99
    2ba4:	31 f0       	breq	.+12     	; 0x2bb2 <vfprintf+0x140>
    2ba6:	83 37       	cpi	r24, 0x73	; 115
    2ba8:	71 f0       	breq	.+28     	; 0x2bc6 <vfprintf+0x154>
    2baa:	83 35       	cpi	r24, 0x53	; 83
    2bac:	09 f0       	breq	.+2      	; 0x2bb0 <vfprintf+0x13e>
    2bae:	55 c0       	rjmp	.+170    	; 0x2c5a <vfprintf+0x1e8>
    2bb0:	20 c0       	rjmp	.+64     	; 0x2bf2 <vfprintf+0x180>
    2bb2:	f8 01       	movw	r30, r16
    2bb4:	80 81       	ld	r24, Z
    2bb6:	89 83       	std	Y+1, r24	; 0x01
    2bb8:	0e 5f       	subi	r16, 0xFE	; 254
    2bba:	1f 4f       	sbci	r17, 0xFF	; 255
    2bbc:	88 24       	eor	r8, r8
    2bbe:	83 94       	inc	r8
    2bc0:	91 2c       	mov	r9, r1
    2bc2:	53 01       	movw	r10, r6
    2bc4:	12 c0       	rjmp	.+36     	; 0x2bea <vfprintf+0x178>
    2bc6:	28 01       	movw	r4, r16
    2bc8:	f2 e0       	ldi	r31, 0x02	; 2
    2bca:	4f 0e       	add	r4, r31
    2bcc:	51 1c       	adc	r5, r1
    2bce:	f8 01       	movw	r30, r16
    2bd0:	a0 80       	ld	r10, Z
    2bd2:	b1 80       	ldd	r11, Z+1	; 0x01
    2bd4:	36 fe       	sbrs	r3, 6
    2bd6:	03 c0       	rjmp	.+6      	; 0x2bde <vfprintf+0x16c>
    2bd8:	69 2d       	mov	r22, r9
    2bda:	70 e0       	ldi	r23, 0x00	; 0
    2bdc:	02 c0       	rjmp	.+4      	; 0x2be2 <vfprintf+0x170>
    2bde:	6f ef       	ldi	r22, 0xFF	; 255
    2be0:	7f ef       	ldi	r23, 0xFF	; 255
    2be2:	c5 01       	movw	r24, r10
    2be4:	90 d2       	rcall	.+1312   	; 0x3106 <strnlen>
    2be6:	4c 01       	movw	r8, r24
    2be8:	82 01       	movw	r16, r4
    2bea:	f3 2d       	mov	r31, r3
    2bec:	ff 77       	andi	r31, 0x7F	; 127
    2bee:	3f 2e       	mov	r3, r31
    2bf0:	15 c0       	rjmp	.+42     	; 0x2c1c <vfprintf+0x1aa>
    2bf2:	28 01       	movw	r4, r16
    2bf4:	22 e0       	ldi	r18, 0x02	; 2
    2bf6:	42 0e       	add	r4, r18
    2bf8:	51 1c       	adc	r5, r1
    2bfa:	f8 01       	movw	r30, r16
    2bfc:	a0 80       	ld	r10, Z
    2bfe:	b1 80       	ldd	r11, Z+1	; 0x01
    2c00:	36 fe       	sbrs	r3, 6
    2c02:	03 c0       	rjmp	.+6      	; 0x2c0a <vfprintf+0x198>
    2c04:	69 2d       	mov	r22, r9
    2c06:	70 e0       	ldi	r23, 0x00	; 0
    2c08:	02 c0       	rjmp	.+4      	; 0x2c0e <vfprintf+0x19c>
    2c0a:	6f ef       	ldi	r22, 0xFF	; 255
    2c0c:	7f ef       	ldi	r23, 0xFF	; 255
    2c0e:	c5 01       	movw	r24, r10
    2c10:	68 d2       	rcall	.+1232   	; 0x30e2 <strnlen_P>
    2c12:	4c 01       	movw	r8, r24
    2c14:	f3 2d       	mov	r31, r3
    2c16:	f0 68       	ori	r31, 0x80	; 128
    2c18:	3f 2e       	mov	r3, r31
    2c1a:	82 01       	movw	r16, r4
    2c1c:	33 fc       	sbrc	r3, 3
    2c1e:	19 c0       	rjmp	.+50     	; 0x2c52 <vfprintf+0x1e0>
    2c20:	82 2d       	mov	r24, r2
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	88 16       	cp	r8, r24
    2c26:	99 06       	cpc	r9, r25
    2c28:	a0 f4       	brcc	.+40     	; 0x2c52 <vfprintf+0x1e0>
    2c2a:	b6 01       	movw	r22, r12
    2c2c:	80 e2       	ldi	r24, 0x20	; 32
    2c2e:	90 e0       	ldi	r25, 0x00	; 0
    2c30:	75 d2       	rcall	.+1258   	; 0x311c <fputc>
    2c32:	2a 94       	dec	r2
    2c34:	f5 cf       	rjmp	.-22     	; 0x2c20 <vfprintf+0x1ae>
    2c36:	f5 01       	movw	r30, r10
    2c38:	37 fc       	sbrc	r3, 7
    2c3a:	85 91       	lpm	r24, Z+
    2c3c:	37 fe       	sbrs	r3, 7
    2c3e:	81 91       	ld	r24, Z+
    2c40:	5f 01       	movw	r10, r30
    2c42:	b6 01       	movw	r22, r12
    2c44:	90 e0       	ldi	r25, 0x00	; 0
    2c46:	6a d2       	rcall	.+1236   	; 0x311c <fputc>
    2c48:	21 10       	cpse	r2, r1
    2c4a:	2a 94       	dec	r2
    2c4c:	21 e0       	ldi	r18, 0x01	; 1
    2c4e:	82 1a       	sub	r8, r18
    2c50:	91 08       	sbc	r9, r1
    2c52:	81 14       	cp	r8, r1
    2c54:	91 04       	cpc	r9, r1
    2c56:	79 f7       	brne	.-34     	; 0x2c36 <vfprintf+0x1c4>
    2c58:	e1 c0       	rjmp	.+450    	; 0x2e1c <vfprintf+0x3aa>
    2c5a:	84 36       	cpi	r24, 0x64	; 100
    2c5c:	11 f0       	breq	.+4      	; 0x2c62 <vfprintf+0x1f0>
    2c5e:	89 36       	cpi	r24, 0x69	; 105
    2c60:	39 f5       	brne	.+78     	; 0x2cb0 <vfprintf+0x23e>
    2c62:	f8 01       	movw	r30, r16
    2c64:	37 fe       	sbrs	r3, 7
    2c66:	07 c0       	rjmp	.+14     	; 0x2c76 <vfprintf+0x204>
    2c68:	60 81       	ld	r22, Z
    2c6a:	71 81       	ldd	r23, Z+1	; 0x01
    2c6c:	82 81       	ldd	r24, Z+2	; 0x02
    2c6e:	93 81       	ldd	r25, Z+3	; 0x03
    2c70:	0c 5f       	subi	r16, 0xFC	; 252
    2c72:	1f 4f       	sbci	r17, 0xFF	; 255
    2c74:	08 c0       	rjmp	.+16     	; 0x2c86 <vfprintf+0x214>
    2c76:	60 81       	ld	r22, Z
    2c78:	71 81       	ldd	r23, Z+1	; 0x01
    2c7a:	07 2e       	mov	r0, r23
    2c7c:	00 0c       	add	r0, r0
    2c7e:	88 0b       	sbc	r24, r24
    2c80:	99 0b       	sbc	r25, r25
    2c82:	0e 5f       	subi	r16, 0xFE	; 254
    2c84:	1f 4f       	sbci	r17, 0xFF	; 255
    2c86:	f3 2d       	mov	r31, r3
    2c88:	ff 76       	andi	r31, 0x6F	; 111
    2c8a:	3f 2e       	mov	r3, r31
    2c8c:	97 ff       	sbrs	r25, 7
    2c8e:	09 c0       	rjmp	.+18     	; 0x2ca2 <vfprintf+0x230>
    2c90:	90 95       	com	r25
    2c92:	80 95       	com	r24
    2c94:	70 95       	com	r23
    2c96:	61 95       	neg	r22
    2c98:	7f 4f       	sbci	r23, 0xFF	; 255
    2c9a:	8f 4f       	sbci	r24, 0xFF	; 255
    2c9c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c9e:	f0 68       	ori	r31, 0x80	; 128
    2ca0:	3f 2e       	mov	r3, r31
    2ca2:	2a e0       	ldi	r18, 0x0A	; 10
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	a3 01       	movw	r20, r6
    2ca8:	75 d2       	rcall	.+1258   	; 0x3194 <__ultoa_invert>
    2caa:	88 2e       	mov	r8, r24
    2cac:	86 18       	sub	r8, r6
    2cae:	44 c0       	rjmp	.+136    	; 0x2d38 <vfprintf+0x2c6>
    2cb0:	85 37       	cpi	r24, 0x75	; 117
    2cb2:	31 f4       	brne	.+12     	; 0x2cc0 <vfprintf+0x24e>
    2cb4:	23 2d       	mov	r18, r3
    2cb6:	2f 7e       	andi	r18, 0xEF	; 239
    2cb8:	b2 2e       	mov	r11, r18
    2cba:	2a e0       	ldi	r18, 0x0A	; 10
    2cbc:	30 e0       	ldi	r19, 0x00	; 0
    2cbe:	25 c0       	rjmp	.+74     	; 0x2d0a <vfprintf+0x298>
    2cc0:	93 2d       	mov	r25, r3
    2cc2:	99 7f       	andi	r25, 0xF9	; 249
    2cc4:	b9 2e       	mov	r11, r25
    2cc6:	8f 36       	cpi	r24, 0x6F	; 111
    2cc8:	c1 f0       	breq	.+48     	; 0x2cfa <vfprintf+0x288>
    2cca:	18 f4       	brcc	.+6      	; 0x2cd2 <vfprintf+0x260>
    2ccc:	88 35       	cpi	r24, 0x58	; 88
    2cce:	79 f0       	breq	.+30     	; 0x2cee <vfprintf+0x27c>
    2cd0:	ae c0       	rjmp	.+348    	; 0x2e2e <vfprintf+0x3bc>
    2cd2:	80 37       	cpi	r24, 0x70	; 112
    2cd4:	19 f0       	breq	.+6      	; 0x2cdc <vfprintf+0x26a>
    2cd6:	88 37       	cpi	r24, 0x78	; 120
    2cd8:	21 f0       	breq	.+8      	; 0x2ce2 <vfprintf+0x270>
    2cda:	a9 c0       	rjmp	.+338    	; 0x2e2e <vfprintf+0x3bc>
    2cdc:	e9 2f       	mov	r30, r25
    2cde:	e0 61       	ori	r30, 0x10	; 16
    2ce0:	be 2e       	mov	r11, r30
    2ce2:	b4 fe       	sbrs	r11, 4
    2ce4:	0d c0       	rjmp	.+26     	; 0x2d00 <vfprintf+0x28e>
    2ce6:	fb 2d       	mov	r31, r11
    2ce8:	f4 60       	ori	r31, 0x04	; 4
    2cea:	bf 2e       	mov	r11, r31
    2cec:	09 c0       	rjmp	.+18     	; 0x2d00 <vfprintf+0x28e>
    2cee:	34 fe       	sbrs	r3, 4
    2cf0:	0a c0       	rjmp	.+20     	; 0x2d06 <vfprintf+0x294>
    2cf2:	29 2f       	mov	r18, r25
    2cf4:	26 60       	ori	r18, 0x06	; 6
    2cf6:	b2 2e       	mov	r11, r18
    2cf8:	06 c0       	rjmp	.+12     	; 0x2d06 <vfprintf+0x294>
    2cfa:	28 e0       	ldi	r18, 0x08	; 8
    2cfc:	30 e0       	ldi	r19, 0x00	; 0
    2cfe:	05 c0       	rjmp	.+10     	; 0x2d0a <vfprintf+0x298>
    2d00:	20 e1       	ldi	r18, 0x10	; 16
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	02 c0       	rjmp	.+4      	; 0x2d0a <vfprintf+0x298>
    2d06:	20 e1       	ldi	r18, 0x10	; 16
    2d08:	32 e0       	ldi	r19, 0x02	; 2
    2d0a:	f8 01       	movw	r30, r16
    2d0c:	b7 fe       	sbrs	r11, 7
    2d0e:	07 c0       	rjmp	.+14     	; 0x2d1e <vfprintf+0x2ac>
    2d10:	60 81       	ld	r22, Z
    2d12:	71 81       	ldd	r23, Z+1	; 0x01
    2d14:	82 81       	ldd	r24, Z+2	; 0x02
    2d16:	93 81       	ldd	r25, Z+3	; 0x03
    2d18:	0c 5f       	subi	r16, 0xFC	; 252
    2d1a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d1c:	06 c0       	rjmp	.+12     	; 0x2d2a <vfprintf+0x2b8>
    2d1e:	60 81       	ld	r22, Z
    2d20:	71 81       	ldd	r23, Z+1	; 0x01
    2d22:	80 e0       	ldi	r24, 0x00	; 0
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	0e 5f       	subi	r16, 0xFE	; 254
    2d28:	1f 4f       	sbci	r17, 0xFF	; 255
    2d2a:	a3 01       	movw	r20, r6
    2d2c:	33 d2       	rcall	.+1126   	; 0x3194 <__ultoa_invert>
    2d2e:	88 2e       	mov	r8, r24
    2d30:	86 18       	sub	r8, r6
    2d32:	fb 2d       	mov	r31, r11
    2d34:	ff 77       	andi	r31, 0x7F	; 127
    2d36:	3f 2e       	mov	r3, r31
    2d38:	36 fe       	sbrs	r3, 6
    2d3a:	0d c0       	rjmp	.+26     	; 0x2d56 <vfprintf+0x2e4>
    2d3c:	23 2d       	mov	r18, r3
    2d3e:	2e 7f       	andi	r18, 0xFE	; 254
    2d40:	a2 2e       	mov	r10, r18
    2d42:	89 14       	cp	r8, r9
    2d44:	58 f4       	brcc	.+22     	; 0x2d5c <vfprintf+0x2ea>
    2d46:	34 fe       	sbrs	r3, 4
    2d48:	0b c0       	rjmp	.+22     	; 0x2d60 <vfprintf+0x2ee>
    2d4a:	32 fc       	sbrc	r3, 2
    2d4c:	09 c0       	rjmp	.+18     	; 0x2d60 <vfprintf+0x2ee>
    2d4e:	83 2d       	mov	r24, r3
    2d50:	8e 7e       	andi	r24, 0xEE	; 238
    2d52:	a8 2e       	mov	r10, r24
    2d54:	05 c0       	rjmp	.+10     	; 0x2d60 <vfprintf+0x2ee>
    2d56:	b8 2c       	mov	r11, r8
    2d58:	a3 2c       	mov	r10, r3
    2d5a:	03 c0       	rjmp	.+6      	; 0x2d62 <vfprintf+0x2f0>
    2d5c:	b8 2c       	mov	r11, r8
    2d5e:	01 c0       	rjmp	.+2      	; 0x2d62 <vfprintf+0x2f0>
    2d60:	b9 2c       	mov	r11, r9
    2d62:	a4 fe       	sbrs	r10, 4
    2d64:	0f c0       	rjmp	.+30     	; 0x2d84 <vfprintf+0x312>
    2d66:	fe 01       	movw	r30, r28
    2d68:	e8 0d       	add	r30, r8
    2d6a:	f1 1d       	adc	r31, r1
    2d6c:	80 81       	ld	r24, Z
    2d6e:	80 33       	cpi	r24, 0x30	; 48
    2d70:	21 f4       	brne	.+8      	; 0x2d7a <vfprintf+0x308>
    2d72:	9a 2d       	mov	r25, r10
    2d74:	99 7e       	andi	r25, 0xE9	; 233
    2d76:	a9 2e       	mov	r10, r25
    2d78:	09 c0       	rjmp	.+18     	; 0x2d8c <vfprintf+0x31a>
    2d7a:	a2 fe       	sbrs	r10, 2
    2d7c:	06 c0       	rjmp	.+12     	; 0x2d8a <vfprintf+0x318>
    2d7e:	b3 94       	inc	r11
    2d80:	b3 94       	inc	r11
    2d82:	04 c0       	rjmp	.+8      	; 0x2d8c <vfprintf+0x31a>
    2d84:	8a 2d       	mov	r24, r10
    2d86:	86 78       	andi	r24, 0x86	; 134
    2d88:	09 f0       	breq	.+2      	; 0x2d8c <vfprintf+0x31a>
    2d8a:	b3 94       	inc	r11
    2d8c:	a3 fc       	sbrc	r10, 3
    2d8e:	10 c0       	rjmp	.+32     	; 0x2db0 <vfprintf+0x33e>
    2d90:	a0 fe       	sbrs	r10, 0
    2d92:	06 c0       	rjmp	.+12     	; 0x2da0 <vfprintf+0x32e>
    2d94:	b2 14       	cp	r11, r2
    2d96:	80 f4       	brcc	.+32     	; 0x2db8 <vfprintf+0x346>
    2d98:	28 0c       	add	r2, r8
    2d9a:	92 2c       	mov	r9, r2
    2d9c:	9b 18       	sub	r9, r11
    2d9e:	0d c0       	rjmp	.+26     	; 0x2dba <vfprintf+0x348>
    2da0:	b2 14       	cp	r11, r2
    2da2:	58 f4       	brcc	.+22     	; 0x2dba <vfprintf+0x348>
    2da4:	b6 01       	movw	r22, r12
    2da6:	80 e2       	ldi	r24, 0x20	; 32
    2da8:	90 e0       	ldi	r25, 0x00	; 0
    2daa:	b8 d1       	rcall	.+880    	; 0x311c <fputc>
    2dac:	b3 94       	inc	r11
    2dae:	f8 cf       	rjmp	.-16     	; 0x2da0 <vfprintf+0x32e>
    2db0:	b2 14       	cp	r11, r2
    2db2:	18 f4       	brcc	.+6      	; 0x2dba <vfprintf+0x348>
    2db4:	2b 18       	sub	r2, r11
    2db6:	02 c0       	rjmp	.+4      	; 0x2dbc <vfprintf+0x34a>
    2db8:	98 2c       	mov	r9, r8
    2dba:	21 2c       	mov	r2, r1
    2dbc:	a4 fe       	sbrs	r10, 4
    2dbe:	0f c0       	rjmp	.+30     	; 0x2dde <vfprintf+0x36c>
    2dc0:	b6 01       	movw	r22, r12
    2dc2:	80 e3       	ldi	r24, 0x30	; 48
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	aa d1       	rcall	.+852    	; 0x311c <fputc>
    2dc8:	a2 fe       	sbrs	r10, 2
    2dca:	16 c0       	rjmp	.+44     	; 0x2df8 <vfprintf+0x386>
    2dcc:	a1 fc       	sbrc	r10, 1
    2dce:	03 c0       	rjmp	.+6      	; 0x2dd6 <vfprintf+0x364>
    2dd0:	88 e7       	ldi	r24, 0x78	; 120
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	02 c0       	rjmp	.+4      	; 0x2dda <vfprintf+0x368>
    2dd6:	88 e5       	ldi	r24, 0x58	; 88
    2dd8:	90 e0       	ldi	r25, 0x00	; 0
    2dda:	b6 01       	movw	r22, r12
    2ddc:	0c c0       	rjmp	.+24     	; 0x2df6 <vfprintf+0x384>
    2dde:	8a 2d       	mov	r24, r10
    2de0:	86 78       	andi	r24, 0x86	; 134
    2de2:	51 f0       	breq	.+20     	; 0x2df8 <vfprintf+0x386>
    2de4:	a1 fe       	sbrs	r10, 1
    2de6:	02 c0       	rjmp	.+4      	; 0x2dec <vfprintf+0x37a>
    2de8:	8b e2       	ldi	r24, 0x2B	; 43
    2dea:	01 c0       	rjmp	.+2      	; 0x2dee <vfprintf+0x37c>
    2dec:	80 e2       	ldi	r24, 0x20	; 32
    2dee:	a7 fc       	sbrc	r10, 7
    2df0:	8d e2       	ldi	r24, 0x2D	; 45
    2df2:	b6 01       	movw	r22, r12
    2df4:	90 e0       	ldi	r25, 0x00	; 0
    2df6:	92 d1       	rcall	.+804    	; 0x311c <fputc>
    2df8:	89 14       	cp	r8, r9
    2dfa:	30 f4       	brcc	.+12     	; 0x2e08 <vfprintf+0x396>
    2dfc:	b6 01       	movw	r22, r12
    2dfe:	80 e3       	ldi	r24, 0x30	; 48
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	8c d1       	rcall	.+792    	; 0x311c <fputc>
    2e04:	9a 94       	dec	r9
    2e06:	f8 cf       	rjmp	.-16     	; 0x2df8 <vfprintf+0x386>
    2e08:	8a 94       	dec	r8
    2e0a:	f3 01       	movw	r30, r6
    2e0c:	e8 0d       	add	r30, r8
    2e0e:	f1 1d       	adc	r31, r1
    2e10:	80 81       	ld	r24, Z
    2e12:	b6 01       	movw	r22, r12
    2e14:	90 e0       	ldi	r25, 0x00	; 0
    2e16:	82 d1       	rcall	.+772    	; 0x311c <fputc>
    2e18:	81 10       	cpse	r8, r1
    2e1a:	f6 cf       	rjmp	.-20     	; 0x2e08 <vfprintf+0x396>
    2e1c:	22 20       	and	r2, r2
    2e1e:	09 f4       	brne	.+2      	; 0x2e22 <vfprintf+0x3b0>
    2e20:	4e ce       	rjmp	.-868    	; 0x2abe <vfprintf+0x4c>
    2e22:	b6 01       	movw	r22, r12
    2e24:	80 e2       	ldi	r24, 0x20	; 32
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	79 d1       	rcall	.+754    	; 0x311c <fputc>
    2e2a:	2a 94       	dec	r2
    2e2c:	f7 cf       	rjmp	.-18     	; 0x2e1c <vfprintf+0x3aa>
    2e2e:	f6 01       	movw	r30, r12
    2e30:	86 81       	ldd	r24, Z+6	; 0x06
    2e32:	97 81       	ldd	r25, Z+7	; 0x07
    2e34:	02 c0       	rjmp	.+4      	; 0x2e3a <vfprintf+0x3c8>
    2e36:	8f ef       	ldi	r24, 0xFF	; 255
    2e38:	9f ef       	ldi	r25, 0xFF	; 255
    2e3a:	2b 96       	adiw	r28, 0x0b	; 11
    2e3c:	0f b6       	in	r0, 0x3f	; 63
    2e3e:	f8 94       	cli
    2e40:	de bf       	out	0x3e, r29	; 62
    2e42:	0f be       	out	0x3f, r0	; 63
    2e44:	cd bf       	out	0x3d, r28	; 61
    2e46:	df 91       	pop	r29
    2e48:	cf 91       	pop	r28
    2e4a:	1f 91       	pop	r17
    2e4c:	0f 91       	pop	r16
    2e4e:	ff 90       	pop	r15
    2e50:	ef 90       	pop	r14
    2e52:	df 90       	pop	r13
    2e54:	cf 90       	pop	r12
    2e56:	bf 90       	pop	r11
    2e58:	af 90       	pop	r10
    2e5a:	9f 90       	pop	r9
    2e5c:	8f 90       	pop	r8
    2e5e:	7f 90       	pop	r7
    2e60:	6f 90       	pop	r6
    2e62:	5f 90       	pop	r5
    2e64:	4f 90       	pop	r4
    2e66:	3f 90       	pop	r3
    2e68:	2f 90       	pop	r2
    2e6a:	08 95       	ret

00002e6c <calloc>:
    2e6c:	0f 93       	push	r16
    2e6e:	1f 93       	push	r17
    2e70:	cf 93       	push	r28
    2e72:	df 93       	push	r29
    2e74:	86 9f       	mul	r24, r22
    2e76:	80 01       	movw	r16, r0
    2e78:	87 9f       	mul	r24, r23
    2e7a:	10 0d       	add	r17, r0
    2e7c:	96 9f       	mul	r25, r22
    2e7e:	10 0d       	add	r17, r0
    2e80:	11 24       	eor	r1, r1
    2e82:	c8 01       	movw	r24, r16
    2e84:	0d d0       	rcall	.+26     	; 0x2ea0 <malloc>
    2e86:	ec 01       	movw	r28, r24
    2e88:	00 97       	sbiw	r24, 0x00	; 0
    2e8a:	21 f0       	breq	.+8      	; 0x2e94 <calloc+0x28>
    2e8c:	a8 01       	movw	r20, r16
    2e8e:	60 e0       	ldi	r22, 0x00	; 0
    2e90:	70 e0       	ldi	r23, 0x00	; 0
    2e92:	32 d1       	rcall	.+612    	; 0x30f8 <memset>
    2e94:	ce 01       	movw	r24, r28
    2e96:	df 91       	pop	r29
    2e98:	cf 91       	pop	r28
    2e9a:	1f 91       	pop	r17
    2e9c:	0f 91       	pop	r16
    2e9e:	08 95       	ret

00002ea0 <malloc>:
    2ea0:	0f 93       	push	r16
    2ea2:	1f 93       	push	r17
    2ea4:	cf 93       	push	r28
    2ea6:	df 93       	push	r29
    2ea8:	82 30       	cpi	r24, 0x02	; 2
    2eaa:	91 05       	cpc	r25, r1
    2eac:	10 f4       	brcc	.+4      	; 0x2eb2 <malloc+0x12>
    2eae:	82 e0       	ldi	r24, 0x02	; 2
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	e0 91 bd 09 	lds	r30, 0x09BD	; 0x8009bd <__flp>
    2eb6:	f0 91 be 09 	lds	r31, 0x09BE	; 0x8009be <__flp+0x1>
    2eba:	20 e0       	ldi	r18, 0x00	; 0
    2ebc:	30 e0       	ldi	r19, 0x00	; 0
    2ebe:	a0 e0       	ldi	r26, 0x00	; 0
    2ec0:	b0 e0       	ldi	r27, 0x00	; 0
    2ec2:	30 97       	sbiw	r30, 0x00	; 0
    2ec4:	19 f1       	breq	.+70     	; 0x2f0c <malloc+0x6c>
    2ec6:	40 81       	ld	r20, Z
    2ec8:	51 81       	ldd	r21, Z+1	; 0x01
    2eca:	02 81       	ldd	r16, Z+2	; 0x02
    2ecc:	13 81       	ldd	r17, Z+3	; 0x03
    2ece:	48 17       	cp	r20, r24
    2ed0:	59 07       	cpc	r21, r25
    2ed2:	c8 f0       	brcs	.+50     	; 0x2f06 <malloc+0x66>
    2ed4:	84 17       	cp	r24, r20
    2ed6:	95 07       	cpc	r25, r21
    2ed8:	69 f4       	brne	.+26     	; 0x2ef4 <malloc+0x54>
    2eda:	10 97       	sbiw	r26, 0x00	; 0
    2edc:	31 f0       	breq	.+12     	; 0x2eea <malloc+0x4a>
    2ede:	12 96       	adiw	r26, 0x02	; 2
    2ee0:	0c 93       	st	X, r16
    2ee2:	12 97       	sbiw	r26, 0x02	; 2
    2ee4:	13 96       	adiw	r26, 0x03	; 3
    2ee6:	1c 93       	st	X, r17
    2ee8:	27 c0       	rjmp	.+78     	; 0x2f38 <malloc+0x98>
    2eea:	00 93 bd 09 	sts	0x09BD, r16	; 0x8009bd <__flp>
    2eee:	10 93 be 09 	sts	0x09BE, r17	; 0x8009be <__flp+0x1>
    2ef2:	22 c0       	rjmp	.+68     	; 0x2f38 <malloc+0x98>
    2ef4:	21 15       	cp	r18, r1
    2ef6:	31 05       	cpc	r19, r1
    2ef8:	19 f0       	breq	.+6      	; 0x2f00 <malloc+0x60>
    2efa:	42 17       	cp	r20, r18
    2efc:	53 07       	cpc	r21, r19
    2efe:	18 f4       	brcc	.+6      	; 0x2f06 <malloc+0x66>
    2f00:	9a 01       	movw	r18, r20
    2f02:	bd 01       	movw	r22, r26
    2f04:	ef 01       	movw	r28, r30
    2f06:	df 01       	movw	r26, r30
    2f08:	f8 01       	movw	r30, r16
    2f0a:	db cf       	rjmp	.-74     	; 0x2ec2 <malloc+0x22>
    2f0c:	21 15       	cp	r18, r1
    2f0e:	31 05       	cpc	r19, r1
    2f10:	f9 f0       	breq	.+62     	; 0x2f50 <malloc+0xb0>
    2f12:	28 1b       	sub	r18, r24
    2f14:	39 0b       	sbc	r19, r25
    2f16:	24 30       	cpi	r18, 0x04	; 4
    2f18:	31 05       	cpc	r19, r1
    2f1a:	80 f4       	brcc	.+32     	; 0x2f3c <malloc+0x9c>
    2f1c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1e:	9b 81       	ldd	r25, Y+3	; 0x03
    2f20:	61 15       	cp	r22, r1
    2f22:	71 05       	cpc	r23, r1
    2f24:	21 f0       	breq	.+8      	; 0x2f2e <malloc+0x8e>
    2f26:	fb 01       	movw	r30, r22
    2f28:	93 83       	std	Z+3, r25	; 0x03
    2f2a:	82 83       	std	Z+2, r24	; 0x02
    2f2c:	04 c0       	rjmp	.+8      	; 0x2f36 <malloc+0x96>
    2f2e:	90 93 be 09 	sts	0x09BE, r25	; 0x8009be <__flp+0x1>
    2f32:	80 93 bd 09 	sts	0x09BD, r24	; 0x8009bd <__flp>
    2f36:	fe 01       	movw	r30, r28
    2f38:	32 96       	adiw	r30, 0x02	; 2
    2f3a:	44 c0       	rjmp	.+136    	; 0x2fc4 <malloc+0x124>
    2f3c:	fe 01       	movw	r30, r28
    2f3e:	e2 0f       	add	r30, r18
    2f40:	f3 1f       	adc	r31, r19
    2f42:	81 93       	st	Z+, r24
    2f44:	91 93       	st	Z+, r25
    2f46:	22 50       	subi	r18, 0x02	; 2
    2f48:	31 09       	sbc	r19, r1
    2f4a:	39 83       	std	Y+1, r19	; 0x01
    2f4c:	28 83       	st	Y, r18
    2f4e:	3a c0       	rjmp	.+116    	; 0x2fc4 <malloc+0x124>
    2f50:	20 91 bb 09 	lds	r18, 0x09BB	; 0x8009bb <__brkval>
    2f54:	30 91 bc 09 	lds	r19, 0x09BC	; 0x8009bc <__brkval+0x1>
    2f58:	23 2b       	or	r18, r19
    2f5a:	41 f4       	brne	.+16     	; 0x2f6c <malloc+0xcc>
    2f5c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2f60:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2f64:	30 93 bc 09 	sts	0x09BC, r19	; 0x8009bc <__brkval+0x1>
    2f68:	20 93 bb 09 	sts	0x09BB, r18	; 0x8009bb <__brkval>
    2f6c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2f70:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2f74:	21 15       	cp	r18, r1
    2f76:	31 05       	cpc	r19, r1
    2f78:	41 f4       	brne	.+16     	; 0x2f8a <malloc+0xea>
    2f7a:	2d b7       	in	r18, 0x3d	; 61
    2f7c:	3e b7       	in	r19, 0x3e	; 62
    2f7e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2f82:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    2f86:	24 1b       	sub	r18, r20
    2f88:	35 0b       	sbc	r19, r21
    2f8a:	e0 91 bb 09 	lds	r30, 0x09BB	; 0x8009bb <__brkval>
    2f8e:	f0 91 bc 09 	lds	r31, 0x09BC	; 0x8009bc <__brkval+0x1>
    2f92:	e2 17       	cp	r30, r18
    2f94:	f3 07       	cpc	r31, r19
    2f96:	a0 f4       	brcc	.+40     	; 0x2fc0 <malloc+0x120>
    2f98:	2e 1b       	sub	r18, r30
    2f9a:	3f 0b       	sbc	r19, r31
    2f9c:	28 17       	cp	r18, r24
    2f9e:	39 07       	cpc	r19, r25
    2fa0:	78 f0       	brcs	.+30     	; 0x2fc0 <malloc+0x120>
    2fa2:	ac 01       	movw	r20, r24
    2fa4:	4e 5f       	subi	r20, 0xFE	; 254
    2fa6:	5f 4f       	sbci	r21, 0xFF	; 255
    2fa8:	24 17       	cp	r18, r20
    2faa:	35 07       	cpc	r19, r21
    2fac:	48 f0       	brcs	.+18     	; 0x2fc0 <malloc+0x120>
    2fae:	4e 0f       	add	r20, r30
    2fb0:	5f 1f       	adc	r21, r31
    2fb2:	50 93 bc 09 	sts	0x09BC, r21	; 0x8009bc <__brkval+0x1>
    2fb6:	40 93 bb 09 	sts	0x09BB, r20	; 0x8009bb <__brkval>
    2fba:	81 93       	st	Z+, r24
    2fbc:	91 93       	st	Z+, r25
    2fbe:	02 c0       	rjmp	.+4      	; 0x2fc4 <malloc+0x124>
    2fc0:	e0 e0       	ldi	r30, 0x00	; 0
    2fc2:	f0 e0       	ldi	r31, 0x00	; 0
    2fc4:	cf 01       	movw	r24, r30
    2fc6:	df 91       	pop	r29
    2fc8:	cf 91       	pop	r28
    2fca:	1f 91       	pop	r17
    2fcc:	0f 91       	pop	r16
    2fce:	08 95       	ret

00002fd0 <free>:
    2fd0:	cf 93       	push	r28
    2fd2:	df 93       	push	r29
    2fd4:	00 97       	sbiw	r24, 0x00	; 0
    2fd6:	09 f4       	brne	.+2      	; 0x2fda <free+0xa>
    2fd8:	81 c0       	rjmp	.+258    	; 0x30dc <free+0x10c>
    2fda:	fc 01       	movw	r30, r24
    2fdc:	32 97       	sbiw	r30, 0x02	; 2
    2fde:	13 82       	std	Z+3, r1	; 0x03
    2fe0:	12 82       	std	Z+2, r1	; 0x02
    2fe2:	a0 91 bd 09 	lds	r26, 0x09BD	; 0x8009bd <__flp>
    2fe6:	b0 91 be 09 	lds	r27, 0x09BE	; 0x8009be <__flp+0x1>
    2fea:	10 97       	sbiw	r26, 0x00	; 0
    2fec:	81 f4       	brne	.+32     	; 0x300e <free+0x3e>
    2fee:	20 81       	ld	r18, Z
    2ff0:	31 81       	ldd	r19, Z+1	; 0x01
    2ff2:	82 0f       	add	r24, r18
    2ff4:	93 1f       	adc	r25, r19
    2ff6:	20 91 bb 09 	lds	r18, 0x09BB	; 0x8009bb <__brkval>
    2ffa:	30 91 bc 09 	lds	r19, 0x09BC	; 0x8009bc <__brkval+0x1>
    2ffe:	28 17       	cp	r18, r24
    3000:	39 07       	cpc	r19, r25
    3002:	51 f5       	brne	.+84     	; 0x3058 <free+0x88>
    3004:	f0 93 bc 09 	sts	0x09BC, r31	; 0x8009bc <__brkval+0x1>
    3008:	e0 93 bb 09 	sts	0x09BB, r30	; 0x8009bb <__brkval>
    300c:	67 c0       	rjmp	.+206    	; 0x30dc <free+0x10c>
    300e:	ed 01       	movw	r28, r26
    3010:	20 e0       	ldi	r18, 0x00	; 0
    3012:	30 e0       	ldi	r19, 0x00	; 0
    3014:	ce 17       	cp	r28, r30
    3016:	df 07       	cpc	r29, r31
    3018:	40 f4       	brcc	.+16     	; 0x302a <free+0x5a>
    301a:	4a 81       	ldd	r20, Y+2	; 0x02
    301c:	5b 81       	ldd	r21, Y+3	; 0x03
    301e:	9e 01       	movw	r18, r28
    3020:	41 15       	cp	r20, r1
    3022:	51 05       	cpc	r21, r1
    3024:	f1 f0       	breq	.+60     	; 0x3062 <free+0x92>
    3026:	ea 01       	movw	r28, r20
    3028:	f5 cf       	rjmp	.-22     	; 0x3014 <free+0x44>
    302a:	d3 83       	std	Z+3, r29	; 0x03
    302c:	c2 83       	std	Z+2, r28	; 0x02
    302e:	40 81       	ld	r20, Z
    3030:	51 81       	ldd	r21, Z+1	; 0x01
    3032:	84 0f       	add	r24, r20
    3034:	95 1f       	adc	r25, r21
    3036:	c8 17       	cp	r28, r24
    3038:	d9 07       	cpc	r29, r25
    303a:	59 f4       	brne	.+22     	; 0x3052 <free+0x82>
    303c:	88 81       	ld	r24, Y
    303e:	99 81       	ldd	r25, Y+1	; 0x01
    3040:	84 0f       	add	r24, r20
    3042:	95 1f       	adc	r25, r21
    3044:	02 96       	adiw	r24, 0x02	; 2
    3046:	91 83       	std	Z+1, r25	; 0x01
    3048:	80 83       	st	Z, r24
    304a:	8a 81       	ldd	r24, Y+2	; 0x02
    304c:	9b 81       	ldd	r25, Y+3	; 0x03
    304e:	93 83       	std	Z+3, r25	; 0x03
    3050:	82 83       	std	Z+2, r24	; 0x02
    3052:	21 15       	cp	r18, r1
    3054:	31 05       	cpc	r19, r1
    3056:	29 f4       	brne	.+10     	; 0x3062 <free+0x92>
    3058:	f0 93 be 09 	sts	0x09BE, r31	; 0x8009be <__flp+0x1>
    305c:	e0 93 bd 09 	sts	0x09BD, r30	; 0x8009bd <__flp>
    3060:	3d c0       	rjmp	.+122    	; 0x30dc <free+0x10c>
    3062:	e9 01       	movw	r28, r18
    3064:	fb 83       	std	Y+3, r31	; 0x03
    3066:	ea 83       	std	Y+2, r30	; 0x02
    3068:	49 91       	ld	r20, Y+
    306a:	59 91       	ld	r21, Y+
    306c:	c4 0f       	add	r28, r20
    306e:	d5 1f       	adc	r29, r21
    3070:	ec 17       	cp	r30, r28
    3072:	fd 07       	cpc	r31, r29
    3074:	61 f4       	brne	.+24     	; 0x308e <free+0xbe>
    3076:	80 81       	ld	r24, Z
    3078:	91 81       	ldd	r25, Z+1	; 0x01
    307a:	84 0f       	add	r24, r20
    307c:	95 1f       	adc	r25, r21
    307e:	02 96       	adiw	r24, 0x02	; 2
    3080:	e9 01       	movw	r28, r18
    3082:	99 83       	std	Y+1, r25	; 0x01
    3084:	88 83       	st	Y, r24
    3086:	82 81       	ldd	r24, Z+2	; 0x02
    3088:	93 81       	ldd	r25, Z+3	; 0x03
    308a:	9b 83       	std	Y+3, r25	; 0x03
    308c:	8a 83       	std	Y+2, r24	; 0x02
    308e:	e0 e0       	ldi	r30, 0x00	; 0
    3090:	f0 e0       	ldi	r31, 0x00	; 0
    3092:	12 96       	adiw	r26, 0x02	; 2
    3094:	8d 91       	ld	r24, X+
    3096:	9c 91       	ld	r25, X
    3098:	13 97       	sbiw	r26, 0x03	; 3
    309a:	00 97       	sbiw	r24, 0x00	; 0
    309c:	19 f0       	breq	.+6      	; 0x30a4 <free+0xd4>
    309e:	fd 01       	movw	r30, r26
    30a0:	dc 01       	movw	r26, r24
    30a2:	f7 cf       	rjmp	.-18     	; 0x3092 <free+0xc2>
    30a4:	8d 91       	ld	r24, X+
    30a6:	9c 91       	ld	r25, X
    30a8:	11 97       	sbiw	r26, 0x01	; 1
    30aa:	9d 01       	movw	r18, r26
    30ac:	2e 5f       	subi	r18, 0xFE	; 254
    30ae:	3f 4f       	sbci	r19, 0xFF	; 255
    30b0:	82 0f       	add	r24, r18
    30b2:	93 1f       	adc	r25, r19
    30b4:	20 91 bb 09 	lds	r18, 0x09BB	; 0x8009bb <__brkval>
    30b8:	30 91 bc 09 	lds	r19, 0x09BC	; 0x8009bc <__brkval+0x1>
    30bc:	28 17       	cp	r18, r24
    30be:	39 07       	cpc	r19, r25
    30c0:	69 f4       	brne	.+26     	; 0x30dc <free+0x10c>
    30c2:	30 97       	sbiw	r30, 0x00	; 0
    30c4:	29 f4       	brne	.+10     	; 0x30d0 <free+0x100>
    30c6:	10 92 be 09 	sts	0x09BE, r1	; 0x8009be <__flp+0x1>
    30ca:	10 92 bd 09 	sts	0x09BD, r1	; 0x8009bd <__flp>
    30ce:	02 c0       	rjmp	.+4      	; 0x30d4 <free+0x104>
    30d0:	13 82       	std	Z+3, r1	; 0x03
    30d2:	12 82       	std	Z+2, r1	; 0x02
    30d4:	b0 93 bc 09 	sts	0x09BC, r27	; 0x8009bc <__brkval+0x1>
    30d8:	a0 93 bb 09 	sts	0x09BB, r26	; 0x8009bb <__brkval>
    30dc:	df 91       	pop	r29
    30de:	cf 91       	pop	r28
    30e0:	08 95       	ret

000030e2 <strnlen_P>:
    30e2:	fc 01       	movw	r30, r24
    30e4:	05 90       	lpm	r0, Z+
    30e6:	61 50       	subi	r22, 0x01	; 1
    30e8:	70 40       	sbci	r23, 0x00	; 0
    30ea:	01 10       	cpse	r0, r1
    30ec:	d8 f7       	brcc	.-10     	; 0x30e4 <strnlen_P+0x2>
    30ee:	80 95       	com	r24
    30f0:	90 95       	com	r25
    30f2:	8e 0f       	add	r24, r30
    30f4:	9f 1f       	adc	r25, r31
    30f6:	08 95       	ret

000030f8 <memset>:
    30f8:	dc 01       	movw	r26, r24
    30fa:	01 c0       	rjmp	.+2      	; 0x30fe <memset+0x6>
    30fc:	6d 93       	st	X+, r22
    30fe:	41 50       	subi	r20, 0x01	; 1
    3100:	50 40       	sbci	r21, 0x00	; 0
    3102:	e0 f7       	brcc	.-8      	; 0x30fc <memset+0x4>
    3104:	08 95       	ret

00003106 <strnlen>:
    3106:	fc 01       	movw	r30, r24
    3108:	61 50       	subi	r22, 0x01	; 1
    310a:	70 40       	sbci	r23, 0x00	; 0
    310c:	01 90       	ld	r0, Z+
    310e:	01 10       	cpse	r0, r1
    3110:	d8 f7       	brcc	.-10     	; 0x3108 <strnlen+0x2>
    3112:	80 95       	com	r24
    3114:	90 95       	com	r25
    3116:	8e 0f       	add	r24, r30
    3118:	9f 1f       	adc	r25, r31
    311a:	08 95       	ret

0000311c <fputc>:
    311c:	0f 93       	push	r16
    311e:	1f 93       	push	r17
    3120:	cf 93       	push	r28
    3122:	df 93       	push	r29
    3124:	fb 01       	movw	r30, r22
    3126:	23 81       	ldd	r18, Z+3	; 0x03
    3128:	21 fd       	sbrc	r18, 1
    312a:	03 c0       	rjmp	.+6      	; 0x3132 <fputc+0x16>
    312c:	8f ef       	ldi	r24, 0xFF	; 255
    312e:	9f ef       	ldi	r25, 0xFF	; 255
    3130:	2c c0       	rjmp	.+88     	; 0x318a <fputc+0x6e>
    3132:	22 ff       	sbrs	r18, 2
    3134:	16 c0       	rjmp	.+44     	; 0x3162 <fputc+0x46>
    3136:	46 81       	ldd	r20, Z+6	; 0x06
    3138:	57 81       	ldd	r21, Z+7	; 0x07
    313a:	24 81       	ldd	r18, Z+4	; 0x04
    313c:	35 81       	ldd	r19, Z+5	; 0x05
    313e:	42 17       	cp	r20, r18
    3140:	53 07       	cpc	r21, r19
    3142:	44 f4       	brge	.+16     	; 0x3154 <fputc+0x38>
    3144:	a0 81       	ld	r26, Z
    3146:	b1 81       	ldd	r27, Z+1	; 0x01
    3148:	9d 01       	movw	r18, r26
    314a:	2f 5f       	subi	r18, 0xFF	; 255
    314c:	3f 4f       	sbci	r19, 0xFF	; 255
    314e:	31 83       	std	Z+1, r19	; 0x01
    3150:	20 83       	st	Z, r18
    3152:	8c 93       	st	X, r24
    3154:	26 81       	ldd	r18, Z+6	; 0x06
    3156:	37 81       	ldd	r19, Z+7	; 0x07
    3158:	2f 5f       	subi	r18, 0xFF	; 255
    315a:	3f 4f       	sbci	r19, 0xFF	; 255
    315c:	37 83       	std	Z+7, r19	; 0x07
    315e:	26 83       	std	Z+6, r18	; 0x06
    3160:	14 c0       	rjmp	.+40     	; 0x318a <fputc+0x6e>
    3162:	8b 01       	movw	r16, r22
    3164:	ec 01       	movw	r28, r24
    3166:	fb 01       	movw	r30, r22
    3168:	00 84       	ldd	r0, Z+8	; 0x08
    316a:	f1 85       	ldd	r31, Z+9	; 0x09
    316c:	e0 2d       	mov	r30, r0
    316e:	09 95       	icall
    3170:	89 2b       	or	r24, r25
    3172:	e1 f6       	brne	.-72     	; 0x312c <fputc+0x10>
    3174:	d8 01       	movw	r26, r16
    3176:	16 96       	adiw	r26, 0x06	; 6
    3178:	8d 91       	ld	r24, X+
    317a:	9c 91       	ld	r25, X
    317c:	17 97       	sbiw	r26, 0x07	; 7
    317e:	01 96       	adiw	r24, 0x01	; 1
    3180:	17 96       	adiw	r26, 0x07	; 7
    3182:	9c 93       	st	X, r25
    3184:	8e 93       	st	-X, r24
    3186:	16 97       	sbiw	r26, 0x06	; 6
    3188:	ce 01       	movw	r24, r28
    318a:	df 91       	pop	r29
    318c:	cf 91       	pop	r28
    318e:	1f 91       	pop	r17
    3190:	0f 91       	pop	r16
    3192:	08 95       	ret

00003194 <__ultoa_invert>:
    3194:	fa 01       	movw	r30, r20
    3196:	aa 27       	eor	r26, r26
    3198:	28 30       	cpi	r18, 0x08	; 8
    319a:	51 f1       	breq	.+84     	; 0x31f0 <__ultoa_invert+0x5c>
    319c:	20 31       	cpi	r18, 0x10	; 16
    319e:	81 f1       	breq	.+96     	; 0x3200 <__ultoa_invert+0x6c>
    31a0:	e8 94       	clt
    31a2:	6f 93       	push	r22
    31a4:	6e 7f       	andi	r22, 0xFE	; 254
    31a6:	6e 5f       	subi	r22, 0xFE	; 254
    31a8:	7f 4f       	sbci	r23, 0xFF	; 255
    31aa:	8f 4f       	sbci	r24, 0xFF	; 255
    31ac:	9f 4f       	sbci	r25, 0xFF	; 255
    31ae:	af 4f       	sbci	r26, 0xFF	; 255
    31b0:	b1 e0       	ldi	r27, 0x01	; 1
    31b2:	3e d0       	rcall	.+124    	; 0x3230 <__ultoa_invert+0x9c>
    31b4:	b4 e0       	ldi	r27, 0x04	; 4
    31b6:	3c d0       	rcall	.+120    	; 0x3230 <__ultoa_invert+0x9c>
    31b8:	67 0f       	add	r22, r23
    31ba:	78 1f       	adc	r23, r24
    31bc:	89 1f       	adc	r24, r25
    31be:	9a 1f       	adc	r25, r26
    31c0:	a1 1d       	adc	r26, r1
    31c2:	68 0f       	add	r22, r24
    31c4:	79 1f       	adc	r23, r25
    31c6:	8a 1f       	adc	r24, r26
    31c8:	91 1d       	adc	r25, r1
    31ca:	a1 1d       	adc	r26, r1
    31cc:	6a 0f       	add	r22, r26
    31ce:	71 1d       	adc	r23, r1
    31d0:	81 1d       	adc	r24, r1
    31d2:	91 1d       	adc	r25, r1
    31d4:	a1 1d       	adc	r26, r1
    31d6:	20 d0       	rcall	.+64     	; 0x3218 <__ultoa_invert+0x84>
    31d8:	09 f4       	brne	.+2      	; 0x31dc <__ultoa_invert+0x48>
    31da:	68 94       	set
    31dc:	3f 91       	pop	r19
    31de:	2a e0       	ldi	r18, 0x0A	; 10
    31e0:	26 9f       	mul	r18, r22
    31e2:	11 24       	eor	r1, r1
    31e4:	30 19       	sub	r19, r0
    31e6:	30 5d       	subi	r19, 0xD0	; 208
    31e8:	31 93       	st	Z+, r19
    31ea:	de f6       	brtc	.-74     	; 0x31a2 <__ultoa_invert+0xe>
    31ec:	cf 01       	movw	r24, r30
    31ee:	08 95       	ret
    31f0:	46 2f       	mov	r20, r22
    31f2:	47 70       	andi	r20, 0x07	; 7
    31f4:	40 5d       	subi	r20, 0xD0	; 208
    31f6:	41 93       	st	Z+, r20
    31f8:	b3 e0       	ldi	r27, 0x03	; 3
    31fa:	0f d0       	rcall	.+30     	; 0x321a <__ultoa_invert+0x86>
    31fc:	c9 f7       	brne	.-14     	; 0x31f0 <__ultoa_invert+0x5c>
    31fe:	f6 cf       	rjmp	.-20     	; 0x31ec <__ultoa_invert+0x58>
    3200:	46 2f       	mov	r20, r22
    3202:	4f 70       	andi	r20, 0x0F	; 15
    3204:	40 5d       	subi	r20, 0xD0	; 208
    3206:	4a 33       	cpi	r20, 0x3A	; 58
    3208:	18 f0       	brcs	.+6      	; 0x3210 <__ultoa_invert+0x7c>
    320a:	49 5d       	subi	r20, 0xD9	; 217
    320c:	31 fd       	sbrc	r19, 1
    320e:	40 52       	subi	r20, 0x20	; 32
    3210:	41 93       	st	Z+, r20
    3212:	02 d0       	rcall	.+4      	; 0x3218 <__ultoa_invert+0x84>
    3214:	a9 f7       	brne	.-22     	; 0x3200 <__ultoa_invert+0x6c>
    3216:	ea cf       	rjmp	.-44     	; 0x31ec <__ultoa_invert+0x58>
    3218:	b4 e0       	ldi	r27, 0x04	; 4
    321a:	a6 95       	lsr	r26
    321c:	97 95       	ror	r25
    321e:	87 95       	ror	r24
    3220:	77 95       	ror	r23
    3222:	67 95       	ror	r22
    3224:	ba 95       	dec	r27
    3226:	c9 f7       	brne	.-14     	; 0x321a <__ultoa_invert+0x86>
    3228:	00 97       	sbiw	r24, 0x00	; 0
    322a:	61 05       	cpc	r22, r1
    322c:	71 05       	cpc	r23, r1
    322e:	08 95       	ret
    3230:	9b 01       	movw	r18, r22
    3232:	ac 01       	movw	r20, r24
    3234:	0a 2e       	mov	r0, r26
    3236:	06 94       	lsr	r0
    3238:	57 95       	ror	r21
    323a:	47 95       	ror	r20
    323c:	37 95       	ror	r19
    323e:	27 95       	ror	r18
    3240:	ba 95       	dec	r27
    3242:	c9 f7       	brne	.-14     	; 0x3236 <__ultoa_invert+0xa2>
    3244:	62 0f       	add	r22, r18
    3246:	73 1f       	adc	r23, r19
    3248:	84 1f       	adc	r24, r20
    324a:	95 1f       	adc	r25, r21
    324c:	a0 1d       	adc	r26, r0
    324e:	08 95       	ret

00003250 <_exit>:
    3250:	f8 94       	cli

00003252 <__stop_program>:
    3252:	ff cf       	rjmp	.-2      	; 0x3252 <__stop_program>
